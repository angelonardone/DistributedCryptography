{"version":3,"names":["dialogCss","ChDialogStyle0","DIALOG_BLOCK_START","DIALOG_INLINE_START","DIALOG_DRAGGED_X","DIALOG_DRAGGED_Y","DIALOG_RTL","DIALOG_RTL_VALUE","DRAGGING_CLASS","RESIZING_CLASS","DIALOG_BLOCK_SIZE","DIALOG_INLINE_SIZE","DIALOG_BORDER_BLOCK_START_SIZE","DIALOG_BORDER_BLOCK_END_SIZE","DIALOG_BORDER_INLINE_START_SIZE","DIALOG_BORDER_INLINE_END_SIZE","DIALOG_RTL_CLASS","addCursorInDocument","cursor","document","body","style","resizingCursorDictionary","rtl","fromPxToNumber","pxValue","Number","replace","trim","setProperty","element","property","value","concat","ChDialog","exports","_a","_borderSizeRAF","set","this","_dragRAF","_resizeRAF","_checkPositionWatcher","_checkBorderSizeWatcher","_borderSizeObserver","_rtlWatcher","_draggedDistanceX","_draggedDistanceY","_dragging","_initialDragEvent","_lastDragEvent","_isRTLDirection","_currentEdge","_draggedDistanceXForResize","_draggedDistanceYForResize","_maxBlockSize","_maxInlineSize","_minBlockSize","_minInlineSize","_resizeByDirectionDictionary","block","dialogRect","direction","currentDraggedDistanceY","__classPrivateFieldGet","_this","clientY","newBlockSize","height","newRestrictedBlockSize","forceCSSMinMax","__classPrivateFieldSet","el","inline","currentDraggedDistanceX","clientX","newInlineSize","width","newRestrictedInlineSize","_resizeEdgesAndCornersDictionary","_resizeLayer","_dialogRef","_addDraggingClass","classList","add","_removeDraggingClass","remove","_handleDialogClose","show","dialogClosed","emit","removeEventListener","_evaluateClickOnDocument","capture","_handleMouseDown","event","SyncWithRAF","addEventListener","_trackElementDragRAF","_handleDragEnd","passive","perform","_trackElementDrag","preventDefault","call","stopPropagation","cancel","_showModal","modal","showModal","_closeHandler","e","clickWasMadeOutsideTheDialog","composedPath","includes","_handleEdgeResize","edge","_fixDialogPosition","computedStyle","getComputedStyle","maxBlockSize","maxInlineSize","minBlockSize","minInlineSize","_removeBorderSizeWatcher","_trackElementResizeRAF","_handleResizeEnd","_trackElementResize","getBoundingClientRect","adjustPositionAfterResize","_unfixDialogPosition","resizing","_setBorderSizeWatcher","requestAnimationFrame","resizable","_b","ResizeObserver","_updateBorderSizeRAF","observe","box","_updateBorderSize","borderBlockStartWidth","borderBlockEndWidth","borderInlineStartWidth","borderInlineEndWidth","disconnect","inlineStart","documentElement","left","blockStart","top","removeProperty","class_1","prototype","showChanged","close","resizableChanged","connectedCallback","MutationObserver","isRTL","attributeFilter","componentWillRender","setTimeout","componentDidLoad","disconnectedCallback","render","h","Host","key","class","allowDrag","caption","showHeader","part","onClose","onMouseDown","ref","id","closeButtonAccessibleName","type","onClick","showFooter","name"],"sources":["src/components/dialog/dialog.scss?tag=ch-dialog&encapsulation=shadow","src/components/dialog/dialog.tsx"],"sourcesContent":["@import \"../../common/base\";\r\n\r\n@include button-reset();\r\n@include box-sizing();\r\n\r\n.caption,\r\ndialog {\r\n  @include reset-browser-defaults-properties-1();\r\n}\r\n\r\n$ch-dialog-x: calc(\r\n  (var(--ch-dialog-inline-start) + var(--ch-dialog-dragged-x)) *\r\n    var(--ch-dialog-rtl)\r\n);\r\n\r\n$ch-dialog-y: calc(var(--ch-dialog-block-start) + var(--ch-dialog-dragged-y));\r\n\r\n$ch-dialog-x--same-layer: calc(\r\n  (var(--ch-dialog-inline) + var(--ch-dialog-dragged-x)) * var(--ch-dialog-rtl)\r\n);\r\n\r\n$ch-dialog-y--same-layer: calc(\r\n  var(--ch-dialog-block) + var(--ch-dialog-dragged-y)\r\n);\r\n\r\n::backdrop {\r\n  // Reset browser default\r\n  background: unset;\r\n\r\n  // Needed to capture the click event outside the dialog, in order to close it.\r\n  pointer-events: none;\r\n}\r\n\r\n:host {\r\n  /**\r\n   * @prop --ch-dialog-block-start:\r\n   * This specifies the value used in calculating the dialog's position along the y-axis. The default value centers the dialog along the y-axis.\r\n   * @default calc(50dvh - 50%)\r\n   */\r\n  --ch-dialog-block-start: calc(50dvh - 50%);\r\n\r\n  /**\r\n   * @prop --ch-dialog-inline-start:\r\n   * This specifies the value used in calculating the dialog's position along the x-axis. The default value centers the dialog along the x-axis.\r\n   * @default calc(50dvw - 50%);\r\n   */\r\n  --ch-dialog-inline-start: calc(50dvw - 50%);\r\n\r\n  /**\r\n   * @prop --ch-dialog-block-size:\r\n   * Specifies the block size of the dialog. Useful for scenarios where the\r\n   * dialog is resizable.\r\n   * @default max-content\r\n   */\r\n  --ch-dialog-block-size: max-content;\r\n\r\n  /**\r\n    * @prop --ch-dialog-inline-size:\r\n    * Specifies the inline size of the dialog. Useful for scenarios where the\r\n    * dialog is resizable.\r\n    * @default max-content\r\n    */\r\n  --ch-dialog-inline-size: max-content;\r\n\r\n  /**\r\n    * @prop --ch-dialog-max-block-size:\r\n    * Specifies the maximum block size of the dialog. Useful for scenarios where the\r\n    * dialog is resizable.\r\n    * @default auto\r\n    */\r\n  --ch-dialog-max-block-size: auto;\r\n\r\n  /**\r\n      * @prop --ch-dialog-max-inline-size:\r\n      * Specifies the maximum inline size of the dialog. Useful for scenarios\r\n      * where the dialog is resizable.\r\n      * @default auto\r\n      */\r\n  --ch-dialog-max-inline-size: auto;\r\n\r\n  /**\r\n    * @prop --ch-dialog-min-block-size:\r\n    * Specifies the minimum block size of the dialog. Useful for scenarios where the\r\n    * dialog is resizable.\r\n    * @default auto\r\n    */\r\n  --ch-dialog-min-block-size: auto;\r\n\r\n  /**\r\n     * @prop --ch-dialog-min-inline-size:\r\n     * Specifies the minimum inline size of the dialog. Useful for scenarios\r\n     * where the dialog is resizable.\r\n     * @default auto\r\n     */\r\n  --ch-dialog-min-inline-size: auto;\r\n\r\n  /**\r\n    * @prop --ch-dialog-resize-threshold:\r\n    * Specifies the size of the threshold to resize the dialog.\r\n    * @default 8px\r\n    */\r\n  --ch-dialog-resize-threshold: 8px;\r\n\r\n  --ch-dialog-resize-threshold--half-negative: calc(\r\n    var(--ch-dialog-resize-threshold) * -0.5\r\n  );\r\n\r\n  --ch-dialog-border-inline-start-width: 0px;\r\n  --ch-dialog-border-inline-end-width: 0px;\r\n  --ch-dialog-border-block-start-width: 0px;\r\n  --ch-dialog-border-block-end-width: 0px;\r\n\r\n  --ch-dialog-resize__inline-start: calc(\r\n    var(--ch-dialog-resize-threshold--half-negative) -\r\n      var(--ch-dialog-border-inline-start-width) * 0.5\r\n  );\r\n\r\n  --ch-dialog-resize__inline-end: calc(\r\n    var(--ch-dialog-resize-threshold--half-negative) -\r\n      var(--ch-dialog-border-inline-end-width) * 0.5\r\n  );\r\n\r\n  --ch-dialog-resize__block-start: calc(\r\n    var(--ch-dialog-resize-threshold--half-negative) -\r\n      var(--ch-dialog-border-block-start-width) * 0.5\r\n  );\r\n\r\n  --ch-dialog-resize__block-end: calc(\r\n    var(--ch-dialog-resize-threshold--half-negative) -\r\n      var(--ch-dialog-border-block-end-width) * 0.5\r\n  );\r\n\r\n  --ch-dialog-dragged-x: 0px;\r\n  --ch-dialog-dragged-y: 0px;\r\n  --ch-dialog-rtl: 1;\r\n}\r\n\r\n// Modal dialog will cover all the containing element to give us an alternative\r\n// to style the backdrop. Since the backdrop can not be styled outside the\r\n// Shadow, we use the ch-dialog tag as the backdrop in this case\r\n:host(.ch-dialog--modal) {\r\n  // Required to ensure that the ch-dialog element does not take up space in\r\n  // the containing element\r\n  position: fixed;\r\n  inset: 0;\r\n}\r\n\r\n// Non modal mode won't render the box of the ch-dialog tag\r\n:host(.ch-dialog--non-modal) {\r\n  display: contents;\r\n}\r\n\r\n:host(.ch-dialog--hidden) {\r\n  display: none;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//             Header\r\n// - - - - - - - - - - - - - - - -\r\n.header {\r\n  grid-area: header;\r\n  display: grid;\r\n  grid-template: \"caption close-button\" 1fr / 1fr max-content;\r\n  align-items: center;\r\n}\r\n\r\n.caption {\r\n  grid-area: caption;\r\n}\r\n\r\n.close-button {\r\n  grid-area: close-button;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//           Dialog\r\n// - - - - - - - - - - - - - - - -\r\ndialog {\r\n  display: grid;\r\n  grid-template: \"header\" max-content \"content\" 1fr \"footer\" max-content / 1fr;\r\n\r\n  // Reset browser default\r\n  margin: unset;\r\n  position: fixed;\r\n  overflow: visible;\r\n\r\n  inline-size: var(--ch-dialog-inline-size);\r\n  block-size: var(--ch-dialog-block-size);\r\n  min-inline-size: var(--ch-dialog-min-inline-size);\r\n  min-block-size: var(--ch-dialog-min-block-size);\r\n  max-inline-size: var(--ch-dialog-max-inline-size);\r\n  max-block-size: var(--ch-dialog-max-block-size);\r\n\r\n  // Positioning\r\n  inset-block-start: 0;\r\n  inset-inline-start: 0;\r\n  translate: $ch-dialog-x $ch-dialog-y;\r\n}\r\n\r\n.content {\r\n  grid-area: content;\r\n  display: grid;\r\n}\r\n\r\n.footer {\r\n  grid-area: footer;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//              Drag\r\n// - - - - - - - - - - - - - - - -\r\n.gx-dialog-dragging {\r\n  cursor: move;\r\n  // Remove any type of pointer when dragging, to make \"cursor: move\" effective\r\n  ::slotted(*) {\r\n    pointer-events: none !important;\r\n    user-select: none;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//            Resizable\r\n// - - - - - - - - - - - - - - - -\r\n:host(.ch-dialog-resizing) {\r\n  pointer-events: none;\r\n  user-select: none;\r\n}\r\n\r\n.edge {\r\n  &__block-start,\r\n  &__block-end {\r\n    position: fixed;\r\n    // This calc improves edge positioning when the border-width is much larger\r\n    // than the threshold\r\n    inset-inline: min(\r\n        0px,\r\n        calc(\r\n          (\r\n              var(--ch-dialog-resize-threshold) -\r\n                var(--ch-dialog-border-inline-start-width)\r\n            ) / 2\r\n        )\r\n      )\r\n      min(\r\n        0px,\r\n        calc(\r\n          (\r\n              var(--ch-dialog-resize-threshold) -\r\n                var(--ch-dialog-border-inline-end-width)\r\n            ) / 2\r\n        )\r\n      );\r\n    block-size: var(--ch-dialog-resize-threshold);\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  &__inline-start,\r\n  &__inline-end {\r\n    position: fixed;\r\n    // This calc improves edge positioning when the border-width is much larger\r\n    // than the threshold\r\n    inset-block: min(\r\n        0px,\r\n        calc(\r\n          (\r\n              var(--ch-dialog-resize-threshold) -\r\n                var(--ch-dialog-border-block-start-width)\r\n            ) / 2\r\n        )\r\n      )\r\n      min(\r\n        0px,\r\n        calc(\r\n          (\r\n              var(--ch-dialog-resize-threshold) -\r\n                var(--ch-dialog-border-block-end-width)\r\n            ) / 2\r\n        )\r\n      );\r\n    inline-size: var(--ch-dialog-resize-threshold);\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  &__block-start {\r\n    inset-block-start: var(--ch-dialog-resize__block-start);\r\n  }\r\n\r\n  &__block-end {\r\n    inset-block-end: var(--ch-dialog-resize__block-end);\r\n  }\r\n\r\n  &__inline-start {\r\n    inset-inline-start: var(--ch-dialog-resize__inline-start);\r\n  }\r\n\r\n  &__inline-end {\r\n    inset-inline-end: var(--ch-dialog-resize__inline-end);\r\n  }\r\n}\r\n\r\n.corner {\r\n  &__block-start-inline-start,\r\n  &__block-end-inline-end {\r\n    position: fixed;\r\n    block-size: var(--ch-dialog-resize-threshold);\r\n    inline-size: var(--ch-dialog-resize-threshold);\r\n    cursor: nwse-resize;\r\n  }\r\n\r\n  &__block-start-inline-end,\r\n  &__block-end-inline-start {\r\n    position: fixed;\r\n    block-size: var(--ch-dialog-resize-threshold);\r\n    inline-size: var(--ch-dialog-resize-threshold);\r\n    cursor: nesw-resize;\r\n  }\r\n\r\n  &__block-start-inline-start {\r\n    inset-block-start: var(--ch-dialog-resize__block-start);\r\n    inset-inline-start: var(--ch-dialog-resize__inline-start);\r\n  }\r\n\r\n  &__block-end-inline-end {\r\n    inset-block-end: var(--ch-dialog-resize__block-end);\r\n    inset-inline-end: var(--ch-dialog-resize__inline-end);\r\n  }\r\n\r\n  &__block-start-inline-end {\r\n    inset-block-start: var(--ch-dialog-resize__block-start);\r\n    inset-inline-end: var(--ch-dialog-resize__inline-end);\r\n  }\r\n\r\n  &__block-end-inline-start {\r\n    inset-block-end: var(--ch-dialog-resize__block-end);\r\n    inset-inline-start: var(--ch-dialog-resize__inline-start);\r\n  }\r\n}\r\n\r\n// \"Rotate\" resize cursors for the corners\r\n:host(.ch-dialog-rtl) {\r\n  .corner__block-start-inline-start,\r\n  .corner__block-end-inline-end {\r\n    cursor: nesw-resize;\r\n  }\r\n}\r\n\r\n:host(.ch-dialog-rtl) {\r\n  .corner__block-start-inline-end,\r\n  .corner__block-end-inline-start {\r\n    cursor: nwse-resize;\r\n  }\r\n}\r\n\r\n// Useful for observing changes in border size\r\n.resize-layer {\r\n  position: fixed;\r\n  inset: 0;\r\n  pointer-events: none;\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Watch,\r\n  Prop,\r\n  State,\r\n  h\r\n} from \"@stencil/core\";\r\nimport { ChDialogResizeElement } from \"./types\";\r\nimport { forceCSSMinMax, isRTL } from \"../../common/utils\";\r\nimport { SyncWithRAF } from \"../../common/sync-with-frames\";\r\n\r\n// Custom vars\r\nconst DIALOG_BLOCK_START = \"--ch-dialog-block-start\";\r\nconst DIALOG_INLINE_START = \"--ch-dialog-inline-start\";\r\nconst DIALOG_DRAGGED_X = \"--ch-dialog-dragged-x\";\r\nconst DIALOG_DRAGGED_Y = \"--ch-dialog-dragged-y\";\r\n\r\nconst DIALOG_RTL = \"--ch-dialog-rtl\";\r\nconst DIALOG_RTL_VALUE = \"-1\";\r\nconst DRAGGING_CLASS = \"gx-dialog-dragging\";\r\nconst RESIZING_CLASS = \"ch-dialog-resizing\";\r\n\r\nconst DIALOG_BLOCK_SIZE = \"--ch-dialog-block-size\";\r\nconst DIALOG_INLINE_SIZE = \"--ch-dialog-inline-size\";\r\n\r\nconst DIALOG_BORDER_BLOCK_START_SIZE = \"--ch-dialog-border-block-start-width\";\r\nconst DIALOG_BORDER_BLOCK_END_SIZE = \"--ch-dialog-border-block-end-width\";\r\nconst DIALOG_BORDER_INLINE_START_SIZE = \"--ch-dialog-border-inline-start-width\";\r\nconst DIALOG_BORDER_INLINE_END_SIZE = \"--ch-dialog-border-inline-end-width\";\r\n\r\nconst DIALOG_RTL_CLASS = \"ch-dialog-rtl\";\r\n\r\nconst addCursorInDocument = (cursor: string) =>\r\n  (document.body.style.cursor = cursor);\r\n\r\nconst resizingCursorDictionary: {\r\n  [key in ChDialogResizeElement]: (rtl: boolean) => void;\r\n} = {\r\n  \"block-start\": () => addCursorInDocument(\"ns-resize\"),\r\n\r\n  \"block-end\": () => addCursorInDocument(\"ns-resize\"),\r\n\r\n  \"inline-start\": () => addCursorInDocument(\"ew-resize\"),\r\n\r\n  \"inline-end\": () => addCursorInDocument(\"ew-resize\"),\r\n\r\n  \"block-start-inline-start\": rtl =>\r\n    addCursorInDocument(rtl ? \"nesw-resize\" : \"nwse-resize\"),\r\n\r\n  \"block-start-inline-end\": rtl =>\r\n    addCursorInDocument(rtl ? \"nwse-resize\" : \"nesw-resize\"),\r\n\r\n  \"block-end-inline-start\": rtl =>\r\n    addCursorInDocument(rtl ? \"nwse-resize\" : \"nesw-resize\"),\r\n\r\n  \"block-end-inline-end\": rtl =>\r\n    addCursorInDocument(rtl ? \"nesw-resize\" : \"nwse-resize\")\r\n};\r\n\r\n// Utils\r\nconst fromPxToNumber = (pxValue: string) =>\r\n  Number(pxValue.replace(\"px\", \"\").trim());\r\n\r\nconst setProperty = (element: HTMLElement, property: string, value: number) =>\r\n  element.style.setProperty(property, `${value}px`);\r\n\r\n/**\r\n * The `ch-dialog` component represents a modal or non-modal dialog box or other\r\n * interactive component.\r\n *\r\n * @part dialog - The dialog html element, which is the first element inside the host.\r\n * @part footer - The dialog footer which is only rendered if `showFooter === true`. The footer displays the caption and a close button.\r\n * @part header - The dialog header which is only rendered if `showHeader === true`. The header displays the caption and a close button.\r\n * @part content - The dialog content. It is a div element that acts as a wrapper of the slotted content.\r\n *\r\n * @part edge - Represents any of the dialog edges that appear before, after, above or below the dialog. These edges are used to resize the dialog dimensions by dragging.\r\n * @part edge-block-start - Represents the \"block-start\" dialog edge (see also \"edge\" part).\r\n * @part edge-block-end - Represents the \"block-end\" dialog edge (see also \"edge\" part).\r\n * @part edge-inline-end - Represents the \"inline-end\" dialog edge (see also \"edge\" part).\r\n * @part edge-inline-start - Represents the \"inline-start\" dialog edge (see also \"edge\" part).\r\n *\r\n * @part corner - Represents any of the dialog corners that appear in-between the edges. These corners are used to resize the dialog dimensions by dragging.\r\n * @part corner-block-start-inline-start - Represents the dialog corner in-between the \"edge-block-start\" and \"edge-inline-start\" parts (see also \"corner\" part).\r\n * @part corner-block-start-inline-end - Represents the dialog corner in-between the \"edge-block-start\" and \"edge-inline-end\" parts (see also \"corner\" part).\r\n * @part corner-block-end-inline-start - Represents the dialog corner in-between the \"edge-block-end\" and \"edge-inline-start\" parts (see also \"corner\" part).\r\n * @part corner-block-end-inline-end - Represents the dialog corner in-between the \"edge-block-end\" and \"edge-inline-end\" parts (see also \"corner\" part).\r\n *\r\n * @slot content - Main content of the dialog.\r\n * @slot footer - Rendered below the content of the dialog if `showFooter === true`. It is used to place content that is considered footer of the dialog.\r\n */\r\n@Component({\r\n  tag: \"ch-dialog\",\r\n  styleUrl: \"dialog.scss\",\r\n  shadow: true\r\n})\r\nexport class ChDialog {\r\n  // Sync computations with frames\r\n  #borderSizeRAF: SyncWithRAF; // Don't allocate memory until the control is rendered\r\n  #dragRAF: SyncWithRAF; // Don't allocate memory until needed when dragging\r\n  #resizeRAF: SyncWithRAF; // Don't allocate memory until needed when resizing\r\n\r\n  // Watchers\r\n  #checkPositionWatcher = false;\r\n  #checkBorderSizeWatcher = false;\r\n  #borderSizeObserver: ResizeObserver;\r\n  #rtlWatcher: MutationObserver;\r\n\r\n  // Drag\r\n  #draggedDistanceX: number = 0;\r\n  #draggedDistanceY: number = 0;\r\n  #dragging = false;\r\n  #initialDragEvent: MouseEvent;\r\n  #lastDragEvent: MouseEvent;\r\n  #isRTLDirection: boolean;\r\n\r\n  // Resize\r\n  #currentEdge: ChDialogResizeElement;\r\n  #draggedDistanceXForResize: number = 0;\r\n  #draggedDistanceYForResize: number = 0;\r\n  #maxBlockSize: number = 0;\r\n  #maxInlineSize: number = 0;\r\n  #minBlockSize: number = 0;\r\n  #minInlineSize: number = 0;\r\n\r\n  #resizeByDirectionDictionary = {\r\n    block: (dialogRect: DOMRect, direction: \"start\" | \"end\") => {\r\n      let currentDraggedDistanceY =\r\n        this.#lastDragEvent.clientY - this.#initialDragEvent.clientY;\r\n\r\n      // Start direction inverts the increment\r\n      if (direction === \"start\") {\r\n        currentDraggedDistanceY = -currentDraggedDistanceY;\r\n      }\r\n\r\n      const newBlockSize = dialogRect.height + currentDraggedDistanceY;\r\n      const newRestrictedBlockSize = forceCSSMinMax(\r\n        newBlockSize,\r\n        this.#minBlockSize,\r\n        this.#maxBlockSize\r\n      );\r\n\r\n      // Do not apply resizes or translations if the control is at the minimum\r\n      // or maximum size\r\n      if (newRestrictedBlockSize === dialogRect.height) {\r\n        return;\r\n      }\r\n\r\n      // - - - - - - - - - - - - - DOM write operations - - - - - - - - - - - - -\r\n      // By resizing the start edge the control is translated to improve the UX\r\n      if (direction === \"start\") {\r\n        this.#draggedDistanceYForResize -= currentDraggedDistanceY;\r\n        setProperty(this.el, DIALOG_DRAGGED_Y, this.#draggedDistanceYForResize);\r\n      }\r\n\r\n      setProperty(this.el, DIALOG_BLOCK_SIZE, newRestrictedBlockSize);\r\n    },\r\n\r\n    inline: (dialogRect: DOMRect, direction: \"start\" | \"end\") => {\r\n      let currentDraggedDistanceX =\r\n        this.#lastDragEvent.clientX - this.#initialDragEvent.clientX;\r\n\r\n      if (this.#isRTLDirection) {\r\n        currentDraggedDistanceX = -currentDraggedDistanceX;\r\n      }\r\n\r\n      // Start direction inverts the increment\r\n      if (direction === \"start\") {\r\n        currentDraggedDistanceX = -currentDraggedDistanceX;\r\n      }\r\n\r\n      const newInlineSize = dialogRect.width + currentDraggedDistanceX;\r\n      const newRestrictedInlineSize = forceCSSMinMax(\r\n        newInlineSize,\r\n        this.#minInlineSize,\r\n        this.#maxInlineSize\r\n      );\r\n\r\n      // Do not apply resizes or translations if the control is at the minimum\r\n      // or maximum size\r\n      if (newRestrictedInlineSize === dialogRect.width) {\r\n        return;\r\n      }\r\n\r\n      // - - - - - - - - - - - - - DOM write operations - - - - - - - - - - - - -\r\n      // By resizing the start edge the control is translated to improve the UX\r\n      if (direction === \"start\") {\r\n        this.#draggedDistanceXForResize -= currentDraggedDistanceX;\r\n\r\n        setProperty(this.el, DIALOG_DRAGGED_X, this.#draggedDistanceXForResize);\r\n      }\r\n\r\n      setProperty(this.el, DIALOG_INLINE_SIZE, newRestrictedInlineSize);\r\n    }\r\n  } as const;\r\n\r\n  #resizeEdgesAndCornersDictionary: {\r\n    [key in ChDialogResizeElement]: (dialogRect: DOMRect) => void;\r\n  } = {\r\n    \"block-start\": dialogRect =>\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"start\"),\r\n\r\n    \"block-end\": dialogRect =>\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"end\"),\r\n\r\n    \"inline-start\": dialogRect =>\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"start\"),\r\n\r\n    \"inline-end\": dialogRect =>\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"end\"),\r\n\r\n    \"block-start-inline-start\": dialogRect => {\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"start\");\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"start\");\r\n    },\r\n\r\n    \"block-start-inline-end\": dialogRect => {\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"start\");\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"end\");\r\n    },\r\n\r\n    \"block-end-inline-start\": dialogRect => {\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"end\");\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"start\");\r\n    },\r\n\r\n    \"block-end-inline-end\": dialogRect => {\r\n      this.#resizeByDirectionDictionary.block(dialogRect, \"end\");\r\n      this.#resizeByDirectionDictionary.inline(dialogRect, \"end\");\r\n    }\r\n  };\r\n\r\n  // Refs\r\n  #resizeLayer: HTMLDivElement;\r\n  #dialogRef: HTMLDialogElement;\r\n\r\n  @Element() el: HTMLChDialogElement;\r\n\r\n  @State() dragging = false;\r\n  @State() relativeDialog = false;\r\n  @State() resizing = false;\r\n\r\n  /**\r\n   * `true` if the dialog should be repositioned after resize.\r\n   */\r\n  @Prop() readonly adjustPositionAfterResize: boolean = false;\r\n\r\n  /**\r\n   * \"box\" will allow the dialog to be draggable from both the header and the\r\n   * content. \"header\" will allow the dialog to be draggable only from the header.\r\n   * \"no\" disables dragging completely.\r\n   */\r\n  @Prop() readonly allowDrag: \"box\" | \"header\" | \"no\" = \"no\";\r\n\r\n  /**\r\n   * Refers to the dialog title. I will ve visible if 'showHeader´is true.\r\n   */\r\n  @Prop() readonly caption: string;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element. This label is used for the close button of the header.\r\n   */\r\n  @Prop() readonly closeButtonAccessibleName?: string;\r\n\r\n  /**\r\n   * Specifies whether the dialog is shown or not.\r\n   */\r\n  @Prop({ mutable: true }) show: boolean = false;\r\n  @Watch(\"show\")\r\n  showChanged(show: boolean) {\r\n    // Schedule update for watchers\r\n    this.#checkBorderSizeWatcher = true;\r\n    this.#checkPositionWatcher = true;\r\n\r\n    // Update the dialog visualization\r\n    if (show) {\r\n      this.#showModal();\r\n    } else {\r\n      this.#dialogRef.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Specifies whether the dialog is a modal or not. Modal dialog boxes\r\n   * interrupt interaction with the rest of the page being inert, while\r\n   * non-modal dialog boxes allow interaction with the rest of the page.\r\n   *\r\n   * Note: If `show !== true`, this property does not reflect changes on\r\n   * runtime, since at the time of writing browsers do not support switching\r\n   * from modal to not-modal, (or vice-versa).\r\n   */\r\n  // eslint-disable-next-line @stencil-community/ban-default-true\r\n  @Prop() readonly modal: boolean = true;\r\n\r\n  /**\r\n   * Specifies whether the control can be resized. If `true` the control can be\r\n   * resized at runtime by dragging the edges or corners.\r\n   */\r\n  @Prop() readonly resizable: boolean = false;\r\n  @Watch(\"resizable\")\r\n  resizableChanged() {\r\n    // Schedule update for border size watcher\r\n    this.#checkBorderSizeWatcher = true;\r\n  }\r\n\r\n  /**\r\n   * Specifies whether the dialog footer is hidden or visible.\r\n   */\r\n  @Prop() readonly showFooter: boolean = false;\r\n\r\n  /**\r\n   * Specifies whether the dialog header is hidden or visible.\r\n   */\r\n  @Prop() readonly showHeader: boolean = false;\r\n\r\n  /**\r\n   * Emitted when the dialog is closed.\r\n   */\r\n  @Event() dialogClosed: EventEmitter;\r\n\r\n  connectedCallback() {\r\n    // Set RTL watcher\r\n    this.#rtlWatcher = new MutationObserver(() => {\r\n      this.#isRTLDirection = isRTL();\r\n\r\n      if (this.#isRTLDirection) {\r\n        this.el.style.setProperty(DIALOG_RTL, DIALOG_RTL_VALUE);\r\n        this.el.classList.add(DIALOG_RTL_CLASS);\r\n      } else {\r\n        this.el.style.removeProperty(DIALOG_RTL);\r\n        this.el.classList.remove(DIALOG_RTL_CLASS);\r\n      }\r\n    });\r\n\r\n    // Observe the dir attribute in the document\r\n    this.#rtlWatcher.observe(document.documentElement, {\r\n      attributeFilter: [\"dir\"]\r\n    });\r\n  }\r\n\r\n  componentWillRender() {\r\n    this.#checkPositionWatcher &&= false;\r\n\r\n    if (this.#checkBorderSizeWatcher) {\r\n      this.#checkBorderSizeWatcher = false;\r\n\r\n      // Wait until the resize edges have been rendered\r\n      requestAnimationFrame(() => setTimeout(this.#setBorderSizeWatcher));\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.show) {\r\n      // Schedule update for watchers\r\n      this.#checkBorderSizeWatcher = true;\r\n      this.#checkPositionWatcher = true;\r\n      this.#showModal();\r\n    }\r\n\r\n    // Initialize watchers\r\n    this.#setBorderSizeWatcher();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Defensive programming. Make sure the document does not have any unwanted handler\r\n    this.#handleDragEnd();\r\n    this.#removeBorderSizeWatcher();\r\n\r\n    // Disconnect RTL watcher\r\n    if (this.#rtlWatcher) {\r\n      this.#rtlWatcher.disconnect();\r\n      this.#rtlWatcher = null; // Free the memory\r\n    }\r\n\r\n    document.removeEventListener(\"click\", this.#evaluateClickOnDocument, {\r\n      capture: true\r\n    });\r\n  }\r\n\r\n  #addDraggingClass = () => {\r\n    if (!this.#dragging) {\r\n      this.#dialogRef.classList.add(DRAGGING_CLASS);\r\n      this.#dragging = true;\r\n    }\r\n  };\r\n\r\n  #removeDraggingClass = () => {\r\n    this.#dialogRef.classList.remove(DRAGGING_CLASS);\r\n    this.#dragging = false;\r\n  };\r\n\r\n  #handleDialogClose = () => {\r\n    this.show = false;\r\n    // Emit events only when the action is committed by the user\r\n    this.dialogClosed.emit();\r\n    document.removeEventListener(\"click\", this.#evaluateClickOnDocument, {\r\n      capture: true\r\n    });\r\n  };\r\n\r\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  //                           Drag implementation\r\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  #handleMouseDown = (event: MouseEvent) => {\r\n    // We should not add preventDefault in this instance, because we would\r\n    // prevent some normal actions like clicking a button or focusing an input.\r\n\r\n    this.#dragRAF ||= new SyncWithRAF();\r\n    this.#initialDragEvent = event;\r\n\r\n    // Add listeners\r\n    document.addEventListener(\"mousemove\", this.#trackElementDragRAF, {\r\n      capture: true\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true,\r\n      passive: true\r\n    });\r\n  };\r\n\r\n  #trackElementDragRAF = (event: MouseEvent) => {\r\n    this.#dragRAF.perform(this.#trackElementDrag, () => {\r\n      // Improve drag UX by not selecting any button or clicking interactive elements\r\n      event.preventDefault();\r\n\r\n      // We remove the pointer-events and user-select properties after the first\r\n      // \"mousemove\", otherwise double clicking to select text would not work.\r\n\r\n      this.#addDraggingClass();\r\n\r\n      this.#lastDragEvent = event;\r\n    });\r\n  };\r\n\r\n  #trackElementDrag = () => {\r\n    // - - - - - - - - - - - - - DOM read operations - - - - - - - - - - - - -\r\n    const currentDraggedDistanceX =\r\n      this.#lastDragEvent.clientX - this.#initialDragEvent.clientX;\r\n    const currentDraggedDistanceY =\r\n      this.#lastDragEvent.clientY - this.#initialDragEvent.clientY;\r\n\r\n    // - - - - - - - - - - - - - DOM write operations - - - - - - - - - - - - -\r\n    // Update total dragged distance in X\r\n    if (currentDraggedDistanceX !== 0) {\r\n      this.#draggedDistanceX += this.#isRTLDirection // Set dragged distance depending on RTL value\r\n        ? -currentDraggedDistanceX\r\n        : currentDraggedDistanceX;\r\n      setProperty(this.el, DIALOG_DRAGGED_X, this.#draggedDistanceX);\r\n    }\r\n\r\n    // Update total dragged distance in Y\r\n    if (currentDraggedDistanceY !== 0) {\r\n      this.#draggedDistanceY += currentDraggedDistanceY;\r\n      setProperty(this.el, DIALOG_DRAGGED_Y, this.#draggedDistanceY);\r\n    }\r\n\r\n    // Update last point\r\n    this.#initialDragEvent = this.#lastDragEvent;\r\n  };\r\n\r\n  #handleDragEnd = (event?: MouseEvent) => {\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n    // Cancel RAF to prevent access to undefined references\r\n    if (this.#dragRAF) {\r\n      this.#dragRAF.cancel();\r\n    }\r\n\r\n    // Remove listeners\r\n    document.removeEventListener(\"mousemove\", this.#trackElementDragRAF, {\r\n      capture: true\r\n    });\r\n\r\n    document.removeEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true\r\n    });\r\n\r\n    this.#removeDraggingClass();\r\n\r\n    // Free the memory\r\n    this.#dragRAF = null;\r\n    this.#initialDragEvent = null;\r\n    this.#lastDragEvent = null;\r\n  };\r\n\r\n  #showModal = () => {\r\n    if (this.modal) {\r\n      this.#dialogRef.showModal();\r\n      document.addEventListener(\"click\", this.#evaluateClickOnDocument, {\r\n        capture: true\r\n      });\r\n    } else {\r\n      this.#dialogRef.show();\r\n    }\r\n  };\r\n\r\n  #closeHandler = () => {\r\n    this.show = false;\r\n  };\r\n\r\n  #evaluateClickOnDocument = (e: MouseEvent) => {\r\n    const clickWasMadeOutsideTheDialog = !e\r\n      .composedPath()\r\n      .includes(this.#dialogRef);\r\n\r\n    if (clickWasMadeOutsideTheDialog) {\r\n      this.#handleDialogClose();\r\n    }\r\n  };\r\n\r\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  //                          Resize implementation\r\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  #handleEdgeResize = (edge: ChDialogResizeElement) => (event: MouseEvent) => {\r\n    this.#fixDialogPosition();\r\n\r\n    // this.resizing = true;\r\n    this.#resizeRAF ||= new SyncWithRAF();\r\n    this.#currentEdge = edge;\r\n    this.#initialDragEvent = event;\r\n\r\n    // Specify the cursor for the resize operation. Useful to avoid showing\r\n    // incorrect cursors during resizing\r\n    resizingCursorDictionary[this.#currentEdge](this.#isRTLDirection);\r\n\r\n    // Initialize drag variables to improve block-start and inline-start\r\n    // resizing. Otherwise, the dialog will always remain in the same X and Y\r\n    // position, even when the block-start or inline-start edges are resized\r\n    this.#draggedDistanceXForResize = this.#draggedDistanceX;\r\n    this.#draggedDistanceYForResize = this.#draggedDistanceY;\r\n\r\n    // Get minimum and maximum sizes on first resize operation\r\n    const computedStyle = getComputedStyle(this.#dialogRef);\r\n    this.#maxBlockSize = fromPxToNumber(computedStyle.maxBlockSize);\r\n    this.#maxInlineSize = fromPxToNumber(computedStyle.maxInlineSize);\r\n    this.#minBlockSize = fromPxToNumber(computedStyle.minBlockSize);\r\n    this.#minInlineSize = fromPxToNumber(computedStyle.minInlineSize);\r\n\r\n    // Avoid watching border changes during the resize\r\n    this.#removeBorderSizeWatcher();\r\n\r\n    // Avoid listener on document click\r\n    document.removeEventListener(\"click\", this.#evaluateClickOnDocument, {\r\n      capture: true\r\n    });\r\n\r\n    // Add listeners\r\n    document.addEventListener(\"mousemove\", this.#trackElementResizeRAF, {\r\n      capture: true\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", this.#handleResizeEnd, {\r\n      capture: true,\r\n      passive: true\r\n    });\r\n  };\r\n\r\n  #trackElementResizeRAF = (event: MouseEvent) => {\r\n    this.#resizeRAF.perform(this.#trackElementResize, () => {\r\n      // Improve drag UX by not selecting any button or clicking interactive\r\n      // elements\r\n      event.preventDefault();\r\n\r\n      // We remove the pointer-events and user-select properties after the first\r\n      // \"mousemove\", otherwise double clicking to select text would not work\r\n      this.#addDraggingClass();\r\n\r\n      this.#lastDragEvent = event;\r\n    });\r\n  };\r\n\r\n  #trackElementResize = () => {\r\n    // - - - - - - - - - - - - - DOM read operations - - - - - - - - - - - - -\r\n    const dialogRect = this.#dialogRef.getBoundingClientRect();\r\n\r\n    // - - - - - - - - - - - - - DOM write operations - - - - - - - - - - - - -\r\n    this.#resizeEdgesAndCornersDictionary[this.#currentEdge](dialogRect);\r\n\r\n    // Update last point\r\n    this.#initialDragEvent = this.#lastDragEvent;\r\n  };\r\n\r\n  #handleResizeEnd = () => {\r\n    if (this.adjustPositionAfterResize) {\r\n      this.#unfixDialogPosition();\r\n    } else {\r\n      // If the resize was performed from a block-start or inline-start edge, or any\r\n      // of the continuous vertices, it is necessary to reset DIALOG_BLOCK_START or\r\n      // DIALOG_INLINE_START, as they configure the block-start or inline-start of\r\n      // the dialog. This is only necessary if the dialog is not repositioned after\r\n      // the resize.\r\n      this.#fixDialogPosition();\r\n    }\r\n\r\n    this.resizing = false;\r\n\r\n    // Cancel RAF to prevent access to undefined references\r\n    if (this.#resizeRAF) {\r\n      this.#resizeRAF.cancel();\r\n    }\r\n\r\n    // Reset document cursor back to normal\r\n    document.body.style.cursor = null;\r\n\r\n    // Reset dragged distance to its original value\r\n    setProperty(this.el, DIALOG_DRAGGED_X, this.#draggedDistanceX);\r\n    setProperty(this.el, DIALOG_DRAGGED_Y, this.#draggedDistanceY);\r\n\r\n    // Start again watching border size changes\r\n    this.#setBorderSizeWatcher();\r\n\r\n    // Remove listeners\r\n    document.removeEventListener(\"mousemove\", this.#trackElementResizeRAF, {\r\n      capture: true\r\n    });\r\n\r\n    document.removeEventListener(\"mouseup\", this.#handleResizeEnd, {\r\n      capture: true\r\n    });\r\n\r\n    this.#removeDraggingClass();\r\n\r\n    // Free the memory\r\n    this.#resizeRAF = null;\r\n    this.#initialDragEvent = null;\r\n    this.#lastDragEvent = null;\r\n\r\n    if (this.modal) {\r\n      // requestAnimationFrame is needed to prevent the dialog from closing, by\r\n      // scheduling the close after the document click.\r\n\r\n      requestAnimationFrame(() => {\r\n        document.addEventListener(\"click\", this.#evaluateClickOnDocument, {\r\n          capture: true\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This observer watches the size of each border in the control to adjust the\r\n   * position of the invisible resize elements (edges and corners).\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #setBorderSizeWatcher = () => {\r\n    if (!this.resizable || !this.show) {\r\n      this.#removeBorderSizeWatcher();\r\n      return;\r\n    }\r\n\r\n    this.#borderSizeRAF ??= new SyncWithRAF();\r\n    this.#borderSizeObserver = new ResizeObserver(this.#updateBorderSizeRAF);\r\n\r\n    // Observe the size of the edges to know if the border\r\n    this.#borderSizeObserver.observe(this.el, { box: \"border-box\" });\r\n    this.#borderSizeObserver.observe(this.#resizeLayer);\r\n  };\r\n\r\n  #updateBorderSizeRAF = () => {\r\n    this.#borderSizeRAF.perform(this.#updateBorderSize);\r\n  };\r\n\r\n  #updateBorderSize = () => {\r\n    // - - - - - - - - - - - - - DOM read operations - - - - - - - - - - - - -\r\n    const computedStyle = getComputedStyle(this.el);\r\n\r\n    // - - - - - - - - - - - - - DOM write operations - - - - - - - - - - - - -\r\n    this.el.style.setProperty(\r\n      DIALOG_BORDER_BLOCK_START_SIZE,\r\n      computedStyle.borderBlockStartWidth\r\n    );\r\n\r\n    this.el.style.setProperty(\r\n      DIALOG_BORDER_BLOCK_END_SIZE,\r\n      computedStyle.borderBlockEndWidth\r\n    );\r\n\r\n    this.el.style.setProperty(\r\n      DIALOG_BORDER_INLINE_START_SIZE,\r\n      computedStyle.borderInlineStartWidth\r\n    );\r\n\r\n    this.el.style.setProperty(\r\n      DIALOG_BORDER_INLINE_END_SIZE,\r\n      computedStyle.borderInlineEndWidth\r\n    );\r\n  };\r\n\r\n  #removeBorderSizeWatcher = () => {\r\n    if (this.#borderSizeObserver) {\r\n      this.#borderSizeObserver.disconnect();\r\n      this.#borderSizeObserver = null; // Free the memory\r\n    }\r\n\r\n    this.#borderSizeRAF = null; // Free the memory\r\n  };\r\n\r\n  #fixDialogPosition = () => {\r\n    const dialogRect = this.#dialogRef.getBoundingClientRect();\r\n    const inlineStart = this.#isRTLDirection\r\n      ? document.documentElement.getBoundingClientRect().width -\r\n        (dialogRect.left + dialogRect.width)\r\n      : dialogRect.left;\r\n    const blockStart = dialogRect.top;\r\n\r\n    setProperty(\r\n      this.#dialogRef,\r\n      DIALOG_INLINE_START,\r\n      inlineStart - this.#draggedDistanceX\r\n    );\r\n    setProperty(\r\n      this.#dialogRef,\r\n      DIALOG_BLOCK_START,\r\n      blockStart - this.#draggedDistanceY\r\n    );\r\n  };\r\n\r\n  #unfixDialogPosition = () => {\r\n    this.#dialogRef.style.removeProperty(DIALOG_INLINE_START);\r\n    this.#dialogRef.style.removeProperty(DIALOG_BLOCK_START);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        class={{\r\n          \"gx-dialog-header-drag\": this.show && this.allowDrag === \"header\",\r\n          \"ch-dialog--modal\": this.modal,\r\n          \"ch-dialog--non-modal\": !this.modal,\r\n          \"ch-dialog--hidden\": !this.show,\r\n          [RESIZING_CLASS]: this.resizing\r\n        }}\r\n      >\r\n        <dialog\r\n          aria-labelledby={this.caption ? \"heading\" : null}\r\n          class={this.showHeader ? \"dialog--header\" : null}\r\n          part=\"dialog\"\r\n          onClose={this.#handleDialogClose}\r\n          onMouseDown={this.allowDrag === \"box\" ? this.#handleMouseDown : null}\r\n          ref={el => (this.#dialogRef = el)}\r\n        >\r\n          {this.showHeader && (\r\n            <div\r\n              key=\"header\"\r\n              class=\"header\"\r\n              part=\"header\"\r\n              onMouseDown={\r\n                this.allowDrag === \"header\" ? this.#handleMouseDown : null\r\n              }\r\n            >\r\n              {this.caption && (\r\n                <h2 id=\"heading\" class=\"caption\" part=\"caption\">\r\n                  {this.caption}\r\n                </h2>\r\n              )}\r\n              <button\r\n                aria-label={this.closeButtonAccessibleName || null}\r\n                class=\"close-button\"\r\n                part=\"close-button\"\r\n                type=\"button\"\r\n                onClick={this.#closeHandler}\r\n              ></button>\r\n            </div>\r\n          )}\r\n\r\n          <div key=\"content\" class=\"content\" part=\"content\">\r\n            <slot />\r\n          </div>\r\n\r\n          {this.showFooter && (\r\n            <div key=\"footer\" class=\"footer\" part=\"footer\">\r\n              <slot name=\"footer\" />\r\n            </div>\r\n          )}\r\n\r\n          {this.resizable &&\r\n            this.show && [\r\n              <div\r\n                key=\"edge-block-start\"\r\n                class=\"edge__block-start\"\r\n                part=\"edge edge-block-start\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-start\")}\r\n              ></div>, // Top\r\n              <div\r\n                class=\"edge__inline-end\"\r\n                part=\"edge edge-inline-end\"\r\n                onMouseDown={this.#handleEdgeResize(\"inline-end\")}\r\n              ></div>, // Right\r\n              <div\r\n                class=\"edge__block-end\"\r\n                part=\"edge edge-block-end\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-end\")}\r\n              ></div>, // Bottom\r\n              <div\r\n                class=\"edge__inline-start\"\r\n                part=\"edge edge-inline-start\"\r\n                onMouseDown={this.#handleEdgeResize(\"inline-start\")}\r\n              ></div>, // Left\r\n\r\n              <div\r\n                class=\"corner__block-start-inline-start\"\r\n                part=\"corner corner-block-start-inline-start\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-start-inline-start\")}\r\n              ></div>, // Top Left\r\n              <div\r\n                class=\"corner__block-start-inline-end\"\r\n                part=\"corner corner-block-start-inline-end\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-start-inline-end\")}\r\n              ></div>, // Top Right\r\n              <div\r\n                class=\"corner__block-end-inline-start\"\r\n                part=\"corner corner-block-end-inline-start\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-end-inline-start\")}\r\n              ></div>, // Bottom Left\r\n              <div\r\n                class=\"corner__block-end-inline-end\"\r\n                part=\"corner corner-block-end-inline-end\"\r\n                onMouseDown={this.#handleEdgeResize(\"block-end-inline-end\")}\r\n              ></div>, // Bottom Right\r\n\r\n              <div\r\n                class=\"resize-layer\"\r\n                ref={el => (this.#resizeLayer = el)}\r\n              ></div>\r\n            ]}\r\n        </dialog>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}