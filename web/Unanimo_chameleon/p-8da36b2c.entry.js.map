{"version":3,"names":["copy","text","copyToTheClipboard","getAriaBusyValue","status","undefined","getAssistantParts","downloadCode","options","hyperlinkRef","blob","Blob","plainText","type","url","window","URL","createObjectURL","anchor","href","download","click","setTimeout","revokeObjectURL","defaultCodeRender","chatRef","translations","h","class","part","language","isMobile","copyCodeButton","onClick","hyperlinkToDownloadFile","accessibleName","downloadCodeButton","title","lastNestedChildClass","showIndicator","value","renderUserMessage","userMessage","content","slice","map","imageContent","image_url","src","alt","loading","renderDefaultAssistantMessage","messageModel","messageContent","message","files","renderCode","theme","markdownTheme","sourceFiles","file","target","caption","copyResponseButton","renderErrorMessage","defaultChatRender","role","chatCss","ChChatStyle0","ENTER_KEY","ChChat","clearChat","imagePicker","removeUploadedImage","sendButton","sendInput","stopGeneratingAnswerButton","placeholder","processing","editRef","scrollRef","virtualScrollRef","addNewMessage","this","pushMessage","focusChatInput","focus","setChatInputMessage","updateChatMessage","messageIndex","mode","items","length","updateMessage","forceUpdate","updateLastMessage","virtualItems","at","async","push","addItems","getMessageContent","newMessageContent","messageId","id","Object","assign","sendMessageKeyboard","event","key","shiftKey","preventDefault","sendMessage","addUserMessageToRecordAndFocusInput","scrollTop","scrollHeight","disabled","loadingState","generatingResponse","uploadingImagesToTheServer","imageUpload","imagesToUpload","userMessageToAdd","Date","getTime","callbacks","sendChatToLLM","userContent","forEach","imageToUpload","index","uploadImage","then","imageSrc","catch","handleStopGenerating","stopPropagation","stopGeneratingAnswer","buttonToRemove","nextFocusedButton","nextElementSibling","previousElementSibling","removeElement","removeImageResource","imageFile","virtualItemsChanged","detail","renderChatOrEmpty","name","dataProvider","inverseLoading","itemsCount","onInfiniteThresholdReached","loadMoreItems","ref","el","slot","onVirtualItemsChanged","renderItem","cellId","tokenMap","parts","totalItems","newItems","Array","from","_","connectedCallback","adoptCommonThemes","shadowRoot","adoptedStyleSheets","render","canShowAdditionalContent","showAdditionalContent","Host","model","onLoad","autoGrow","hostParts","multiline","onKeyDown"],"sources":["src/components/chat/default-chat-render.tsx","src/components/chat/chat.scss?tag=ch-chat&encapsulation=shadow","src/components/chat/chat.tsx"],"sourcesContent":["import { h } from \"@stencil/core\";\r\nimport {\r\n  ChatAssistantContentFiles,\r\n  ChatContentImage,\r\n  ChatMessageByRole\r\n} from \"./types\";\r\nimport { ChatTranslations } from \"./translations\";\r\nimport { copyToTheClipboard } from \"../../common/utils\";\r\nimport {\r\n  MarkdownViewerCodeRender,\r\n  MarkdownViewerCodeRenderOptions\r\n} from \"../markdown-viewer/parsers/types\";\r\n\r\nconst copy = (text: string) => () => copyToTheClipboard(text);\r\n\r\nconst getAriaBusyValue = (\r\n  status?: \"complete\" | \"waiting\" | \"streaming\" | undefined\r\n): \"true\" | \"false\" =>\r\n  status === \"complete\" || status === undefined ? \"false\" : \"true\";\r\n\r\nconst getAssistantParts = (\r\n  status?: \"complete\" | \"waiting\" | \"streaming\" | undefined\r\n) => (status ? `assistant-content ${status}` : \"assistant-content\");\r\n\r\nconst downloadCode =\r\n  (\r\n    options: MarkdownViewerCodeRenderOptions,\r\n    hyperlinkRef: { anchor: HTMLAnchorElement }\r\n  ) =>\r\n  () => {\r\n    // Create the blob variable on the click event\r\n    const blob = new Blob([options.plainText], { type: \"text/plain\" });\r\n\r\n    // Create blob object\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    hyperlinkRef.anchor.href = url;\r\n    hyperlinkRef.anchor.download = \"Answer.txt\";\r\n    hyperlinkRef.anchor.click(); // Download the blob\r\n\r\n    // Remove the blob object to free the memory\r\n    setTimeout(() => {\r\n      window.URL.revokeObjectURL(url);\r\n    });\r\n  };\r\n\r\nconst defaultCodeRender =\r\n  (\r\n    chatRef: HTMLChChatElement,\r\n    translations: ChatTranslations\r\n  ): MarkdownViewerCodeRender =>\r\n  (options: MarkdownViewerCodeRenderOptions): any =>\r\n    (\r\n      <div>\r\n        <div class=\"code-block__header\" part=\"code-block__header\">\r\n          {options.language}\r\n\r\n          <div\r\n            class=\"code-block__header-actions\"\r\n            part=\"code-block__header-actions\"\r\n          >\r\n            <button\r\n              aria-label={\r\n                chatRef.isMobile ? translations.text.copyCodeButton : undefined\r\n              }\r\n              class=\"code-block__copy-code-button\"\r\n              part=\"code-block__copy-code-button\"\r\n              type=\"button\"\r\n              onClick={copy(options.plainText)}\r\n            >\r\n              {!chatRef.isMobile && translations.text.copyCodeButton}\r\n            </button>\r\n\r\n            {chatRef.hyperlinkToDownloadFile && (\r\n              <button\r\n                aria-label={translations.accessibleName.downloadCodeButton}\r\n                title={translations.accessibleName.downloadCodeButton}\r\n                class=\"code-block__download-code-button\"\r\n                part=\"code-block__download-code-button\"\r\n                onClick={downloadCode(options, chatRef.hyperlinkToDownloadFile)}\r\n              ></button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ch-code\r\n          class=\"code-block__content\"\r\n          language={options.language}\r\n          lastNestedChildClass={options.lastNestedChildClass}\r\n          showIndicator={options.showIndicator}\r\n          value={options.plainText}\r\n        ></ch-code>\r\n      </div>\r\n    );\r\n\r\nconst renderUserMessage = (userMessage: ChatMessageByRole<\"user\">) => {\r\n  return typeof userMessage.content === \"string\" ? (\r\n    userMessage.content\r\n  ) : (\r\n    <div class=\"message-with-images\" part=\"message-with-images\">\r\n      <span part=\"message-with-images__text\">\r\n        {userMessage.content[0].text}\r\n      </span>\r\n\r\n      {(userMessage.content.slice(1) as ChatContentImage[]).map(\r\n        imageContent => (\r\n          <img\r\n            aria-hidden=\"true\"\r\n            class={!imageContent.image_url.url ? \"file-skeleton\" : undefined}\r\n            part={\r\n              imageContent.image_url.url\r\n                ? \"message-with-images__image\"\r\n                : \"message-with-images__image file-skeleton\"\r\n            }\r\n            src={imageContent.image_url.url}\r\n            alt=\"\"\r\n            loading=\"lazy\"\r\n          ></img>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderDefaultAssistantMessage = (\r\n  chatRef: HTMLChChatElement,\r\n  messageModel: ChatMessageByRole<\"assistant\">\r\n) => {\r\n  const messageContent =\r\n    typeof messageModel.content === \"string\"\r\n      ? messageModel.content\r\n      : messageModel.content.message;\r\n\r\n  const files =\r\n    (messageModel.content as ChatAssistantContentFiles).files ?? null;\r\n\r\n  const translations = chatRef.translations;\r\n\r\n  return (\r\n    <div\r\n      // Improve accessibility by announcing live changes\r\n      aria-live=\"polite\"\r\n      // Wait until all changes are made to prevents assistive\r\n      // technologies from announcing changes before updates are done\r\n      aria-busy={getAriaBusyValue(messageModel.status)}\r\n      class=\"assistant-content\"\r\n      part={getAssistantParts(messageModel.status)}\r\n    >\r\n      {messageModel.status === \"waiting\" ? (\r\n        <div class=\"assistant-loading\" part=\"assistant-loading\">\r\n          {/* {spinner()} */}\r\n          {messageContent}\r\n        </div>\r\n      ) : (\r\n        [\r\n          <ch-markdown-viewer\r\n            renderCode={\r\n              chatRef.renderCode ?? defaultCodeRender(chatRef, translations)\r\n            }\r\n            showIndicator={messageModel.status === \"streaming\"}\r\n            theme={chatRef.markdownTheme}\r\n            value={messageContent}\r\n          ></ch-markdown-viewer>,\r\n\r\n          files && (\r\n            <div class=\"assistant-files\" part=\"assistant-files\">\r\n              {translations.text.sourceFiles}\r\n\r\n              {files.map(file => (\r\n                <a href={file.url} target=\"_blank\" part=\"assistant-file\">\r\n                  {file.caption}\r\n                </a>\r\n              ))}\r\n            </div>\r\n          )\r\n        ]\r\n      )}\r\n\r\n      {(messageModel.status === \"complete\" || !messageModel.status) && (\r\n        <button\r\n          aria-label={translations.accessibleName.copyResponseButton}\r\n          title={translations.accessibleName.copyResponseButton}\r\n          part=\"copy-response-button\"\r\n          type=\"button\"\r\n          onClick={copy(messageContent)}\r\n        ></button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderErrorMessage = (\r\n  chatRef: HTMLChChatElement,\r\n  messageModel: ChatMessageByRole<\"error\">\r\n) => (\r\n  <ch-markdown-viewer\r\n    renderCode={\r\n      chatRef.renderCode ?? defaultCodeRender(chatRef, chatRef.translations)\r\n    }\r\n    theme={chatRef.markdownTheme}\r\n    value={messageModel.content}\r\n  ></ch-markdown-viewer>\r\n);\r\n\r\nexport const defaultChatRender =\r\n  (chatRef: HTMLChChatElement) =>\r\n  (messageModel: ChatMessageByRole<\"assistant\" | \"error\" | \"user\">) => {\r\n    if (messageModel.role === \"assistant\") {\r\n      return renderDefaultAssistantMessage(chatRef, messageModel);\r\n    }\r\n\r\n    return messageModel.role === \"user\"\r\n      ? renderUserMessage(messageModel)\r\n      : renderErrorMessage(chatRef, messageModel);\r\n  };\r\n","@import \"../../common/base\";\r\n\r\n@include button-reset();\r\n@include box-sizing();\r\n@include typography-reset();\r\n\r\n:host {\r\n  display: grid;\r\n  grid-template-rows: 1fr max-content;\r\n}\r\n\r\n:host(.ch-chat--additional-content) {\r\n  grid-template-rows: 1fr max-content max-content;\r\n}\r\n\r\n.assistant-content,\r\n.user-content {\r\n  // Improve rendering performance by not rendering off-screen messages\r\n  contain: paint;\r\n}\r\n\r\n.message-with-images {\r\n  display: grid;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  // Necessary to avoid overflowing the cell width when the window does not\r\n  // have enough width\r\n  max-inline-size: 100%;\r\n}\r\n\r\n.assistant-loading {\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr;\r\n  align-items: center;\r\n}\r\n\r\n.assistant-files {\r\n  grid-area: 2 / 2;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n}\r\n\r\n.file-skeleton {\r\n  position: relative;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    display: inline-flex;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//         Send container\r\n// - - - - - - - - - - - - - - - -\r\n.stop-generating-answer-button {\r\n  grid-area: input-wrapper;\r\n  position: absolute;\r\n  inset-block-start: 0;\r\n  justify-self: center;\r\n  transform: translateY(-100%);\r\n}\r\n\r\n.images-to-upload {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.send-container {\r\n  display: grid;\r\n  grid-template: \"input-wrapper send-or-audio\" 1fr / 1fr max-content;\r\n  position: relative;\r\n  align-items: end;\r\n\r\n  &--file-uploading {\r\n    grid-template: \"upload-image input-wrapper send-or-audio\" 1fr / max-content 1fr max-content;\r\n  }\r\n}\r\n\r\n.send-input-wrapper {\r\n  grid-area: input-wrapper;\r\n}\r\n\r\n.send-or-audio-button {\r\n  grid-area: send-or-audio;\r\n}\r\n\r\n.spinner-loading {\r\n  animation: infinite-rotate 0.875s linear 0s infinite;\r\n}\r\n\r\n// This is a WA due to shadow DOM limitations/scoping with keyframes\r\n@keyframes infinite-rotate {\r\n  100% {\r\n    transform: rotate(1turn);\r\n  }\r\n}\r\n\r\n@keyframes gx-skeleton-load {\r\n  to {\r\n    transform: translateX(192%);\r\n  }\r\n}\r\n\r\n.processing-animation {\r\n  content: \"\";\r\n  margin-inline-start: auto;\r\n  display: block;\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" viewBox=\"0 0 6 6\"><path d=\"M3 6C4.65685 6 6 4.65685 6 3C6 1.34315 4.65685 0 3 0C1.34315 0 0 1.34315 0 3C0 4.65685 1.34315 6 3 6Z\" fill=\"%23939498\"/></svg>'),\r\n    url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" viewBox=\"0 0 6 6\"><path d=\"M3 6C4.65685 6 6 4.65685 6 3C6 1.34315 4.65685 0 3 0C1.34315 0 0 1.34315 0 3C0 4.65685 1.34315 6 3 6Z\" fill=\"%23939498\"/></svg>'),\r\n    url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" viewBox=\"0 0 6 6\"><path d=\"M3 6C4.65685 6 6 4.65685 6 3C6 1.34315 4.65685 0 3 0C1.34315 0 0 1.34315 0 3C0 4.65685 1.34315 6 3 6Z\" fill=\"%23939498\"/></svg>');\r\n  inline-size: 20px;\r\n  block-size: 16px;\r\n  background-position: left, center, right;\r\n  background-size: 4px, 4px, 4px;\r\n  background-repeat: no-repeat;\r\n  animation: ellipsis 1s infinite linear;\r\n}\r\n\r\n// This is a WA to have an animation\r\n@keyframes ellipsis {\r\n  0% {\r\n    background-size: 6px, 4px, 4px;\r\n  }\r\n  25% {\r\n    background-size: 4px, 6px, 4px;\r\n  }\r\n  50% {\r\n    background-size: 4px, 4px, 6px;\r\n  }\r\n  75% {\r\n    background-size: 4px, 6px, 4px;\r\n  }\r\n  100% {\r\n    background-size: 6px, 4px, 4px;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Host,\r\n  Method,\r\n  Prop,\r\n  State,\r\n  forceUpdate,\r\n  h\r\n} from \"@stencil/core\";\r\nimport type {\r\n  ChVirtualScrollerCustomEvent,\r\n  VirtualScrollVirtualItems\r\n} from \"../../components\";\r\nimport type { ThemeModel } from \"../theme/theme-types\";\r\nimport {\r\n  ChatContentImages,\r\n  ChatInternalCallbacks,\r\n  ChatMessage,\r\n  ChatMessageByRole,\r\n  ChatMessageByRoleNoId\r\n} from \"./types\";\r\nimport { SmartGridDataState } from \"../smart-grid/internal/infinite-scroll/types\";\r\nimport { removeElement } from \"../../common/array\";\r\nimport { ChatTranslations } from \"./translations\";\r\nimport { defaultChatRender } from \"./default-chat-render\";\r\nimport { adoptCommonThemes } from \"../../common/theme\";\r\nimport { MarkdownViewerCodeRender } from \"../markdown-viewer/parsers/types\";\r\nimport { tokenMap } from \"../../common/utils\";\r\n\r\nconst ENTER_KEY = \"Enter\";\r\n\r\n/**\r\n * TODO: Add description\r\n */\r\n@Component({\r\n  tag: \"ch-chat\",\r\n  styleUrl: \"chat.scss\",\r\n  shadow: true\r\n})\r\nexport class ChChat {\r\n  #editRef!: HTMLChEditElement;\r\n  #scrollRef: HTMLChSmartGridElement | undefined;\r\n  #virtualScrollRef: HTMLChVirtualScrollerElement | undefined;\r\n\r\n  @Element() el!: HTMLChChatElement;\r\n\r\n  @State() imagesToUpload: { src: string; file: File }[] = [];\r\n  @State() uploadingImagesToTheServer = 0;\r\n  @State() virtualItems: ChatMessage[] = [];\r\n\r\n  /**\r\n   * Specifies the callbacks required in the control.\r\n   */\r\n  @Prop() readonly callbacks?: ChatInternalCallbacks | undefined;\r\n\r\n  /**\r\n   * Specifies if all interactions are disabled\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * `true` if a response for the assistant is being generated.\r\n   */\r\n  @Prop() readonly generatingResponse?: boolean = false;\r\n\r\n  /**\r\n   * Specifies an object containing an HTMLAnchorElement reference. Use this\r\n   * property to render a button to download the code when displaying a code\r\n   * block.\r\n   */\r\n  @Prop() readonly hyperlinkToDownloadFile?: { anchor: HTMLAnchorElement };\r\n\r\n  /**\r\n   * Specifies if the control can render a button to load images from the file\r\n   * system.\r\n   */\r\n  @Prop() readonly imageUpload: boolean = false;\r\n\r\n  /**\r\n   * Specifies if the chat is used in a mobile device.\r\n   */\r\n  @Prop() readonly isMobile?: boolean = false;\r\n\r\n  // TODO: Add support for undefined messages.\r\n  /**\r\n   * Specifies the items that the chat will display.\r\n   */\r\n  @Prop({ mutable: true }) items: ChatMessage[] = [];\r\n\r\n  /**\r\n   * Specifies if the chat is waiting for the data to be loaded.\r\n   */\r\n  @Prop({ mutable: true }) loadingState: SmartGridDataState = \"initial\";\r\n\r\n  /**\r\n   * Specifies the theme to be used for rendering the markdown.\r\n   * If `null`, no theme will be applied.\r\n   */\r\n  @Prop() readonly markdownTheme?: string | null = \"ch-markdown-viewer\";\r\n\r\n  /**\r\n   * This property allows us to implement custom rendering for the code blocks.\r\n   */\r\n  @Prop() readonly renderCode?: MarkdownViewerCodeRender;\r\n\r\n  /**\r\n   * `true` to render a slot named \"additional-content\" to project elements\r\n   * between the \"content\" slot (grid messages) and the \"send-container\" slot.\r\n   *\r\n   * This slot can only be rendered if loadingState !== \"initial\" and\r\n   * (loadingState !== \"all-records-loaded\" && items.length > 0).\r\n   */\r\n  @Prop() readonly showAdditionalContent: boolean = false;\r\n\r\n  /**\r\n   * Specifies the theme to be used for rendering the chat.\r\n   * If `undefined`, no theme will be applied.\r\n   */\r\n  @Prop() readonly theme?: ThemeModel | undefined;\r\n\r\n  /**\r\n   * Specifies the literals required in the control.\r\n   */\r\n  @Prop() readonly translations: ChatTranslations = {\r\n    accessibleName: {\r\n      clearChat: \"Clear chat\",\r\n      copyResponseButton: \"Copy assistant response\",\r\n      downloadCodeButton: \"Download code\",\r\n      imagePicker: \"Select images\",\r\n      removeUploadedImage: \"Remove uploaded image\",\r\n      sendButton: \"Send\",\r\n      sendInput: \"Message\",\r\n      stopGeneratingAnswerButton: \"Stop generating answer\"\r\n    },\r\n    placeholder: {\r\n      sendInput: \"Ask me a question...\"\r\n    },\r\n    text: {\r\n      stopGeneratingAnswerButton: \"Stop generating answer\",\r\n      copyCodeButton: \"Copy code\",\r\n      processing: `Processing...`,\r\n      sourceFiles: \"Source files:\"\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This property allows us to implement custom rendering of chat items.\r\n   * If allow us to implement the render of the cell content.\r\n   */\r\n  @Prop() readonly renderItem?: (\r\n    messageModel: ChatMessageByRole<\"assistant\" | \"error\" | \"user\">\r\n  ) => any;\r\n\r\n  /**\r\n   * Add a new message at the end of the record, performing a re-render.\r\n   */\r\n  @Method()\r\n  async addNewMessage(message: ChatMessage) {\r\n    this.#pushMessage(message);\r\n  }\r\n\r\n  /**\r\n   * Focus the chat input\r\n   */\r\n  @Method()\r\n  async focusChatInput() {\r\n    this.#editRef?.focus();\r\n  }\r\n\r\n  /**\r\n   * Set the text for the chat input\r\n   */\r\n  @Method()\r\n  async setChatInputMessage(text: string) {\r\n    if (this.#editRef) {\r\n      this.#editRef.value = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given the id of the message, it updates the content of the indexed message.\r\n   */\r\n  @Method()\r\n  async updateChatMessage(\r\n    messageIndex: number,\r\n    message: ChatMessageByRoleNoId<\"system\" | \"assistant\">,\r\n    mode: \"concat\" | \"replace\"\r\n  ) {\r\n    if (this.items.length === 0 || !this.items[messageIndex]) {\r\n      return;\r\n    }\r\n    this.#updateMessage(messageIndex, message, mode);\r\n\r\n    forceUpdate(this);\r\n  }\r\n\r\n  // TODO: Add unit tests to validate how the chat message should be copied\r\n  // into the last chat message, considering that messages can have more\r\n  // properties that the interface/type has\r\n  /**\r\n   * Update the content of the last message, performing a re-render.\r\n   */\r\n  @Method()\r\n  async updateLastMessage(\r\n    message: ChatMessageByRoleNoId<\"system\" | \"assistant\">,\r\n    mode: \"concat\" | \"replace\"\r\n  ) {\r\n    if (this.items.length === 0) {\r\n      return;\r\n    }\r\n    this.#updateMessage(this.items.length - 1, message, mode);\r\n\r\n    // Sync the last virtual item with the real item that is updated\r\n    this.virtualItems[this.virtualItems.length - 1] = this.items.at(-1);\r\n\r\n    forceUpdate(this);\r\n  }\r\n\r\n  #pushMessage = async (message: ChatMessage) => {\r\n    if (this.items.length === 0) {\r\n      this.items.push(message);\r\n      forceUpdate(this);\r\n    } else {\r\n      await this.#virtualScrollRef.addItems(\"end\", message);\r\n    }\r\n  };\r\n\r\n  #getMessageContent = (\r\n    message: ChatMessageByRoleNoId<\"system\" | \"assistant\">\r\n  ) =>\r\n    typeof message.content === \"string\"\r\n      ? message.content\r\n      : message.content.message;\r\n\r\n  #updateMessage = (\r\n    messageIndex: number,\r\n    message: ChatMessageByRoleNoId<\"system\" | \"assistant\">,\r\n    mode: \"concat\" | \"replace\"\r\n  ) => {\r\n    if (mode === \"concat\") {\r\n      // Temporal store for the new message\r\n      const newMessageContent =\r\n        this.#getMessageContent(\r\n          this.items[messageIndex] as ChatMessageByRole<\"system\" | \"assistant\">\r\n        ) + this.#getMessageContent(message);\r\n\r\n      // Reuse the message ref to correctly update the message content\r\n      if (typeof message.content === \"string\") {\r\n        message.content = newMessageContent;\r\n      } else {\r\n        message.content.message = newMessageContent;\r\n      }\r\n    }\r\n\r\n    // Replace the message\r\n    const messageId = this.items[messageIndex].id;\r\n    this.items[messageIndex] = Object.assign({ id: messageId }, message);\r\n  };\r\n\r\n  #sendMessageKeyboard = (event: KeyboardEvent) => {\r\n    if (event.key !== ENTER_KEY || event.shiftKey) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n\r\n    this.#sendMessage();\r\n  };\r\n\r\n  #addUserMessageToRecordAndFocusInput = async (\r\n    userMessage: ChatMessageByRole<\"user\">\r\n  ) => {\r\n    this.#editRef.value = \"\";\r\n    this.#editRef.click();\r\n\r\n    // Scroll to bottom\r\n    if (this.#scrollRef) {\r\n      this.#scrollRef.scrollTop = this.#scrollRef.scrollHeight;\r\n    }\r\n\r\n    await this.#pushMessage(userMessage);\r\n  };\r\n\r\n  #sendMessage = async () => {\r\n    if (\r\n      !this.#editRef.value ||\r\n      this.disabled ||\r\n      this.loadingState === \"initial\" ||\r\n      this.loadingState === \"loading\" ||\r\n      this.generatingResponse ||\r\n      this.uploadingImagesToTheServer > 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Message without resources\r\n    if (!this.imageUpload || this.imagesToUpload.length === 0) {\r\n      const userMessageToAdd: ChatMessageByRole<\"user\"> = {\r\n        id: `${new Date().getTime()}`,\r\n        role: \"user\",\r\n        content: this.#editRef.value\r\n      };\r\n\r\n      await this.#addUserMessageToRecordAndFocusInput(userMessageToAdd);\r\n      this.callbacks?.sendChatToLLM(this.items);\r\n\r\n      // Queue a new re-render\r\n      forceUpdate(this);\r\n      return;\r\n    }\r\n\r\n    this.uploadingImagesToTheServer = this.imagesToUpload.length;\r\n\r\n    const userContent: ChatContentImages = [\r\n      { type: \"text\", text: this.#editRef.value }\r\n    ] as ChatContentImages;\r\n\r\n    this.imagesToUpload.forEach((imageToUpload, index) => {\r\n      // Add the image with empty src, since it's not in the server yet\r\n      userContent.push({\r\n        type: \"image_url\",\r\n        image_url: { url: \"\" }\r\n      });\r\n\r\n      // Upload the image to the server asynchronously\r\n      this.callbacks\r\n        ?.uploadImage(imageToUpload.file)\r\n        .then(imageSrc => {\r\n          userContent[index + 1] = {\r\n            type: \"image_url\",\r\n            image_url: { url: imageSrc }\r\n          };\r\n\r\n          // Queue a new re-render\r\n          this.uploadingImagesToTheServer--;\r\n\r\n          if (this.uploadingImagesToTheServer === 0) {\r\n            this.callbacks?.sendChatToLLM(this.items);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          // console.log(\"Reject...\", reason);\r\n          // TODO: Error uploading the image\r\n\r\n          this.uploadingImagesToTheServer--;\r\n\r\n          if (this.uploadingImagesToTheServer === 0) {\r\n            this.callbacks?.sendChatToLLM(this.items);\r\n          }\r\n        });\r\n    });\r\n\r\n    const userMessageToAdd: ChatMessageByRole<\"user\"> = {\r\n      id: `${new Date().getTime()}`,\r\n      role: \"user\",\r\n      content: userContent\r\n    };\r\n    await this.#addUserMessageToRecordAndFocusInput(userMessageToAdd);\r\n\r\n    // Free the memory\r\n    this.imagesToUpload = [];\r\n  };\r\n\r\n  #handleStopGenerating = (event: MouseEvent) => {\r\n    event.stopPropagation();\r\n\r\n    this.callbacks?.stopGeneratingAnswer!();\r\n  };\r\n\r\n  // #handleFilesChanged = (event: ImagePickerCustomEvent<FileList | null>) => {\r\n  //   this.imagesToUpload =\r\n  //     event.detail === null\r\n  //       ? []\r\n  //       : [...event.detail].map(imageFile => ({\r\n  //           file: imageFile,\r\n  //           src: URL.createObjectURL(imageFile)\r\n  //         }));\r\n  // };\r\n\r\n  #removeUploadedImage = (index: number) => (event: MouseEvent) => {\r\n    const buttonToRemove = event.target as HTMLButtonElement;\r\n    const nextFocusedButton = (buttonToRemove.nextElementSibling ??\r\n      buttonToRemove.previousElementSibling) as HTMLButtonElement | null;\r\n\r\n    // Focus the next item to improve accessibility\r\n    nextFocusedButton?.focus();\r\n\r\n    // TODO: Remove the file from the image-picker reference\r\n    removeElement(this.imagesToUpload, index);\r\n    forceUpdate(this);\r\n  };\r\n\r\n  #removeImageResource = (imageFile: string) => () => {\r\n    URL.revokeObjectURL(imageFile); // Free the memory\r\n  };\r\n\r\n  #virtualItemsChanged = (\r\n    event: ChVirtualScrollerCustomEvent<VirtualScrollVirtualItems>\r\n  ) => {\r\n    this.virtualItems = event.detail.virtualItems as ChatMessage[];\r\n  };\r\n\r\n  #renderChatOrEmpty = () =>\r\n    this.loadingState === \"all-records-loaded\" && this.items.length === 0 ? (\r\n      <slot name=\"empty-chat\"></slot>\r\n    ) : (\r\n      <ch-smart-grid\r\n        dataProvider={this.loadingState === \"more-data-to-fetch\"}\r\n        loadingState={\r\n          this.virtualItems.length === 0 ? \"initial\" : this.loadingState\r\n        }\r\n        inverseLoading\r\n        itemsCount={this.virtualItems.length}\r\n        onInfiniteThresholdReached={this.#loadMoreItems}\r\n        ref={el => (this.#scrollRef = el as HTMLChSmartGridElement)}\r\n      >\r\n        <ch-virtual-scroller\r\n          role=\"row\"\r\n          slot=\"grid-content\"\r\n          class=\"grid-content\"\r\n          part=\"content\"\r\n          inverseLoading\r\n          // mode=\"lazy-render\"\r\n          items={this.items}\r\n          itemsCount={this.items.length}\r\n          onVirtualItemsChanged={this.#virtualItemsChanged}\r\n          ref={el =>\r\n            (this.#virtualScrollRef = el as HTMLChVirtualScrollerElement)\r\n          }\r\n        >\r\n          {this.virtualItems.map(this.#renderItem)}\r\n        </ch-virtual-scroller>\r\n      </ch-smart-grid>\r\n    );\r\n\r\n  #renderItem = (messageModel: ChatMessage) =>\r\n    messageModel.role !== \"system\" && (\r\n      <ch-smart-grid-cell\r\n        key={messageModel.id}\r\n        cellId={messageModel.id}\r\n        part={tokenMap({\r\n          [`message ${messageModel.role}`]: true,\r\n          [messageModel.parts]: !!messageModel.parts,\r\n          [(messageModel as ChatMessageByRole<\"assistant\">).status]:\r\n            messageModel.role === \"assistant\"\r\n        })}\r\n      >\r\n        {this.renderItem\r\n          ? this.renderItem(messageModel)\r\n          : defaultChatRender(this.el)(messageModel)}\r\n      </ch-smart-grid-cell>\r\n    );\r\n\r\n  #loadMoreItems = () => {\r\n    this.loadingState = \"loading\";\r\n\r\n    // WA to test\r\n    setTimeout(() => {\r\n      const totalItems = this.items.length;\r\n\r\n      const newItems: ChatMessage[] = Array.from({ length: 20 }, (_, index) =>\r\n        index % 2 === 0\r\n          ? {\r\n              id: `index: ${index - totalItems}`,\r\n              role: \"user\",\r\n              content:\r\n                `index: ${index - totalItems}` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n`\r\n            }\r\n          : {\r\n              id: `index: ${index - totalItems}`,\r\n              role: \"assistant\",\r\n              content:\r\n                `\\nindex: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n` +\r\n                `index: ${index - totalItems}\\n`\r\n            }\r\n      );\r\n\r\n      this.#virtualScrollRef.addItems(\"start\", ...newItems);\r\n\r\n      this.loadingState = \"more-data-to-fetch\";\r\n    }, 10);\r\n  };\r\n\r\n  connectedCallback() {\r\n    // Scrollbar styles\r\n    adoptCommonThemes(this.el.shadowRoot.adoptedStyleSheets);\r\n  }\r\n\r\n  render() {\r\n    const text = this.translations.text;\r\n    const accessibleName = this.translations.accessibleName;\r\n\r\n    const canShowAdditionalContent =\r\n      this.showAdditionalContent &&\r\n      // It's not the initial load\r\n      this.loadingState !== \"initial\" &&\r\n      // It's not the empty chat\r\n      !(this.items.length === 0 && this.loadingState === \"all-records-loaded\");\r\n\r\n    return (\r\n      <Host\r\n        class={\r\n          canShowAdditionalContent ? \"ch-chat--additional-content\" : undefined\r\n        }\r\n      >\r\n        {this.theme && <ch-theme model={this.theme}></ch-theme>}\r\n\r\n        {this.loadingState === \"initial\" ? (\r\n          // TODO: Improve this slot name\r\n          <div class=\"loading-chat\" slot=\"empty-chat\"></div>\r\n        ) : (\r\n          this.#renderChatOrEmpty()\r\n        )}\r\n\r\n        {canShowAdditionalContent && <slot name=\"additional-content\" />}\r\n\r\n        <div\r\n          class={{\r\n            \"send-container\": true,\r\n            \"send-container--file-uploading\": this.imageUpload\r\n          }}\r\n          part=\"send-container\"\r\n        >\r\n          {this.generatingResponse && this.callbacks?.stopGeneratingAnswer && (\r\n            <button\r\n              aria-label={\r\n                accessibleName.stopGeneratingAnswerButton !==\r\n                  text.stopGeneratingAnswerButton &&\r\n                (accessibleName.stopGeneratingAnswerButton ??\r\n                  text.stopGeneratingAnswerButton)\r\n              }\r\n              class=\"stop-generating-answer-button\"\r\n              part=\"stop-generating-answer-button\"\r\n              type=\"button\"\r\n              onClick={this.#handleStopGenerating}\r\n            >\r\n              {text.stopGeneratingAnswerButton}\r\n            </button>\r\n          )}\r\n          {/* \r\n          {this.imageUpload && (\r\n            <gx-eai-image-picker\r\n              part=\"image-picker\"\r\n              translations={this.translations}\r\n              onFilesChanged={this.#handleFilesChanged}\r\n            ></gx-eai-image-picker>\r\n          )} */}\r\n\r\n          <div class=\"send-input-wrapper\" part=\"send-input-wrapper\">\r\n            {this.imagesToUpload.length > 0 && (\r\n              <div class=\"images-to-upload\" part=\"images-to-upload\">\r\n                {this.imagesToUpload.map((imageFile, index) => (\r\n                  <button\r\n                    key={imageFile.src}\r\n                    aria-label={accessibleName.removeUploadedImage}\r\n                    title={accessibleName.removeUploadedImage}\r\n                    part=\"remove-image-to-upload-button\"\r\n                    type=\"button\"\r\n                    onClick={this.#removeUploadedImage(index)}\r\n                  >\r\n                    <img\r\n                      part=\"image-to-upload\"\r\n                      aria-hidden=\"true\"\r\n                      src={imageFile.src}\r\n                      alt=\"\"\r\n                      loading=\"lazy\"\r\n                      onLoad={this.#removeImageResource(imageFile.src)}\r\n                    ></img>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            <ch-edit\r\n              accessibleName={accessibleName.sendInput}\r\n              autoGrow\r\n              hostParts=\"send-input\"\r\n              multiline\r\n              placeholder={this.translations.placeholder.sendInput}\r\n              onKeyDown={this.#sendMessageKeyboard}\r\n              ref={el => (this.#editRef = el as HTMLChEditElement)}\r\n            ></ch-edit>\r\n          </div>\r\n\r\n          <button\r\n            aria-label={accessibleName.sendButton}\r\n            title={accessibleName.sendButton}\r\n            class=\"send-or-audio-button\"\r\n            part=\"send-button\"\r\n            disabled={this.disabled}\r\n            type=\"button\"\r\n            onClick={\r\n              this.loadingState !== \"initial\" ? this.#sendMessage : undefined\r\n            }\r\n          ></button>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}