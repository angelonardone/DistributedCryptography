{"version":3,"names":["WINDOW_ID","ACTION_MENU_RENDER_TAG_NAME","ACTION_MENU_TAG_NAME","ACTION_MENU_SLOT_TAG_NAME","FIRST_ACTION_MENU","LAST_ACTION_MENU","actionMenuItemIsActionable","itemUIModel","type","actionMenuItemActionableIsExpandable","items","undefined","actionMenuItemIsHyperlink","link","url","getShadowRootOfEvent","event","composedPath","buttonIndex","findIndex","el","tagName","toLowerCase","shadowRoot","ShadowRoot","getActionMenuInfoInEvent","parentTagName","host","stopPropagation","ref","model","focusFirstActionMenuItem","actionMenuRef","querySelector","focus","focusActionMenuLastItem","getSiblingType","nextSibling","findPreviousSibling","element","previousElementSibling","findNextSibling","nextElementSibling","focusNextElement","actionMenuInfo","findMode","findFunction","siblingType","disabled","actionMenuElementIsFocused","focusComposedPath"],"sources":["src/components/action-menu/internal/utils.ts"],"sourcesContent":["import {\r\n  ActionMenuInfoInEvent,\r\n  ActionMenuItemActionableModel,\r\n  ActionMenuItemModel\r\n} from \"../types\";\r\nimport { ChameleonControlsTagName } from \"../../../common/types\";\r\nimport { focusComposedPath } from \"../../common/helpers\";\r\n\r\nexport const WINDOW_ID = \"window\";\r\nexport const ACTION_MENU_RENDER_TAG_NAME =\r\n  \"ch-action-menu-render\" satisfies ChameleonControlsTagName;\r\n\r\nexport const ACTION_MENU_TAG_NAME =\r\n  \"ch-action-menu\" satisfies ChameleonControlsTagName;\r\n\r\nexport const ACTION_MENU_SLOT_TAG_NAME = \"slot\";\r\n\r\nconst FIRST_ACTION_MENU = `:scope>${ACTION_MENU_TAG_NAME}` as const;\r\nconst LAST_ACTION_MENU = `:scope>${ACTION_MENU_TAG_NAME}:last-of-type` as const;\r\n\r\nexport const actionMenuItemIsActionable = (\r\n  itemUIModel: ActionMenuItemModel\r\n): itemUIModel is ActionMenuItemActionableModel =>\r\n  !itemUIModel.type || itemUIModel.type === \"actionable\";\r\n\r\nexport const actionMenuItemActionableIsExpandable = (\r\n  itemUIModel: ActionMenuItemActionableModel\r\n) => itemUIModel.items !== undefined;\r\n\r\nexport const actionMenuItemIsHyperlink = (\r\n  itemUIModel: ActionMenuItemActionableModel\r\n) => !!itemUIModel.link?.url;\r\n\r\nexport const getShadowRootOfEvent = (\r\n  event: KeyboardEvent | MouseEvent | PointerEvent\r\n) => {\r\n  const composedPath = event.composedPath();\r\n  const buttonIndex = composedPath.findIndex(el => {\r\n    const tagName = ((el as HTMLElement).tagName ?? \"\").toLowerCase();\r\n\r\n    return tagName === \"button\" || tagName === \"a\";\r\n  });\r\n\r\n  // The click event was not provoked by a button\r\n  if (buttonIndex === -1) {\r\n    return undefined;\r\n  }\r\n  const shadowRoot = composedPath[buttonIndex + 1];\r\n\r\n  return shadowRoot instanceof ShadowRoot ? shadowRoot : undefined;\r\n};\r\n\r\n/**\r\n * @returns The model to update the expanded value or undefined if the click\r\n * was not performed on any valid item.\r\n */\r\nexport const getActionMenuInfoInEvent = (\r\n  event: KeyboardEvent | MouseEvent | PointerEvent\r\n): ActionMenuInfoInEvent | typeof ACTION_MENU_RENDER_TAG_NAME | undefined => {\r\n  const shadowRoot = getShadowRootOfEvent(event);\r\n  if (!shadowRoot) {\r\n    return undefined;\r\n  }\r\n\r\n  const parentTagName = shadowRoot.host.tagName.toLowerCase();\r\n\r\n  // The button does not belong to a ch-action-menu or ch-action-menu-render element\r\n  if (\r\n    parentTagName !== ACTION_MENU_TAG_NAME &&\r\n    parentTagName !== ACTION_MENU_RENDER_TAG_NAME\r\n  ) {\r\n    return undefined;\r\n  }\r\n  event.stopPropagation();\r\n\r\n  return parentTagName === ACTION_MENU_RENDER_TAG_NAME\r\n    ? ACTION_MENU_RENDER_TAG_NAME\r\n    : {\r\n        ref: shadowRoot.host as HTMLChActionMenuElement,\r\n        model: (shadowRoot.host as HTMLChActionMenuElement).model\r\n      };\r\n};\r\n\r\nexport const focusFirstActionMenuItem = (\r\n  actionMenuRef: HTMLChPopoverElement | HTMLChActionMenuElement\r\n) =>\r\n  (\r\n    actionMenuRef.querySelector(FIRST_ACTION_MENU) as HTMLChActionMenuElement\r\n  )?.focus();\r\n\r\nexport const focusActionMenuLastItem = (\r\n  actionMenuRef: HTMLChPopoverElement | HTMLChActionMenuElement\r\n) =>\r\n  (\r\n    actionMenuRef.querySelector(LAST_ACTION_MENU) as HTMLChActionMenuElement\r\n  )?.focus();\r\n\r\nconst getSiblingType = (\r\n  nextSibling: Element\r\n):\r\n  | typeof ACTION_MENU_TAG_NAME\r\n  | typeof ACTION_MENU_SLOT_TAG_NAME\r\n  | undefined => {\r\n  const tagName = (nextSibling as HTMLElement).tagName?.toLowerCase();\r\n\r\n  if (tagName === ACTION_MENU_TAG_NAME) {\r\n    return ACTION_MENU_TAG_NAME;\r\n  }\r\n\r\n  return tagName === ACTION_MENU_SLOT_TAG_NAME\r\n    ? ACTION_MENU_SLOT_TAG_NAME\r\n    : undefined;\r\n};\r\n\r\nconst findPreviousSibling = (element: Element) =>\r\n  element.previousElementSibling;\r\nconst findNextSibling = (element: Element) => element.nextElementSibling;\r\n\r\nexport const focusNextElement = (\r\n  actionMenuInfo: ActionMenuInfoInEvent,\r\n  findMode: \"previous\" | \"next\"\r\n) => {\r\n  const findFunction =\r\n    findMode === \"previous\" ? findPreviousSibling : findNextSibling;\r\n\r\n  let nextSibling = findFunction(actionMenuInfo.ref);\r\n\r\n  while (nextSibling) {\r\n    const siblingType = getSiblingType(nextSibling);\r\n\r\n    // Keyboard navigation must be avoided if the next element is a slot\r\n    if (siblingType === ACTION_MENU_SLOT_TAG_NAME) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      siblingType === ACTION_MENU_TAG_NAME &&\r\n      !(nextSibling as HTMLChActionMenuElement).disabled\r\n    ) {\r\n      return (nextSibling as HTMLChActionMenuElement).focus();\r\n    }\r\n\r\n    nextSibling = findFunction(nextSibling);\r\n  }\r\n};\r\n\r\nexport const actionMenuElementIsFocused = (\r\n  actionMenuRef: HTMLChActionMenuElement\r\n) => actionMenuRef === focusComposedPath()[1];\r\n"],"mappings":"0CAQaA,EAAY,S,MACZC,EACX,wBAEK,MAAMC,EACX,iBAEK,MAAMC,EAA4B,OAEzC,MAAMC,EAAoB,UAAUF,IACpC,MAAMG,EAAmB,UAAUH,iB,MAEtBI,EACXC,IAECA,EAAYC,MAAQD,EAAYC,OAAS,a,MAE/BC,EACXF,GACGA,EAAYG,QAAUC,U,MAEdC,EACXL,KACKA,EAAYM,MAAMC,IAElB,MAAMC,EACXC,IAEA,MAAMC,EAAeD,EAAMC,eAC3B,MAAMC,EAAcD,EAAaE,WAAUC,IACzC,MAAMC,GAAYD,EAAmBC,SAAW,IAAIC,cAEpD,OAAOD,IAAY,UAAYA,IAAY,GAAG,IAIhD,GAAIH,KAAiB,EAAG,CACtB,OAAOP,S,CAET,MAAMY,EAAaN,EAAaC,EAAc,GAE9C,OAAOK,aAAsBC,WAAaD,EAAaZ,SAAS,E,MAOrDc,EACXT,IAEA,MAAMO,EAAaR,EAAqBC,GACxC,IAAKO,EAAY,CACf,OAAOZ,S,CAGT,MAAMe,EAAgBH,EAAWI,KAAKN,QAAQC,cAG9C,GACEI,IAAkBxB,GAClBwB,IAAkBzB,EAClB,CACA,OAAOU,S,CAETK,EAAMY,kBAEN,OAAOF,IAAkBzB,EACrBA,EACA,CACE4B,IAAKN,EAAWI,KAChBG,MAAQP,EAAWI,KAAiCG,MACrD,E,MAGMC,EACXC,GAGEA,EAAcC,cAAc7B,IAC3B8B,Q,MAEQC,EACXH,GAGEA,EAAcC,cAAc5B,IAC3B6B,QAEL,MAAME,EACJC,IAKA,MAAMhB,EAAWgB,EAA4BhB,SAASC,cAEtD,GAAID,IAAYnB,EAAsB,CACpC,OAAOA,C,CAGT,OAAOmB,IAAYlB,EACfA,EACAQ,SAAS,EAGf,MAAM2B,EAAuBC,GAC3BA,EAAQC,uBACV,MAAMC,EAAmBF,GAAqBA,EAAQG,mB,MAEzCC,EAAmB,CAC9BC,EACAC,KAEA,MAAMC,EACJD,IAAa,WAAaP,EAAsBG,EAElD,IAAIJ,EAAcS,EAAaF,EAAef,KAE9C,MAAOQ,EAAa,CAClB,MAAMU,EAAcX,EAAeC,GAGnC,GAAIU,IAAgB5C,EAA2B,CAC7C,M,CAGF,GACE4C,IAAgB7C,IACdmC,EAAwCW,SAC1C,CACA,OAAQX,EAAwCH,O,CAGlDG,EAAcS,EAAaT,E,SAIlBY,EACXjB,GACGA,IAAkBkB,IAAoB,U"}