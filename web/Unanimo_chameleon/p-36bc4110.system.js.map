{"version":3,"names":["defineChameleonReportsIfNecessary","howToSetALabel","tag","actualLabel","concat","externalLabelAndAccessibleNameIsSet","externalLabel","accessibleName","noLabelsAreSet","allLabelsAreEmpty","getElementInternalsLabel","exports","labels","length","undefined","_a","__spreadArray","find","label","textContent","trim","analyzeLabelExistence","elementRef","checkAccessibilityReports","actualAccessibleNameProperty","console","warn"],"sources":["src/common/analysis/accessibility.ts"],"sourcesContent":["/* eslint-disable no-console */\r\nimport type { ChameleonControlsTagName } from \"../types\";\r\nimport {\r\n  checkAccessibilityReports,\r\n  defineChameleonReportsIfNecessary\r\n} from \"./reports\";\r\n\r\n// Side effect\r\ndefineChameleonReportsIfNecessary();\r\n\r\nconst howToSetALabel = (\r\n  tag: ChameleonControlsTagName,\r\n  actualLabel: boolean\r\n) => `This is the third most common WCAG accessibility issue (https://webaim.org/projects/million/#wcag_div). Please bind this component with ${\r\n  actualLabel ? \"an actual label\" : \"a label\"\r\n} to solve this accessibility issue.\r\n\r\nIf the component has a visible label, do the following:\r\n  <label for=\"unique-id\">\r\n    Label for the element\r\n  </label>\r\n  <${tag} id=\"unique-id\"></${tag}>\r\n\r\nIf there is no visible label, do the following:\r\n  <${tag} accessibleName=\"Label for the element\"></${tag}>\r\n\r\nElement that causes this issue:`;\r\n\r\nexport const externalLabelAndAccessibleNameIsSet = (\r\n  tag: ChameleonControlsTagName,\r\n  externalLabel: string,\r\n  accessibleName: string\r\n) =>\r\n  `The label \"${externalLabel}\" is already used for the \"${tag}\" component, but also the accessibleName property is set with \"${accessibleName}\".\r\nOnly the visible label will be used for the element, so the accessibleName property binding can be removed.\r\n\r\nElement that causes this issue:`;\r\n\r\nexport const noLabelsAreSet = (tag: ChameleonControlsTagName) =>\r\n  `The \"${tag}\" component doesn't have a label set. ${howToSetALabel(\r\n    tag,\r\n    false\r\n  )}`;\r\n\r\nexport const allLabelsAreEmpty = (tag: ChameleonControlsTagName) =>\r\n  `All labels for the \"${tag}\" component are empty, so there is no real label for it. ${howToSetALabel(\r\n    tag,\r\n    true\r\n  )}`;\r\n\r\nexport const getElementInternalsLabel = (\r\n  labels: NodeList | null\r\n): string | undefined => {\r\n  if (!labels || labels.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  // Use the first label that is not empty\r\n  return [...labels]\r\n    .find(label => label.textContent.trim() !== \"\")\r\n    ?.textContent.trim();\r\n};\r\n\r\nexport const analyzeLabelExistence = <T extends ChameleonControlsTagName>(\r\n  elementRef: HTMLElementTagNameMap[T],\r\n  tag: T,\r\n  labels: NodeList | null,\r\n  externalLabel: string | undefined,\r\n  accessibleName: string | undefined\r\n) => {\r\n  if (!checkAccessibilityReports()) {\r\n    return;\r\n  }\r\n\r\n  const actualAccessibleNameProperty =\r\n    !accessibleName || accessibleName.trim() === \"\"\r\n      ? undefined\r\n      : accessibleName;\r\n\r\n  if (\r\n    externalLabel !== undefined &&\r\n    actualAccessibleNameProperty !== undefined\r\n  ) {\r\n    return console.warn(\r\n      externalLabelAndAccessibleNameIsSet(tag, externalLabel, accessibleName),\r\n      elementRef\r\n    );\r\n  }\r\n\r\n  if ((!labels || labels.length === 0) && !accessibleName) {\r\n    return console.warn(noLabelsAreSet(tag), elementRef);\r\n  }\r\n\r\n  if (\r\n    actualAccessibleNameProperty === undefined &&\r\n    externalLabel === undefined\r\n  ) {\r\n    console.warn(allLabelsAreEmpty(tag), elementRef);\r\n  }\r\n};\r\n"],"mappings":"4XAQAA,IAEA,IAAMC,EAAiB,SACrBC,EACAC,GACG,iJAAAC,OACHD,EAAc,kBAAoB,UACpC,yKAAAC,OAMKF,EAAG,sBAAAE,OAAqBF,EAAG,6DAAAE,OAG3BF,EAAG,8CAAAE,OAA6CF,EAAG,uCAXnD,EAeE,IAAMG,EAAsC,SACjDH,EACAI,EACAC,GAEA,oBAAAH,OAAcE,EAAa,+BAAAF,OAA8BF,EAAG,mEAAAE,OAAkEG,EAAc,qJAA5I,EAKK,IAAMC,EAAiB,SAACN,GAC7B,cAAAE,OAAQF,EAAG,2CAAAE,OAAyCH,EAClDC,EACA,OAFF,EAKK,IAAMO,EAAoB,SAACP,GAChC,6BAAAE,OAAuBF,EAAG,6DAAAE,OAA4DH,EACpFC,EACA,MAFF,E,IAKWQ,EAAwBC,EAAA,KAAG,SACtCC,G,MAEA,IAAKA,GAAUA,EAAOC,SAAW,EAAG,CAClC,OAAOC,S,CAIT,OAAOC,EAAAC,cAAA,GAAIJ,EAAM,MACdK,MAAK,SAAAC,GAAS,OAAAA,EAAMC,YAAYC,SAAW,EAA7B,OAAgC,MAAAL,SAAA,SAAAA,EAC7CI,YAAYC,MAClB,I,IAEaC,EAAqBV,EAAA,KAAG,SACnCW,EACApB,EACAU,EACAN,EACAC,GAEA,IAAKgB,IAA6B,CAChC,M,CAGF,IAAMC,GACHjB,GAAkBA,EAAea,SAAW,GACzCN,UACAP,EAEN,GACED,IAAkBQ,WAClBU,IAAiCV,UACjC,CACA,OAAOW,QAAQC,KACbrB,EAAoCH,EAAKI,EAAeC,GACxDe,E,CAIJ,KAAMV,GAAUA,EAAOC,SAAW,KAAON,EAAgB,CACvD,OAAOkB,QAAQC,KAAKlB,EAAeN,GAAMoB,E,CAG3C,GACEE,IAAiCV,WACjCR,IAAkBQ,UAClB,CACAW,QAAQC,KAAKjB,EAAkBP,GAAMoB,E,CAEzC,G"}