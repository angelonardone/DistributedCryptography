{"version":3,"names":["codeDiffEditorCss","ChCodeDiffEditorStyle0","autoId","ChCodeDiffEditor","exports","_a","_monacoDiffEditorInstance","set","this","_resizeObserver","_editorId","_monacoRef","_absoluteContentRef","_getYamlSchemas","fileMatch","concat","__classPrivateFieldGet","_this","uri","yamlSchemaUri","automaticLayout","mouseWheelScrollSensitivity","mouseWheelZoom","enableSplitViewResizing","renderSideBySide","class_1","prototype","languageChanged","newLanguage","_b","setModel","original","monaco","editor","createModel","value","modified","modifiedValue","modifiedValueChange","newModifiedValue","getModel","setValue","optionsChanged","options","updateOptions","readonlyChanged","newReadonly","originalEditable","_c","readOnly","_d","themeChanged","newTheme","theme","valueChange","newValue","yamlSchemaUriChange","newUri","language","__classPrivateFieldSet","configureMonacoYaml","enableSchemaRequest","format","schemas","call","Uri","parse","connectedCallback","componentDidLoad","_instances","_configureYaml","_setupDiffEditor","ResizeObserver","entries","absoluteContentEntry","contentRect","layout","width","height","observe","disconnectedCallback","disconnect","render","h","Host","key","class","ref","el","createDiffEditor","__assign","readonly"],"sources":["src/components/code-diff-editor/code-diff-editor.scss?tag=ch-code-diff-editor","src/components/code-diff-editor/code-diff-editor.tsx"],"sourcesContent":["// This is a WA to import required styles for the editor in production build\r\n@import \"../../common/monaco/monaco-styles-after-build.scss\";\r\n\r\nch-code-diff-editor {\r\n  display: grid;\r\n  position: relative;\r\n}\r\n\r\n.ch-code-diff-editor-absolute-content {\r\n  display: grid;\r\n  position: absolute;\r\n  inset: 0;\r\n}\r\n","import { Component, Host, Method, Prop, Watch, h } from \"@stencil/core\";\r\nimport monaco, {\r\n  configureMonacoYaml\r\n} from \"../../common/monaco/output/monaco.js\";\r\nimport { CodeDiffEditorOptions } from \"./code-diff-editor-types.js\";\r\n\r\nlet autoId = 0;\r\n\r\n@Component({\r\n  shadow: false,\r\n  styleUrl: \"code-diff-editor.scss\",\r\n  tag: \"ch-code-diff-editor\"\r\n})\r\nexport class ChCodeDiffEditor {\r\n  #monacoDiffEditorInstance!: monaco.editor.IStandaloneDiffEditor;\r\n  #resizeObserver: ResizeObserver | undefined;\r\n\r\n  #editorId: string = \"\";\r\n\r\n  // Refs\r\n  #monacoRef: HTMLDivElement;\r\n  #absoluteContentRef: HTMLDivElement;\r\n\r\n  /**\r\n   * Specifies the language of the auto created model in the editor.\r\n   */\r\n  @Prop() readonly language!: string;\r\n  @Watch(\"language\")\r\n  languageChanged(newLanguage: string) {\r\n    this.#monacoDiffEditorInstance?.setModel({\r\n      original: monaco.editor.createModel(this.value, newLanguage),\r\n      modified: monaco.editor.createModel(this.modifiedValue, newLanguage)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies the modified value of the diff editor.\r\n   */\r\n  @Prop({ attribute: \"modified-value\" }) readonly modifiedValue: string;\r\n  @Watch(\"modifiedValue\")\r\n  modifiedValueChange(newModifiedValue: string) {\r\n    this.#monacoDiffEditorInstance\r\n      ?.getModel()!\r\n      .modified.setValue(newModifiedValue);\r\n  }\r\n\r\n  /**\r\n   * Specifies the editor options.\r\n   */\r\n  @Prop() readonly options: CodeDiffEditorOptions = {\r\n    automaticLayout: true,\r\n    mouseWheelScrollSensitivity: 4,\r\n    mouseWheelZoom: true,\r\n    enableSplitViewResizing: true,\r\n    renderSideBySide: true\r\n  };\r\n  @Watch(\"options\")\r\n  optionsChanged(options: CodeDiffEditorOptions) {\r\n    this.#monacoDiffEditorInstance?.updateOptions({\r\n      options\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies if the editor should be readonly.\r\n   * If the `readOnly` or `originalEditable` property is specified in the `options` property,\r\n   * this property has no effect.\r\n   */\r\n  @Prop({ attribute: \"readonly\" }) readonly readonly: boolean = true;\r\n  @Watch(\"readonly\")\r\n  readonlyChanged(newReadonly: boolean) {\r\n    this.#monacoDiffEditorInstance?.updateOptions({\r\n      originalEditable: this.options.originalEditable ?? !newReadonly,\r\n      readOnly: this.options.readOnly ?? newReadonly\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies the theme to be used for rendering.\r\n   */\r\n  @Prop() readonly theme: string = \"vs\";\r\n  @Watch(\"theme\")\r\n  themeChanged(newTheme: string) {\r\n    this.#monacoDiffEditorInstance?.updateOptions({\r\n      theme: newTheme\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies the original value of the diff editor.\r\n   */\r\n  @Prop() readonly value: string;\r\n  @Watch(\"value\")\r\n  valueChange(newValue: string) {\r\n    this.#monacoDiffEditorInstance?.getModel()!.original.setValue(newValue);\r\n  }\r\n\r\n  /**\r\n   * Specifies the schema URI for the YAML language.\r\n   */\r\n  @Prop() readonly yamlSchemaUri: string = \"\";\r\n  @Watch(\"yamlSchemaUri\")\r\n  yamlSchemaUriChange(newUri: string) {\r\n    if (this.language !== \"yaml\") {\r\n      return;\r\n    }\r\n\r\n    // Necessary to not combine the current scheme with the new scheme\r\n    this.#editorId = `ch-diff-editor-${autoId++}`;\r\n\r\n    if (newUri) {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: this.#getYamlSchemas()\r\n      });\r\n    } else {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: []\r\n      });\r\n    }\r\n\r\n    this.#monacoDiffEditorInstance.setModel({\r\n      original: monaco.editor.createModel(\r\n        this.value,\r\n        this.language,\r\n        monaco.Uri.parse(`file:///${this.#editorId}.txt`)\r\n      ),\r\n      modified: monaco.editor.createModel(\r\n        this.modifiedValue,\r\n        this.language,\r\n        monaco.Uri.parse(`file:///${this.#editorId}-modified.txt`)\r\n      )\r\n    });\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    this.#editorId = `ch-diff-editor-${autoId++}`;\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.#configureYaml();\r\n    this.#setupDiffEditor();\r\n\r\n    this.#resizeObserver = new ResizeObserver(entries => {\r\n      const absoluteContentEntry = entries[0].contentRect;\r\n\r\n      this.#monacoDiffEditorInstance.layout({\r\n        width: absoluteContentEntry.width,\r\n        height: absoluteContentEntry.height\r\n      });\r\n    });\r\n\r\n    this.#resizeObserver.observe(this.#absoluteContentRef);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#resizeObserver?.disconnect();\r\n    this.#resizeObserver = null;\r\n  }\r\n\r\n  /**\r\n   * Update the editor's options after the editor has been created.\r\n   * @param options Set of options to be updated\r\n   */\r\n  @Method()\r\n  async updateOptions(options: CodeDiffEditorOptions) {\r\n    this.#monacoDiffEditorInstance?.updateOptions(options);\r\n  }\r\n\r\n  #getYamlSchemas = () => [\r\n    {\r\n      // If YAML file is opened matching this glob\r\n      fileMatch: [`**/${this.#editorId}.*`],\r\n      // Then this schema will be downloaded from the internet and used.\r\n      uri: this.yamlSchemaUri\r\n    },\r\n    {\r\n      // If YAML file is opened matching this glob\r\n      fileMatch: [`**/${this.#editorId}-modified.*`],\r\n      // Then this schema will be downloaded from the internet and used.\r\n      uri: this.yamlSchemaUri\r\n    }\r\n  ];\r\n\r\n  #setupDiffEditor() {\r\n    this.#monacoDiffEditorInstance = monaco.editor.createDiffEditor(\r\n      this.#monacoRef,\r\n      {\r\n        ...this.options,\r\n        theme: this.options.theme ?? this.theme,\r\n        originalEditable: this.options.originalEditable ?? !this.readonly,\r\n        readOnly: this.options.readOnly ?? this.readonly\r\n      }\r\n    );\r\n\r\n    this.#monacoDiffEditorInstance.setModel({\r\n      original: monaco.editor.createModel(\r\n        this.value,\r\n        this.language,\r\n        monaco.Uri.parse(`file:///${this.#editorId}.txt`)\r\n      ),\r\n      modified: monaco.editor.createModel(\r\n        this.modifiedValue,\r\n        this.language,\r\n        monaco.Uri.parse(`file:///${this.#editorId}-modified.txt`)\r\n      )\r\n    });\r\n  }\r\n\r\n  #configureYaml() {\r\n    if (this.language === \"yaml\" && !!this.yamlSchemaUri) {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: this.#getYamlSchemas()\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class=\"ch-code-diff-editor-absolute-content\"\r\n          ref={el => (this.#absoluteContentRef = el)}\r\n        >\r\n          <div ref={el => (this.#monacoRef = el)}></div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}