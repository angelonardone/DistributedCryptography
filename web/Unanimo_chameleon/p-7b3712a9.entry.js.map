{"version":3,"names":["imageCss","ChImageStyle0","DATA_IMAGE","GET_IMAGE_PATH_CALLBACK_REGISTRY","ChImage","currentContainerRef","image","containerRefChanged","newContainer","this","removeAttribute","el","parentElement","setAttribute","srcChanged","newSrc","getImagePathCallback","updateDirectionInImageCustomVar","undefined","connectedCallback","getControlRegisterProperty","containerRef","src","disconnectedCallback","render","h","Host","key","class","disabled","type","style","styles"],"sources":["src/components/image/image.scss?tag=ch-image","src/components/image/image.tsx"],"sourcesContent":["ch-image {\r\n  /**\r\n   * @prop --ch-image-size:\r\n   * Specifies the box size that contains the image.\r\n   * @default 0.875em\r\n   */\r\n  --ch-image-size: 0.875em;\r\n\r\n  /**\r\n    * @prop --ch-image-background-size:\r\n    * Specifies the size of the image.\r\n    * @default 100%\r\n    */\r\n  --ch-image-background-size: 100%;\r\n\r\n  display: inline-grid;\r\n  inline-size: var(--ch-image-size);\r\n  block-size: var(--ch-image-size);\r\n  pointer-events: none;\r\n\r\n  --ch-image-src: var(--ch-start-img--base);\r\n}\r\n\r\n[data-ch-image] {\r\n  &:hover .ch-image--enabled {\r\n    --ch-image-src: var(--ch-start-img--hover, var(--ch-start-img--base));\r\n  }\r\n\r\n  &:active .ch-image--enabled {\r\n    --ch-image-src: var(--ch-start-img--active, var(--ch-start-img--base));\r\n  }\r\n\r\n  &:focus .ch-image--enabled {\r\n    --ch-image-src: var(\r\n      --ch-start-img--focus,\r\n      var(--ch-start-img--active, var(--ch-start-img--base))\r\n    );\r\n  }\r\n}\r\n\r\n.ch-image--disabled {\r\n  --ch-image-src: var(--ch-start-img--disabled, var(--ch-start-img--base));\r\n}\r\n\r\n.ch-image--background {\r\n  background: no-repeat center / var(--ch-image-background-size)\r\n    var(--ch-image-src);\r\n}\r\n\r\n.ch-image--mask {\r\n  -webkit-mask: no-repeat center / var(--ch-image-background-size)\r\n    var(--ch-image-src);\r\n  background-color: currentColor;\r\n}\r\n","import { Component, Host, h, Prop, Element, Watch } from \"@stencil/core\";\r\nimport {\r\n  GxImageMultiState,\r\n  GxImageMultiStateStart,\r\n  ImageRender\r\n} from \"../../common/types\";\r\nimport { updateDirectionInImageCustomVar } from \"../../common/utils\";\r\nimport { getControlRegisterProperty } from \"../../common/registry-properties\";\r\n\r\nconst DATA_IMAGE = \"data-ch-image\";\r\n\r\nlet GET_IMAGE_PATH_CALLBACK_REGISTRY: (\r\n  imageSrc: string\r\n) => GxImageMultiState | undefined;\r\n\r\n/**\r\n * A control to display multiple images, depending on the state (focus, hover,\r\n * active or disabled) of a parent element.\r\n */\r\n@Component({\r\n  tag: \"ch-image\",\r\n  styleUrl: \"image.scss\"\r\n})\r\nexport class ChImage {\r\n  #currentContainerRef!: HTMLElement;\r\n  #image: GxImageMultiStateStart | undefined;\r\n\r\n  @Element() el!: HTMLChImageElement;\r\n\r\n  // TODO: Should it be actionElement?\r\n  /**\r\n   * Specifies a reference for the container, in order to update the state of\r\n   * the icon. The reference must be an ancestor of the control.\r\n   * If not specified, the direct parent reference will be used.\r\n   */\r\n  @Prop() readonly containerRef: HTMLElement | undefined;\r\n  @Watch(\"containerRef\")\r\n  containerRefChanged(newContainer: HTMLElement | undefined) {\r\n    // Remove previous data in the current parent\r\n    this.#currentContainerRef?.removeAttribute(DATA_IMAGE);\r\n\r\n    this.#currentContainerRef = newContainer ?? this.el.parentElement;\r\n\r\n    // Add data in the new parent\r\n    this.#currentContainerRef?.setAttribute(DATA_IMAGE, \"\");\r\n  }\r\n\r\n  /**\r\n   * Specifies if the icon is disabled.\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * This property specifies a callback that is executed when the path the\r\n   * image needs to be resolved.\r\n   */\r\n  @Prop() readonly getImagePathCallback?: (\r\n    imageSrc: string\r\n  ) => GxImageMultiState | undefined;\r\n\r\n  /**\r\n   * Specifies the src for the image.\r\n   */\r\n  @Prop() readonly src: string | undefined;\r\n  @Watch(\"src\")\r\n  srcChanged(newSrc: string | undefined) {\r\n    const getImagePathCallback =\r\n      this.getImagePathCallback ?? GET_IMAGE_PATH_CALLBACK_REGISTRY;\r\n\r\n    if (!getImagePathCallback) {\r\n      this.#image = null;\r\n      return;\r\n    }\r\n    const image = getImagePathCallback(newSrc);\r\n\r\n    if (!image) {\r\n      this.#image = null;\r\n      return;\r\n    }\r\n\r\n    this.#image = newSrc\r\n      ? (updateDirectionInImageCustomVar(\r\n          image,\r\n          \"start\"\r\n        ) as GxImageMultiStateStart)\r\n      : undefined;\r\n  }\r\n\r\n  /**\r\n   * Specifies how the image will be rendered.\r\n   */\r\n  @Prop() readonly type: Exclude<ImageRender, \"img\"> = \"background\";\r\n\r\n  connectedCallback() {\r\n    // Initialize default getImagePathCallback\r\n    GET_IMAGE_PATH_CALLBACK_REGISTRY ??= getControlRegisterProperty(\r\n      \"getImagePathCallback\",\r\n      \"ch-image\"\r\n    );\r\n\r\n    this.#currentContainerRef = this.containerRef ?? this.el.parentElement;\r\n    this.#currentContainerRef?.setAttribute(DATA_IMAGE, \"\");\r\n\r\n    if (this.src) {\r\n      this.srcChanged(this.src);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#currentContainerRef?.removeAttribute(DATA_IMAGE);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        aria-hidden=\"true\"\r\n        class={{\r\n          \"ch-image--disabled\": this.disabled,\r\n          \"ch-image--enabled\": !this.disabled,\r\n          [`ch-image--${this.type}`]: true\r\n        }}\r\n        style={this.#image?.styles ?? undefined}\r\n      ></Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"iIAAA,MAAMA,EAAW,g5BACjB,MAAAC,EAAeD,ECQf,MAAME,EAAa,gBAEnB,IAAIC,E,MAYSC,EAAO,M,mEA2BmB,M,iEAyCgB,Y,CAnErDC,GACAC,G,wBAYA,mBAAAC,CAAoBC,GAElBC,MAAKJ,GAAsBK,gBAAgBR,GAE3CO,MAAKJ,EAAuBG,GAAgBC,KAAKE,GAAGC,cAGpDH,MAAKJ,GAAsBQ,aAAaX,EAAY,G,CAqBtD,UAAAY,CAAWC,GACT,MAAMC,EACJP,KAAKO,sBAAwBb,EAE/B,IAAKa,EAAsB,CACzBP,MAAKH,EAAS,KACd,M,CAEF,MAAMA,EAAQU,EAAqBD,GAEnC,IAAKT,EAAO,CACVG,MAAKH,EAAS,KACd,M,CAGFG,MAAKH,EAASS,EACTE,EACCX,EACA,SAEFY,S,CAQN,iBAAAC,GAEEhB,IAAqCiB,EACnC,uBACA,YAGFX,MAAKJ,EAAuBI,KAAKY,cAAgBZ,KAAKE,GAAGC,cACzDH,MAAKJ,GAAsBQ,aAAaX,EAAY,IAEpD,GAAIO,KAAKa,IAAK,CACZb,KAAKK,WAAWL,KAAKa,I,EAIzB,oBAAAC,GACEd,MAAKJ,GAAsBK,gBAAgBR,E,CAG7C,MAAAsB,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,yDACS,OACZC,MAAO,CACL,qBAAsBnB,KAAKoB,SAC3B,qBAAsBpB,KAAKoB,SAC3B,CAAC,aAAapB,KAAKqB,QAAS,MAE9BC,MAAOtB,MAAKH,GAAQ0B,QAAUd,W"}