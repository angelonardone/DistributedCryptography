{"version":3,"names":["WINDOW_ID","exports","ACTION_MENU_RENDER_TAG_NAME","ACTION_MENU_TAG_NAME","ACTION_MENU_SLOT_TAG_NAME","FIRST_ACTION_MENU","concat","LAST_ACTION_MENU","actionMenuItemIsActionable","itemUIModel","type","actionMenuItemActionableIsExpandable","items","undefined","actionMenuItemIsHyperlink","_a","link","url","getShadowRootOfEvent","event","composedPath","buttonIndex","findIndex","el","tagName","toLowerCase","shadowRoot","ShadowRoot","getActionMenuInfoInEvent","parentTagName","host","stopPropagation","ref","model","focusFirstActionMenuItem","actionMenuRef","querySelector","focus","focusActionMenuLastItem","getSiblingType","nextSibling","findPreviousSibling","element","previousElementSibling","findNextSibling","nextElementSibling","focusNextElement","actionMenuInfo","findMode","findFunction","siblingType","disabled","actionMenuElementIsFocused","focusComposedPath"],"sources":["src/components/action-menu/internal/utils.ts"],"sourcesContent":["import {\r\n  ActionMenuInfoInEvent,\r\n  ActionMenuItemActionableModel,\r\n  ActionMenuItemModel\r\n} from \"../types\";\r\nimport { ChameleonControlsTagName } from \"../../../common/types\";\r\nimport { focusComposedPath } from \"../../common/helpers\";\r\n\r\nexport const WINDOW_ID = \"window\";\r\nexport const ACTION_MENU_RENDER_TAG_NAME =\r\n  \"ch-action-menu-render\" satisfies ChameleonControlsTagName;\r\n\r\nexport const ACTION_MENU_TAG_NAME =\r\n  \"ch-action-menu\" satisfies ChameleonControlsTagName;\r\n\r\nexport const ACTION_MENU_SLOT_TAG_NAME = \"slot\";\r\n\r\nconst FIRST_ACTION_MENU = `:scope>${ACTION_MENU_TAG_NAME}` as const;\r\nconst LAST_ACTION_MENU = `:scope>${ACTION_MENU_TAG_NAME}:last-of-type` as const;\r\n\r\nexport const actionMenuItemIsActionable = (\r\n  itemUIModel: ActionMenuItemModel\r\n): itemUIModel is ActionMenuItemActionableModel =>\r\n  !itemUIModel.type || itemUIModel.type === \"actionable\";\r\n\r\nexport const actionMenuItemActionableIsExpandable = (\r\n  itemUIModel: ActionMenuItemActionableModel\r\n) => itemUIModel.items !== undefined;\r\n\r\nexport const actionMenuItemIsHyperlink = (\r\n  itemUIModel: ActionMenuItemActionableModel\r\n) => !!itemUIModel.link?.url;\r\n\r\nexport const getShadowRootOfEvent = (\r\n  event: KeyboardEvent | MouseEvent | PointerEvent\r\n) => {\r\n  const composedPath = event.composedPath();\r\n  const buttonIndex = composedPath.findIndex(el => {\r\n    const tagName = ((el as HTMLElement).tagName ?? \"\").toLowerCase();\r\n\r\n    return tagName === \"button\" || tagName === \"a\";\r\n  });\r\n\r\n  // The click event was not provoked by a button\r\n  if (buttonIndex === -1) {\r\n    return undefined;\r\n  }\r\n  const shadowRoot = composedPath[buttonIndex + 1];\r\n\r\n  return shadowRoot instanceof ShadowRoot ? shadowRoot : undefined;\r\n};\r\n\r\n/**\r\n * @returns The model to update the expanded value or undefined if the click\r\n * was not performed on any valid item.\r\n */\r\nexport const getActionMenuInfoInEvent = (\r\n  event: KeyboardEvent | MouseEvent | PointerEvent\r\n): ActionMenuInfoInEvent | typeof ACTION_MENU_RENDER_TAG_NAME | undefined => {\r\n  const shadowRoot = getShadowRootOfEvent(event);\r\n  if (!shadowRoot) {\r\n    return undefined;\r\n  }\r\n\r\n  const parentTagName = shadowRoot.host.tagName.toLowerCase();\r\n\r\n  // The button does not belong to a ch-action-menu or ch-action-menu-render element\r\n  if (\r\n    parentTagName !== ACTION_MENU_TAG_NAME &&\r\n    parentTagName !== ACTION_MENU_RENDER_TAG_NAME\r\n  ) {\r\n    return undefined;\r\n  }\r\n  event.stopPropagation();\r\n\r\n  return parentTagName === ACTION_MENU_RENDER_TAG_NAME\r\n    ? ACTION_MENU_RENDER_TAG_NAME\r\n    : {\r\n        ref: shadowRoot.host as HTMLChActionMenuElement,\r\n        model: (shadowRoot.host as HTMLChActionMenuElement).model\r\n      };\r\n};\r\n\r\nexport const focusFirstActionMenuItem = (\r\n  actionMenuRef: HTMLChPopoverElement | HTMLChActionMenuElement\r\n) =>\r\n  (\r\n    actionMenuRef.querySelector(FIRST_ACTION_MENU) as HTMLChActionMenuElement\r\n  )?.focus();\r\n\r\nexport const focusActionMenuLastItem = (\r\n  actionMenuRef: HTMLChPopoverElement | HTMLChActionMenuElement\r\n) =>\r\n  (\r\n    actionMenuRef.querySelector(LAST_ACTION_MENU) as HTMLChActionMenuElement\r\n  )?.focus();\r\n\r\nconst getSiblingType = (\r\n  nextSibling: Element\r\n):\r\n  | typeof ACTION_MENU_TAG_NAME\r\n  | typeof ACTION_MENU_SLOT_TAG_NAME\r\n  | undefined => {\r\n  const tagName = (nextSibling as HTMLElement).tagName?.toLowerCase();\r\n\r\n  if (tagName === ACTION_MENU_TAG_NAME) {\r\n    return ACTION_MENU_TAG_NAME;\r\n  }\r\n\r\n  return tagName === ACTION_MENU_SLOT_TAG_NAME\r\n    ? ACTION_MENU_SLOT_TAG_NAME\r\n    : undefined;\r\n};\r\n\r\nconst findPreviousSibling = (element: Element) =>\r\n  element.previousElementSibling;\r\nconst findNextSibling = (element: Element) => element.nextElementSibling;\r\n\r\nexport const focusNextElement = (\r\n  actionMenuInfo: ActionMenuInfoInEvent,\r\n  findMode: \"previous\" | \"next\"\r\n) => {\r\n  const findFunction =\r\n    findMode === \"previous\" ? findPreviousSibling : findNextSibling;\r\n\r\n  let nextSibling = findFunction(actionMenuInfo.ref);\r\n\r\n  while (nextSibling) {\r\n    const siblingType = getSiblingType(nextSibling);\r\n\r\n    // Keyboard navigation must be avoided if the next element is a slot\r\n    if (siblingType === ACTION_MENU_SLOT_TAG_NAME) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      siblingType === ACTION_MENU_TAG_NAME &&\r\n      !(nextSibling as HTMLChActionMenuElement).disabled\r\n    ) {\r\n      return (nextSibling as HTMLChActionMenuElement).focus();\r\n    }\r\n\r\n    nextSibling = findFunction(nextSibling);\r\n  }\r\n};\r\n\r\nexport const actionMenuElementIsFocused = (\r\n  actionMenuRef: HTMLChActionMenuElement\r\n) => actionMenuRef === focusComposedPath()[1];\r\n"],"mappings":"sIAQaA,EAASC,EAAA,IAAG,U,IACZC,EAA2BD,EAAA,IACtC,yBAEK,IAAME,EACX,iBAEK,IAAMC,EAA4B,OAEzC,IAAMC,EAAoB,UAAAC,OAAUH,GACpC,IAAMI,EAAmB,UAAAD,OAAUH,EAAoB,iB,IAE1CK,EAA0BP,EAAA,KAAG,SACxCQ,GAEA,OAACA,EAAYC,MAAQD,EAAYC,OAAS,YAA1C,I,IAEWC,EAAoCV,EAAA,KAAG,SAClDQ,GACG,OAAAA,EAAYG,QAAUC,SAAtB,I,IAEQC,EAAyBb,EAAA,KAAG,SACvCQ,GAA0C,IAAAM,EACvC,UAAEA,EAAAN,EAAYO,QAAI,MAAAD,SAAA,SAAAA,EAAEE,IAAA,IAElB,IAAMC,EAAuB,SAClCC,GAEA,IAAMC,EAAeD,EAAMC,eAC3B,IAAMC,EAAcD,EAAaE,WAAU,SAAAC,G,MACzC,IAAMC,IAAYT,EAAAQ,EAAmBC,WAAO,MAAAT,SAAA,EAAAA,EAAI,IAAIU,cAEpD,OAAOD,IAAY,UAAYA,IAAY,G,IAI7C,GAAIH,KAAiB,EAAG,CACtB,OAAOR,S,CAET,IAAMa,EAAaN,EAAaC,EAAc,GAE9C,OAAOK,aAAsBC,WAAaD,EAAab,SACzD,E,IAMae,EAAwB3B,EAAA,KAAG,SACtCkB,GAEA,IAAMO,EAAaR,EAAqBC,GACxC,IAAKO,EAAY,CACf,OAAOb,S,CAGT,IAAMgB,EAAgBH,EAAWI,KAAKN,QAAQC,cAG9C,GACEI,IAAkB1B,GAClB0B,IAAkB3B,EAClB,CACA,OAAOW,S,CAETM,EAAMY,kBAEN,OAAOF,IAAkB3B,EACrBA,EACA,CACE8B,IAAKN,EAAWI,KAChBG,MAAQP,EAAWI,KAAiCG,MAE5D,I,IAEaC,EAAwBjC,EAAA,KAAG,SACtCkC,GAA6D,IAAApB,EAG3D,OAAAA,EAAAoB,EAAcC,cAAc/B,MAC7B,MAAAU,SAAA,SAAAA,EAAEsB,OAAK,I,IAEGC,EAAuBrC,EAAA,KAAG,SACrCkC,GAA6D,IAAApB,EAG3D,OAAAA,EAAAoB,EAAcC,cAAc7B,MAC7B,MAAAQ,SAAA,SAAAA,EAAEsB,OAAK,IAEV,IAAME,EAAiB,SACrBC,G,MAKA,IAAMhB,GAAWT,EAAAyB,EAA4BhB,WAAO,MAAAT,SAAA,SAAAA,EAAEU,cAEtD,GAAID,IAAYrB,EAAsB,CACpC,OAAOA,C,CAGT,OAAOqB,IAAYpB,EACfA,EACAS,SACN,EAEA,IAAM4B,EAAsB,SAACC,GAC3B,OAAAA,EAAQC,sBAAR,EACF,IAAMC,EAAkB,SAACF,GAAqB,OAAAA,EAAQG,kBAAR,E,IAEjCC,EAAgB7C,EAAA,KAAG,SAC9B8C,EACAC,GAEA,IAAMC,EACJD,IAAa,WAAaP,EAAsBG,EAElD,IAAIJ,EAAcS,EAAaF,EAAef,KAE9C,MAAOQ,EAAa,CAClB,IAAMU,EAAcX,EAAeC,GAGnC,GAAIU,IAAgB9C,EAA2B,CAC7C,M,CAGF,GACE8C,IAAgB/C,IACdqC,EAAwCW,SAC1C,CACA,OAAQX,EAAwCH,O,CAGlDG,EAAcS,EAAaT,E,CAE/B,I,IAEaY,EAA0BnD,EAAA,KAAG,SACxCkC,GACG,OAAAA,IAAkBkB,IAAoB,EAAtC,G"}