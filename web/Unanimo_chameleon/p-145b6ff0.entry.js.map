{"version":3,"names":["tabularGridColumnDisplayCss","ChTabularGridColumnDisplayStyle0","ChTabularGridColumnDisplay","observer","IntersectionObserver","this","column","hidden","getComputedStyle","el","display","componentWillLoad","observe"],"sources":["src/components/tabular-grid/column/display/tabular-grid-column-display.scss?tag=ch-tabular-grid-column-display","src/components/tabular-grid/column/display/tabular-grid-column-display.tsx"],"sourcesContent":["@layer ch-tabular-grid {\r\n  ch-tabular-grid-column-display {\r\n    position: fixed !important;\r\n    width: 0 !important;\r\n    height: 0 !important;\r\n    padding: 0 !important;\r\n    border: none !important;\r\n    margin: 0 !important;\r\n    right: 0 !important;\r\n    bottom: 0 !important;\r\n    pointer-events: none !important;\r\n  }\r\n}\r\n","import { Component, Element, Prop } from \"@stencil/core\";\r\n\r\n/**\r\n * The `ch-tabular-grid-column-display` component is responsible for determining the\r\n * visibility of a grid column and updating its hidden property based on\r\n * whether the monitored class is visible or not.\r\n */\r\n@Component({\r\n  tag: \"ch-tabular-grid-column-display\",\r\n  styleUrl: \"tabular-grid-column-display.scss\",\r\n  shadow: false\r\n})\r\nexport class ChTabularGridColumnDisplay {\r\n  private observer = new IntersectionObserver(() => {\r\n    this.column.hidden = getComputedStyle(this.el).display === \"none\";\r\n  });\r\n\r\n  @Element() el: HTMLChTabularGridColumnDisplayElement;\r\n\r\n  /**\r\n   * The column element that is being monitored.\r\n   */\r\n  @Prop() readonly column!: HTMLChTabularGridColumnElement;\r\n\r\n  componentWillLoad() {\r\n    this.observer.observe(this.el);\r\n  }\r\n}\r\n"],"mappings":"2CAAA,MAAMA,EAA8B,6UACpC,MAAAC,EAAeD,E,MCWFE,EAA0B,M,+CAC7BC,SAAW,IAAIC,sBAAqB,KAC1CC,KAAKC,OAAOC,OAASC,iBAAiBH,KAAKI,IAAIC,UAAY,MAAM,I,wBAUnE,iBAAAC,GACEN,KAAKF,SAASS,QAAQP,KAAKI,G"}