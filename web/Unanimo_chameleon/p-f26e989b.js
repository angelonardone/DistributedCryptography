import{a as e,c as n}from"./p-bb7b9247.js";e();const s=(e,n)=>`This is the third most common WCAG accessibility issue (https://webaim.org/projects/million/#wcag_div). Please bind this component with ${n?"an actual label":"a label"} to solve this accessibility issue.\n\nIf the component has a visible label, do the following:\n  <label for="unique-id">\n    Label for the element\n  </label>\n  <${e} id="unique-id"></${e}>\n\nIf there is no visible label, do the following:\n  <${e} accessibleName="Label for the element"></${e}>\n\nElement that causes this issue:`;const t=(e,n,s)=>`The label "${n}" is already used for the "${e}" component, but also the accessibleName property is set with "${s}".\nOnly the visible label will be used for the element, so the accessibleName property binding can be removed.\n\nElement that causes this issue:`;const i=e=>`The "${e}" component doesn't have a label set. ${s(e,false)}`;const l=e=>`All labels for the "${e}" component are empty, so there is no real label for it. ${s(e,true)}`;const o=e=>{if(!e||e.length===0){return undefined}return[...e].find((e=>e.textContent.trim()!==""))?.textContent.trim()};const a=(e,s,o,a,r)=>{if(!n()){return}const c=!r||r.trim()===""?undefined:r;if(a!==undefined&&c!==undefined){return console.warn(t(s,a,r),e)}if((!o||o.length===0)&&!r){return console.warn(i(s),e)}if(c===undefined&&a===undefined){console.warn(l(s),e)}};export{a,o as g};
//# sourceMappingURL=p-f26e989b.js.map