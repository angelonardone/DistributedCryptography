{"version":3,"names":["tabularGridRenderCss","ChTabularGridRenderStyle0","ARIA_SORT_MAP","undefined","asc","desc","ChTabularGridRender","exports","_a","_modelVersion","set","this","_isRowsetItemSimpleModel","rowset","_isRowsetItemGroupModel","_renderGrid","columns","rowsets","h","key","__classPrivateFieldGet","_this","class","_renderColumns","call","_renderRowsets","parts","map","_renderColumn","column","_b","_c","_d","_e","role","accessibleName","sortDirection","columnId","id","columnName","caption","columnNameHidden","captionHidden","columnTooltip","tooltip","order","size","resizable","columnResizable","sortable","columnSortable","hidden","hideable","columnHideable","freeze","settingable","normalizedModel","Array","isArray","_renderRowsetSimple","rows","_renderRowsetGroup","_renderRow","rowsetId","row","rowid","ref","el","cells","_renderCell","cell","index","cellid","text","class_1","prototype","modelChanged","__classPrivateFieldSet","render","Host","theme","model"],"sources":["src/components/tabular-grid-render/tabular-grid-render.scss?tag=ch-tabular-grid-render&encapsulation=shadow","src/components/tabular-grid-render/tabular-grid-render.tsx"],"sourcesContent":["ch-tabular-grid {\r\n  --indent: 16px;\r\n}\r\n","import { Component, Host, Prop, Watch, h } from \"@stencil/core\";\r\nimport {\r\n  TabularGridCellItemModel,\r\n  TabularGridColumnItemModel,\r\n  TabularGridColumnsModel,\r\n  TabularGridModel,\r\n  TabularGridRowItemModel,\r\n  TabularGridRowsetItemGroupModel,\r\n  TabularGridRowsetItemSimpleModel,\r\n  TabularGridRowsetsGroupModel,\r\n  TabularGridRowsetsModel,\r\n  TabularGridRowsModel\r\n} from \"./types\";\r\n\r\nconst ARIA_SORT_MAP = {\r\n  undefined: \"none\",\r\n  asc: \"ascending\",\r\n  desc: \"descending\"\r\n} as const;\r\n\r\n@Component({\r\n  tag: \"ch-tabular-grid-render\",\r\n  styleUrl: \"tabular-grid-render.scss\",\r\n  shadow: true\r\n})\r\nexport class ChTabularGridRender {\r\n  #modelVersion = 0;\r\n\r\n  /**\r\n   * Determines if the columns can be hidden by the user\r\n   */\r\n  @Prop() readonly columnHideable: boolean = true;\r\n\r\n  /**\r\n   *  Determines if the columns can be resized by the user.\r\n   */\r\n  @Prop() readonly columnResizable: boolean = true;\r\n\r\n  /**\r\n   * Determines if the columns can be sorted by the user.\r\n   */\r\n  @Prop() readonly columnSortable: boolean = true;\r\n\r\n  /**\r\n   * Specifies the content of the tabular grid control.\r\n   */\r\n  @Prop() readonly model: TabularGridModel;\r\n  @Watch(\"model\")\r\n  modelChanged() {\r\n    this.#modelVersion++;\r\n  }\r\n\r\n  /**\r\n   * TODO: Remove this property\r\n   */\r\n  @Prop() readonly theme: string;\r\n\r\n  #isRowsetItemSimpleModel = (\r\n    rowset: any\r\n  ): rowset is TabularGridRowsetItemSimpleModel => rowset && !(\"id\" in rowset);\r\n\r\n  #isRowsetItemGroupModel = (\r\n    rowset: any\r\n  ): rowset is TabularGridRowsetItemGroupModel => rowset && \"id\" in rowset;\r\n\r\n  #renderGrid = (\r\n    columns: TabularGridColumnsModel,\r\n    rowsets: TabularGridRowsetsModel\r\n  ) => (\r\n    <ch-tabular-grid key={this.#modelVersion} class=\"tabular-grid\">\r\n      {this.#renderColumns(columns)}\r\n      {this.#renderRowsets(rowsets)}\r\n    </ch-tabular-grid>\r\n  );\r\n\r\n  #renderColumns = (columns: TabularGridColumnsModel) => (\r\n    <ch-tabular-grid-columnset parts={true} class=\"tabular-grid-column-set\">\r\n      {columns.map(this.#renderColumn)}\r\n    </ch-tabular-grid-columnset>\r\n  );\r\n\r\n  #renderColumn = (column: TabularGridColumnItemModel) => (\r\n    <ch-tabular-grid-column\r\n      parts={column.parts ?? true}\r\n      role=\"columnheader\"\r\n      aria-label={column.accessibleName}\r\n      aria-sort={ARIA_SORT_MAP[column.sortDirection]}\r\n      class=\"tabular-grid-column\"\r\n      columnId={column.id}\r\n      columnName={column.caption}\r\n      columnNameHidden={column.captionHidden}\r\n      columnTooltip={column.tooltip}\r\n      order={column.order}\r\n      size={column.size}\r\n      resizable={column.resizable ?? this.columnResizable}\r\n      sortable={column.sortable ?? this.columnSortable}\r\n      sortDirection={column.sortDirection}\r\n      hidden={column.hidden}\r\n      hideable={column.hideable ?? this.columnHideable}\r\n      freeze={column.freeze}\r\n      settingable={false}\r\n    ></ch-tabular-grid-column>\r\n  );\r\n\r\n  #renderRowsets = (rowsets: TabularGridRowsetsModel) => {\r\n    const normalizedModel = Array.isArray(rowsets) ? rowsets : [rowsets];\r\n\r\n    return normalizedModel.map(rowset => {\r\n      if (this.#isRowsetItemSimpleModel(rowset)) {\r\n        return this.#renderRowsetSimple(rowset.rows, rowset.rowsets);\r\n      }\r\n      if (this.#isRowsetItemGroupModel(rowset)) {\r\n        return this.#renderRowsetGroup(rowset);\r\n      }\r\n    });\r\n  };\r\n\r\n  #renderRowsetSimple = (\r\n    rows: TabularGridRowsModel,\r\n    rowsets?: TabularGridRowsetsGroupModel\r\n  ) => (\r\n    <ch-tabular-grid-rowset role=\"rowgroup\" class=\"tabular-grid-rowset\">\r\n      {rows.map(this.#renderRow)}\r\n      {rowsets && rowsets.map(this.#renderRowsetGroup)}\r\n    </ch-tabular-grid-rowset>\r\n  );\r\n\r\n  #renderRowsetGroup = (rowset: TabularGridRowsetItemGroupModel) => (\r\n    <ch-tabular-grid-rowset\r\n      rowsetId={rowset.id}\r\n      role=\"rowgroup\"\r\n      class=\"tabular-grid-rowset\"\r\n    >\r\n      <ch-tabular-grid-rowset-legend\r\n        parts={rowset.parts ?? true}\r\n        aria-label={rowset.accessibleName}\r\n        class=\"tabular-grid-rowset-legend\"\r\n      >\r\n        {rowset.caption}\r\n      </ch-tabular-grid-rowset-legend>\r\n\r\n      {rowset.rows.map(this.#renderRow)}\r\n      {rowset.rowsets && rowset.rowsets.map(this.#renderRowsetGroup)}\r\n    </ch-tabular-grid-rowset>\r\n  );\r\n\r\n  #renderRow = (row: TabularGridRowItemModel) => (\r\n    <ch-tabular-grid-row\r\n      rowid={row.id}\r\n      /**\r\n       * TODO: Replace the temporary workaround of using \"ref={}\" to assign the property instead of the attribute.\r\n       * Use \"parts={row.parts ?? true}\" when <ch-tabular-grid-row> correctly declare the JSX property.\r\n       */\r\n      ref={(el: any) => {\r\n        if (el) {\r\n          el.parts = row.parts ?? true;\r\n        }\r\n      }}\r\n      role=\"row\"\r\n      class=\"tabular-grid-row\"\r\n    >\r\n      {row.cells.map(this.#renderCell)}\r\n      {row.rows && this.#renderRowsetSimple(row.rows)}\r\n    </ch-tabular-grid-row>\r\n  );\r\n\r\n  #renderCell = (cell: TabularGridCellItemModel, index: number) => {\r\n    return (\r\n      <ch-tabular-grid-cell\r\n        cellid={cell.id}\r\n        /**\r\n         * TODO: Replace the temporary workaround of using \"ref={}\" to assign the property instead of the attribute.\r\n         * Use \"parts={row.parts ?? true}\" when <ch-tabular-grid-cell> correctly declare the JSX property.\r\n         */\r\n        ref={(el: any) => {\r\n          if (el) {\r\n            el.parts = cell.parts ?? true;\r\n          }\r\n        }}\r\n        role=\"gridcell\"\r\n        aria-colindex={++index}\r\n        class=\"tabular-grid-cell\"\r\n      >\r\n        {cell.text}\r\n      </ch-tabular-grid-cell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host role=\"grid\">\r\n        {this.theme && <ch-theme model={this.theme}></ch-theme>}\r\n        {this.model && this.#renderGrid(this.model.columns, this.model.rowsets)}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}