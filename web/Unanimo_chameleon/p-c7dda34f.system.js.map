{"version":3,"names":["state","renderedItems","Set","expandedItemChangeHandler","event","detail","expanded","add","id","updateShowcase","render","h","class","disabled","model","singleItemExpanded","onExpandedChange","has","slot","type","placeholder","accessibleName","minValue","maxValue","showcaseRenderProperties","caption","properties","value","accordionSimpleModel","values","accordionDisabledModel","accordionWithExpandedSizeModel","lightDOMInputPropertiesInfo","name","fixed","lightDOMSliderPropertiesInfo","lightDOMMarkup","framework","concat","showcaseTemplateClassProperty","renderShowcaseProperties","lightDOMMarkupReact","insertSpacesAtTheBeginningExceptForTheFirstLine","lightDOMMarkupStencil","showcasePropertiesInfo","defaultValue","accordionShowcaseStory","markupWithUIModel","uiModel","uiModelType","react","stencil","moreActionsBlockAlign","moreActionsCaption","moreActionsInlineAlign","itemsOverflowBehavior","modelMinimal","GXWebModel","eagerLargeModel","actionGroupShowcaseStory","ticketList","checkbox","checked","selection","editableItems","modifyItemCaptionCallback","GitHubHistoryModel","GitHubChangesModel","agentTickets","recentKBs","panelToolbox","GxEAIRecentChats","GxEAINotifications","keyboardNavigation","columns","columnSpan","actionListShowcaseStory","blockAlign","buttonAccessibleName","inlineAlign","kbExplorerModel","style","minBlockSize","minInlineSize","simpleModel1","simpleModel2","undefined","actionMenuShowcaseStory","lastRead","handleRead","barcodeBoxWidth","barcodeBoxHeight","scanning","onRead","barcodeScannerShowcaseStory","markupWithoutUIModel","PROCESSING_PLACEHOLDER","timeOut","ASSISTANT_RESPONSE_MARKDOWN","ASSISTANT_RESPONSE_SHORT_MARKDOWN","sendChatToLLM","chatRef","document","querySelector","shadowRoot","addNewMessage","Date","getTime","role","content","status","setTimeout","updateLastMessage","dummyStreaming","counter","stringToDisplay","mode","streamingCompleted","length","substring","chatCallbacks","clear","Promise","resolve","uploadImage","stopGeneratingAnswer","clearTimeout","chatTranslations","clearChat","copyResponseButton","downloadCodeButton","imagePicker","removeUploadedImage","sendButton","sendInput","stopGeneratingAnswerButton","text","copyCodeButton","processing","sourceFiles","longChatRecord","Array","from","_","index","codeFixerRecord","metadata","parts","copy","navigator","clipboard","writeText","mercuryCodeRender","copyButtonAccessibleName","options","title","onClick","plainText","language","lastNestedChildClass","showIndicator","mercuryChatMessageRender","theme","messageModel","part","dateTime","renderCode","designSystem","callbacks","generatingResponse","loadingState","markdownTheme","renderItem","isMobile","items","showAdditionalContent","translations","chatShowcaseStory","formRefs","formValues","handleValueInput","formId","checkboxId","Object","fromEntries","FormData","ref","el","checkedValue","unCheckedValue","indeterminate","readonly","startImgSrc","startImgType","onInput","htmlFor","checkboxShowcaseStory","src","frameborder","codeDiffEditorShowcaseStory","codeEditorShowcaseStory","codeShowcaseStory","itemsFilteredByTheServer","comboBoxFilterChange","filter","alreadyProcessed","changeValues","handleInputChange","comboBoxId","suggestOptions","handleChangeEvent","popoverInlineAlign","suggest","resizable","suggestDebounce","onChange","simpleModelComboBox1","simpleModelComboBoxWithIcons","smallModel","dataTypeInGeneXus","comboBoxShowcaseStory","handleClose","show","handleDialogOpen","adjustPositionAfterResize","allowDrag","closeButtonAccessibleName","modal","showFooter","showHeader","onDialogClosed","showcaseButtonPropertiesInfo","dialogShowcaseStory","autocapitalize","autocomplete","autoGrow","debounce","maxLength","multiline","pattern","picture","pictureCallback","dummyPictureCallback","showTrigger","spellcheck","triggerButtonAccessibleName","editShowcaseStory","flexibleLayoutShowcaseStory","button2Ref","containerRef","showcaseImage1PropertiesInfo","showcaseButton1PropertiesInfo","showcaseImage2PropertiesInfo","showcaseButton2PropertiesInfo","imageShowcaseStory","layout1","direction","size","layout2","minSize","dragBar","hidden","layout3","layout4","layout5","layout6","layout7","layout8","layoutSplitterShowcaseStory","markdownReadmeModel","initialMarkdown","rawHTMLEnabled","checkboxRawHTMLRef","checkboxIndicatorRef","textareaRef","handleValueChange","handleCheckboxValueChange","key","rawHtml","markdownShowcaseStory","unanimoShowcase","link","url","preventNavigation","preventDefault","expandableButton","expandableButtonPosition","selectedLinkIndicator","showCaptionOnCollapse","tooltipDelay","onHyperlinkClick","navigationListShowcaseStory","paginatorShowcaseStory","buttonRef","handlePopoverOpened","handlePopoverClosed","actionElement","blockSizeMatch","closeOnClickOutside","inlineSizeMatch","overflowBehavior","positionTry","onPopoverOpened","onPopoverClosed","display","showcaseOpenButtonPropertiesInfo","showcaseCloseButtonPropertiesInfo","popoverShowcaseStory","background","errorCorrectionLevel","fill","radius","qrShowcaseStory","switchId","radioGroupShowcaseStory","basicModel1","model2","segmentedControlShowcaseStory","shortcutsShowcaseStory","handleExpandedChange","forceUpdate","expandButtonExpandAccessibleName","expandButtonCollapseAccessibleName","expandButtonExpandCaption","expandButtonCollapseCaption","showExpandButton","opacity","showcaseSidebarPropertiesInfo","showcaseNavigationListPropertiesInfo","sidebarShowcaseStory","showValue","step","sliderShowcaseStory","checkedCaption","unCheckedCaption","switchShowcaseStory","selectedItemChangeHandler","newSelectedId","selectedId","handleItemClose","console","log","contain","closeButton","tabListPosition","dragOutside","overflow","showCaptions","showTabListEnd","showTabListStart","sortable","onItemClose","onSelectedItemChange","showLines","lazyLoadTreeItemsCallback","preferencesModel","closeButtonModel","disabledModel1","disabledModel2","disabledModel3","disabledModel4","tabShowcaseStory","tabularGridShowcaseStory","columnsCountry","columnsTreeGrid","columnsPropertyGrid","rowCountryAR","cells","rowCountryBO","rowCountryBR","rowCountryCL","rowCountryCO","rowCountryEC","rowCountryPY","rowCountryPE","rowCountryUY","rowCountryVE","rowCountryCA","rowCountryMX","rowCountryUS","basicModel","rowsets","rows","groupModel","treeGridModel","propertyGridModel","themeBaseUrl","tabularGridRenderShowcaseStory","format","showTooltipOnOverflow","textBlockShowcaseStory","delay","showcaseTooltip1PropertiesInfo","showcaseTooltip2PropertiesInfo","showcaseTooltip3PropertiesInfo","tooltipShowcaseStory","storyDidLoad","checkDroppableZoneCallback","dragDisabled","dropDisabled","dropItemsCallback","dropMode","expandOnClick","filterDebounce","filterList","filterOptions","filterType","multiSelection","sortItemsCallback","toggleCheckboxes","importObjectsModel","fileSystemModel","disabledItemsModel","lazyLargeModel","treeViewShowcaseStory","showcaseStories","exports","accordion","chat","code","dialog","edit","image","popover","qr","sidebar","slider","switch","tab","textblock","tooltip","showcaseCustomStories","paginator","shortcuts"],"sources":["src/showcase/assets/components/accordion/accordion.showcase.tsx","src/showcase/assets/components/action-group/action-group.showcase.tsx","src/showcase/assets/components/action-list/action-list.showcase.tsx","src/showcase/assets/components/action-menu/action-menu.showcase.tsx","src/showcase/assets/components/barcode-scanner/barcode-scanner.showcase.tsx","src/showcase/assets/components/chat/callbacks.ts","src/showcase/assets/components/chat/mercury-code-render.tsx","src/showcase/assets/components/chat/chat.showcase.tsx","src/showcase/assets/components/checkbox/checkbox.showcase.tsx","src/showcase/assets/components/code-diff-editor/code-diff-editor.showcase.tsx","src/showcase/assets/components/code-editor/code-editor.showcase.tsx","src/showcase/assets/components/code/code.showcase.tsx","src/showcase/assets/components/combo-box/combo-box.showcase.tsx","src/showcase/assets/components/dialog/dialog.showcase.tsx","src/showcase/assets/components/edit/edit.showcase.tsx","src/showcase/assets/components/flexible-layout/flexible-layout.showcase.tsx","src/showcase/assets/components/image/image.showcase.tsx","src/showcase/assets/components/layout-splitter/models.ts","src/showcase/assets/components/layout-splitter/layout-splitter.showcase.tsx","src/showcase/assets/components/markdown/models.ts","src/showcase/assets/components/markdown/markdown.showcase.tsx","src/showcase/assets/components/navigation-list/models.ts","src/showcase/assets/components/navigation-list/navigation-list.showcase.tsx","src/showcase/assets/components/paginator/paginator.showcase.tsx","src/showcase/assets/components/popover/popover.showcase.tsx","src/showcase/assets/components/qr/qr.showcase.tsx","src/showcase/assets/components/radio-group/models.ts","src/showcase/assets/components/radio-group/radio-group.showcase.tsx","src/showcase/assets/components/segmented-control/models.ts","src/showcase/assets/components/segmented-control/segmented-control.showcase.tsx","src/showcase/assets/components/shortcuts/shortcuts.showcase.tsx","src/showcase/assets/components/sidebar/sidebar.showcase.tsx","src/showcase/assets/components/slider/slider.showcase.tsx","src/showcase/assets/components/switch/switch.showcase.tsx","src/showcase/assets/components/tab/tab.showcase.tsx","src/showcase/assets/components/tabular-grid/tabular-grid.showcase.tsx","src/showcase/assets/components/tabular-grid-render/models.ts","src/showcase/assets/components/tabular-grid-render/tabular-grid-render.showcase.tsx","src/showcase/assets/components/textblock/textblock.showcase.tsx","src/showcase/assets/components/tooltip/tooltip.showcase.tsx","src/showcase/assets/components/tree-view/tree-view.showcase.tsx","src/showcase/assets/components/showcase-stories.ts"],"sourcesContent":["import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplateFrameWork,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  accordionDisabledModel,\r\n  accordionSimpleModel,\r\n  accordionWithExpandedSizeModel\r\n} from \"./models\";\r\nimport {\r\n  AccordionItemExpandedChangeEvent,\r\n  ChAccordionRenderCustomEvent\r\n} from \"../../../../components\";\r\nimport {\r\n  insertSpacesAtTheBeginningExceptForTheFirstLine,\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty,\r\n  updateShowcase\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChAccordionRenderElement> = {};\r\n\r\nconst renderedItems = new Set();\r\n\r\nconst expandedItemChangeHandler = (\r\n  event: ChAccordionRenderCustomEvent<AccordionItemExpandedChangeEvent>\r\n) => {\r\n  if (event.detail.expanded) {\r\n    renderedItems.add(event.detail.id);\r\n  }\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst render = () => (\r\n  <ch-accordion-render\r\n    class=\"accordion-filled\"\r\n    disabled={state.disabled}\r\n    model={state.model}\r\n    singleItemExpanded={state.singleItemExpanded}\r\n    onExpandedChange={expandedItemChangeHandler}\r\n  >\r\n    {renderedItems.has(\"item 1\") && (\r\n      <div slot=\"item 1\">Content of the item 1</div>\r\n    )}\r\n\r\n    {renderedItems.has(\"item 2\") && (\r\n      <div slot=\"item 2\">\r\n        Content of the item 2\r\n        <button class=\"button-primary\" type=\"button\">\r\n          Some action\r\n        </button>\r\n        <div>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga rem cum\r\n          deleniti? Ullam sit saepe non laudantium dicta alias, corrupti dolores\r\n          rerum sint, maiores expedita esse, molestias modi perspiciatis\r\n          pariatur.\r\n        </div>\r\n        <div>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga rem cum\r\n          deleniti? Ullam sit saepe non laudantium dicta alias, corrupti dolores\r\n          rerum sint, maiores expedita esse, molestias modi perspiciatis\r\n          pariatur.\r\n        </div>\r\n      </div>\r\n    )}\r\n\r\n    {renderedItems.has(\"item 3\") && (\r\n      <div slot=\"item 3\">\r\n        Content of the item 3\r\n        <button class=\"button-secondary\" type=\"button\">\r\n          Some action\r\n        </button>\r\n      </div>\r\n    )}\r\n\r\n    <div slot=\"item 4 header\">\r\n      Custom header\r\n      <input\r\n        aria-label=\"Search\"\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n      />\r\n      <ch-slider\r\n        accessibleName=\"Temperature\"\r\n        class=\"slider slider-secondary\"\r\n        minValue={0}\r\n        maxValue={50}\r\n      ></ch-slider>\r\n    </div>\r\n\r\n    {renderedItems.has(\"item 4\") && (\r\n      <div slot=\"item 4\">\r\n        Content of the item 4\r\n        <button class=\"button-tertiary\" type=\"button\">\r\n          Some action\r\n        </button>\r\n      </div>\r\n    )}\r\n  </ch-accordion-render>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChAccordionRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          caption: \"Model\",\r\n          type: \"enum\",\r\n          value: accordionSimpleModel,\r\n          values: [\r\n            { caption: \"Simple model\", value: accordionSimpleModel },\r\n            { caption: \"Disabled model\", value: accordionDisabledModel },\r\n            {\r\n              caption: \"Expanded size model\",\r\n              value: accordionWithExpandedSizeModel\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"singleItemExpanded\",\r\n          caption: \"Single Item Expanded\",\r\n          type: \"boolean\",\r\n          value: false\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          type: \"boolean\",\r\n          value: false\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst lightDOMInputPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLInputElement>[] =\r\n  [\r\n    { name: \"aria-label\", fixed: true, value: \"Search\", type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"input\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"placeholder\", fixed: true, value: \"Search...\", type: \"string\" },\r\n    { name: \"type\", fixed: true, value: \"text\", type: \"string\" }\r\n  ];\r\n\r\nconst lightDOMSliderPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChSliderElement>[] =\r\n  [\r\n    {\r\n      name: \"accessibleName\",\r\n      fixed: true,\r\n      value: \"Temperature\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"slider slider-secondary\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"minValue\", fixed: true, value: 0, type: \"number\" },\r\n    { name: \"maxValue\", fixed: true, value: 50, type: \"number\" }\r\n  ];\r\n\r\nconst lightDOMMarkup = (\r\n  framework: ShowcaseTemplateFrameWork\r\n) => `{renderedItems.has(\"item 1\") && (\r\n  <div slot=\"item 1\">Content of the item 1</div>\r\n)}\r\n\r\n{renderedItems.has(\"item 2\") && (\r\n  <div slot=\"item 2\">\r\n    Content of the item 2\r\n    <button ${showcaseTemplateClassProperty(\r\n      framework,\r\n      \"button-primary\"\r\n    )} type=\"button\">\r\n      Some action\r\n    </button>\r\n    <div>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga rem cum\r\n      deleniti? Ullam sit saepe non laudantium dicta alias, corrupti dolores\r\n      rerum sint, maiores expedita esse, molestias modi perspiciatis\r\n      pariatur.\r\n    </div>\r\n    <div>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga rem cum\r\n      deleniti? Ullam sit saepe non laudantium dicta alias, corrupti dolores\r\n      rerum sint, maiores expedita esse, molestias modi perspiciatis\r\n      pariatur.\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n{renderedItems.has(\"item 3\") && (\r\n  <div slot=\"item 3\">\r\n    Content of the item 3\r\n    <button ${showcaseTemplateClassProperty(\r\n      framework,\r\n      \"button-secondary\"\r\n    )} type=\"button\">\r\n      Some action\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n<div slot=\"item 4 header\">\r\n  Custom header\r\n  <input${renderShowcaseProperties(\r\n    {} as any,\r\n    framework,\r\n    lightDOMInputPropertiesInfo,\r\n    5\r\n  )}\r\n  />\r\n  <ch-slider${renderShowcaseProperties(\r\n    {} as any,\r\n    framework,\r\n    lightDOMSliderPropertiesInfo,\r\n    5\r\n  )}\r\n  ></ch-slider>\r\n</div>\r\n\r\n{renderedItems.has(\"item 4\") && (\r\n  <div slot=\"item 4\">\r\n    Content of the item 4\r\n    <button ${\r\n      framework === \"react\" ? \"className\" : \"class\"\r\n    }=\"button-tertiary\" type=\"button\">\r\n      Some action\r\n    </button>\r\n  </div>\r\n)}`;\r\n\r\nconst lightDOMMarkupReact = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"react\"),\r\n  8\r\n);\r\n\r\nconst lightDOMMarkupStencil = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"stencil\"),\r\n  10\r\n);\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChAccordionRenderElement>[] =\r\n  [\r\n    { name: \"class\", fixed: true, value: \"accordion\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"getImagePathCallback\",\r\n      fixed: true,\r\n      value: \"getImagePathCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    { name: \"singleItemExpanded\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"expandedChange\",\r\n      fixed: true,\r\n      value: \"controlUIModel\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const accordionShowcaseStory: ShowcaseStory<HTMLChAccordionRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"AccordionModel\",\r\n      render: {\r\n        react: () => `<ChAccordionRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      >\r\n        ${lightDOMMarkupReact}\r\n      </ChAccordionRender>`,\r\n\r\n        stencil: () => `<ch-accordion-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n          ${lightDOMMarkupStencil}\r\n        </ch-accordion-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseRenderProperties, ShowcaseStory } from \"../types\";\r\nimport { GXWebModel, eagerLargeModel, modelMinimal } from \"./models\";\r\n\r\nconst state: Partial<HTMLChActionGroupRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <div class=\"action-group-test-main-wrapper\">\r\n    <h2 class=\"label field-legend-test\">Primary</h2>\r\n\r\n    <div class=\"fieldset-test\">\r\n      <ch-action-group-render\r\n        class=\"dropdown dropdown-secondary\"\r\n        model={state.model}\r\n        moreActionsBlockAlign={state.moreActionsBlockAlign}\r\n        moreActionsCaption={state.moreActionsCaption}\r\n        moreActionsInlineAlign={state.moreActionsInlineAlign}\r\n        itemsOverflowBehavior={state.itemsOverflowBehavior}\r\n        // moreActionsDropdownPosition={state.moreActionsDropdownPosition}\r\n      >\r\n        <ch-edit\r\n          slot=\"pepe\"\r\n          accessibleName=\"Name\"\r\n          class=\"input\"\r\n          type=\"search\"\r\n        ></ch-edit>\r\n      </ch-action-group-render>\r\n    </div>\r\n    {/* \r\n    <div class=\"fieldset-test\">\r\n      <h2 class=\"label field-legend-test\">Secondary</h2>\r\n\r\n      <ch-action-group-render\r\n        class=\"dropdown dropdown-secondary\"\r\n        model={state.model}\r\n        itemsOverflowBehavior={state.itemsOverflowBehavior}\r\n        // moreActionsDropdownPosition={state.moreActionsDropdownPosition}\r\n      ></ch-action-group-render>\r\n    </div> */}\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChActionGroupRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Simple model\", value: modelMinimal },\r\n            { caption: \"GX Web Model\", value: GXWebModel },\r\n            { caption: \"Eager Large Tree (10x20x20)\", value: eagerLargeModel }\r\n          ],\r\n          value: GXWebModel\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"moreActionsCaption\",\r\n          caption: \"More actions caption\",\r\n          type: \"string\",\r\n          value: \"More\"\r\n        },\r\n        {\r\n          id: \"moreActionsBlockAlign\",\r\n          caption: \"More Actions Block Align\",\r\n          value: \"outside-end\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"moreActionsInlineAlign\",\r\n          caption: \"More Actions Inline Align\",\r\n          value: \"inside-start\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n\r\n        {\r\n          id: \"itemsOverflowBehavior\",\r\n          caption: \"Items overflow behavior\",\r\n          value: \"responsive-collapse\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Add Scroll\", value: \"add-scroll\" },\r\n            { caption: \"Multiline\", value: \"multiline\" },\r\n            { caption: \"Responsive Collapse\", value: \"responsive-collapse\" }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nexport const actionGroupShowcaseStory: ShowcaseStory<HTMLChActionGroupRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseRenderProperties, ShowcaseStory } from \"../types\";\r\nimport {\r\n  GitHubChangesModel,\r\n  GitHubHistoryModel,\r\n  GxEAINotifications,\r\n  GxEAIRecentChats,\r\n  agentTickets,\r\n  keyboardNavigation,\r\n  modifyItemCaptionCallback,\r\n  panelToolbox,\r\n  recentKBs,\r\n  ticketList\r\n} from \"./models\";\r\n\r\nconst state: Partial<HTMLChActionListRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-action-list-render\r\n    class={\r\n      state.model === ticketList ? \"ticket-list\" : \"list-box-secondary list-box\"\r\n    }\r\n    checkbox={state.checkbox}\r\n    checked={state.checked}\r\n    disabled={state.disabled}\r\n    selection={state.selection}\r\n    editableItems={state.editableItems}\r\n    modifyItemCaptionCallback={modifyItemCaptionCallback}\r\n    model={state.model}\r\n  ></ch-action-list-render>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChActionListRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"GitHub History\", value: GitHubHistoryModel },\r\n            { caption: \"GitHub History 2\", value: GitHubChangesModel },\r\n            { caption: \"Agent Tickets\", value: agentTickets },\r\n            { caption: \"Recent KBs\", value: recentKBs },\r\n            { caption: \"Panel Toolbox\", value: panelToolbox },\r\n            { caption: \"GX EAI recent chats\", value: GxEAIRecentChats },\r\n            { caption: \"GX EAI notifications\", value: GxEAINotifications },\r\n            { caption: \"Keyboard Navigation\", value: keyboardNavigation },\r\n            { caption: \"Ticket List\", value: ticketList }\r\n          ],\r\n          value: GitHubChangesModel\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      columns: 2,\r\n      properties: [\r\n        { id: \"checkbox\", caption: \"Checkbox\", value: false, type: \"boolean\" },\r\n        { id: \"checked\", caption: \"Checked\", value: false, type: \"boolean\" },\r\n        { id: \"disabled\", caption: \"Disabled\", value: false, type: \"boolean\" },\r\n        {\r\n          id: \"editableItems\",\r\n          caption: \"Editable Items\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"selection\",\r\n          caption: \"Selection\",\r\n          value: \"none\",\r\n          columnSpan: 2,\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            {\r\n              value: \"none\",\r\n              caption: \"None\"\r\n            },\r\n            {\r\n              value: \"multiple\",\r\n              caption: \"Multiple\"\r\n            },\r\n            { value: \"single\", caption: \"Single\" }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    // {\r\n    //   caption: \"Filters\",\r\n    //   columns: 2,\r\n    //   properties: [\r\n    //     {\r\n    //       id: \"filterType\",\r\n    //       caption: \"Filter Type\",\r\n    //       value: \"none\",\r\n    //       type: \"enum\",\r\n    //       values: [\r\n    //         { caption: \"None\", value: \"none\" },\r\n    //         { caption: \"Caption\", value: \"caption\" },\r\n    //         { caption: \"Metadata\", value: \"metadata\" },\r\n    //         { caption: \"Checked\", value: \"checked\" },\r\n    //         { caption: \"Unchecked\", value: \"unchecked\" },\r\n    //         { caption: \"List\", value: \"list\" }\r\n    //       ]\r\n    //     },\r\n    //     {\r\n    //       id: \"filterDebounce\",\r\n    //       caption: \"Filter Debounce\",\r\n    //       value: 250,\r\n    //       type: \"number\"\r\n    //     },\r\n    //     {\r\n    //       id: \"filter\",\r\n    //       columnSpan: 2,\r\n    //       caption: \"Filter\",\r\n    //       value: \"\",\r\n    //       type: \"string\"\r\n    //     }\r\n    //   ]\r\n    // }\r\n  ];\r\n\r\n// Hide matches and show non-matches\r\n\r\nexport const actionListShowcaseStory: ShowcaseStory<HTMLChActionListRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  GXWebModel,\r\n  eagerLargeModel,\r\n  simpleModel1,\r\n  simpleModel2\r\n} from \"./models\";\r\nimport { kbExplorerModel } from \"../tree-view/models\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChActionMenuRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <div class=\"dropdown-test-main-wrapper\">\r\n    <ch-action-menu-render\r\n      class=\"dropdown dropdown-secondary\"\r\n      blockAlign={state.blockAlign}\r\n      buttonAccessibleName={state.buttonAccessibleName}\r\n      disabled={state.disabled}\r\n      expanded={state.expanded}\r\n      inlineAlign={state.inlineAlign}\r\n      model={state.model}\r\n    >\r\n      Expand menu\r\n      <ch-tree-view-render\r\n        slot=\"tree\"\r\n        class=\"tree-view tree-view-secondary\"\r\n        model={kbExplorerModel}\r\n        style={{ minBlockSize: \"300px\", minInlineSize: \"300px\" }}\r\n      ></ch-tree-view-render>\r\n    </ch-action-menu-render>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChActionMenuRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Simple model 1\", value: simpleModel1 },\r\n            { caption: \"Simple model 2\", value: simpleModel2 },\r\n            { caption: \"GX Web Model\", value: GXWebModel },\r\n            { caption: \"Eager Large Tree (10x20x20)\", value: eagerLargeModel }\r\n          ],\r\n          value: simpleModel1\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"buttonAccessibleName\",\r\n          caption: \"Button Accessible Name\",\r\n          value: \"Action\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"blockAlign\",\r\n          caption: \"Block Align\",\r\n          value: \"outside-end\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"inlineAlign\",\r\n          caption: \"Inline Align\",\r\n          value: \"inside-start\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expanded\",\r\n          caption: \"Expanded\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChActionMenuRenderElement>[] =\r\n  [\r\n    { name: \"buttonAccessibleName\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"blockAlign\", defaultValue: \"outside-end\", type: \"string\" },\r\n    { name: \"class\", fixed: true, value: \"dropdown\", type: \"string\" },\r\n    { name: \"inlineAlign\", defaultValue: \"center\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"expanded\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"string\" },\r\n    {\r\n      name: \"buttonClick\",\r\n      fixed: true,\r\n      value: \"handleButtonClick\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"expandedChange\",\r\n      fixed: true,\r\n      value: \"syncExpandedState\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"hyperlinkClick\",\r\n      fixed: true,\r\n      value: \"navigateInApp\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const actionMenuShowcaseStory: ShowcaseStory<HTMLChActionMenuRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"ComboBoxModel\",\r\n      render: {\r\n        react: () => `<ChActionMenuRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      ></ChActionMenuRender>`,\r\n\r\n        stencil: () => `<ch-action-menu-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-action-menu-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ChBarcodeScannerCustomEvent } from \"../../../../components\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties, updateShowcase } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChBarcodeScannerElement> = {};\r\n\r\nlet lastRead: string;\r\n\r\nconst handleRead = (event: ChBarcodeScannerCustomEvent<string>) => {\r\n  lastRead = event.detail;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst render = () => (\r\n  <div class=\"barcode-scanner-test-main-wrapper\">\r\n    <ch-barcode-scanner\r\n      barcodeBoxWidth={state.barcodeBoxWidth}\r\n      barcodeBoxHeight={state.barcodeBoxHeight}\r\n      scanning={state.scanning}\r\n      onRead={handleRead}\r\n    ></ch-barcode-scanner>\r\n\r\n    <span>Content: {lastRead}</span>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChBarcodeScannerElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"barcodeBoxWidth\",\r\n          caption: \"Barcode Box Width\",\r\n          value: 200,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"barcodeBoxHeight\",\r\n          caption: \"Barcode Box Height\",\r\n          value: 200,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"readDebounce\",\r\n          caption: \"Read Debounce\",\r\n          value: 200,\r\n          type: \"number\"\r\n        },\r\n        { id: \"scanning\", caption: \"Scanning\", value: true, type: \"boolean\" }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChBarcodeScannerElement>[] =\r\n  [\r\n    { name: \"barcodeBoxWidth\", defaultValue: 200, type: \"number\" },\r\n    { name: \"barcodeBoxHeight\", defaultValue: 200, type: \"number\" },\r\n    { name: \"readDebounce\", defaultValue: 200, type: \"number\" },\r\n    { name: \"scanning\", defaultValue: true, type: \"boolean\" },\r\n    {\r\n      name: \"read\",\r\n      fixed: true,\r\n      value: \"handleRead\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const barcodeScannerShowcaseStory: ShowcaseStory<HTMLChBarcodeScannerElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithoutUIModel: {\r\n      react: () => `<ChBarcodeScanner${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcasePropertiesInfo\r\n      )}\r\n      ></ChBarcodeScanner>`,\r\n\r\n      stencil: () => `<ch-barcode-scanner${renderShowcaseProperties(\r\n        state,\r\n        \"stencil\",\r\n        showcasePropertiesInfo\r\n      )}\r\n        ></ch-barcode-scanner>`\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import {\r\n  ChatInternalCallbacks,\r\n  ChatMessage\r\n} from \"../../../../components/chat/types\";\r\nimport { ChatTranslations } from \"../../../../components/chat/translations\";\r\n\r\nconst PROCESSING_PLACEHOLDER = \"{{ASSISTANT_NAME}}\";\r\n\r\nlet timeOut: NodeJS.Timeout;\r\n\r\nconst ASSISTANT_RESPONSE_MARKDOWN = `\r\n### Code block {#code-block}\r\nTo create code blocks, you’ll use three backticks (\\` \\`\\`\\` \\`) or three tildes (\\`~~~\\`) on the lines before and after the code block.\r\n\r\n\\`\\`\\`\r\n{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Smith\",\r\n  \"age\": 25\r\n}\r\n\\`\\`\\`\r\n\r\nAnother way to create code blocks is to indent every line of the block by at least four spaces or one tab.\r\n\r\n    <html>\r\n      <head>\r\n      </head>\r\n    </html>\r\n\r\n\r\n#### Syntax Highlighting {#syntax-highlighting}\r\nThis feature allows you to add color highlighting for whatever language your code was written in.\r\nTo add syntax highlighting, specify a language next to the backticks before the fenced code block.\r\n\r\n\\`\\`\\`json\r\n{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Smith\",\r\n  \"age\": 25\r\n}\r\n\\`\\`\\`\r\n\r\n\\`\\`\\`javascript\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Markdown from 'react-markdown'\r\nimport rehypeHighlight from 'rehype-highlight'\r\n\r\nconst markdown = \\`\r\n# Your markdown here\r\n\\`\r\n\r\nReactDOM.render(\r\n  <Markdown rehypePlugins={[rehypeHighlight]}>{markdown}</Markdown>,\r\n  document.querySelector('#content')\r\n)\r\n\\`\\`\\`\r\n\r\n### Horizontal Rules {#horizontal-rules}\r\nTo create a horizontal rule, use three or more asterisks (\\`***\\`), dashes (\\`---\\`), or underscores (\\`___\\`) on a line by themselves.\r\n`;\r\n\r\nconst ASSISTANT_RESPONSE_SHORT_MARKDOWN = `\r\n### Code block {#code-block}\r\nTo create code blocks, you’ll use three backticks (\\` \\`\\`\\` \\`) or three tildes (\\`~~~\\`) on the lines before and after the code block.\r\n\r\n\\`\\`\\`json\r\n{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Smith\",\r\n  \"age\": 25\r\n}\r\n\\`\\`\\`\r\n`;\r\n\r\nconst sendChatToLLM = () => {\r\n  // This is a WA to get the chat reference\r\n  const chatRef = document\r\n    .querySelector(\"ch-flexible-layout-render\")!\r\n    .shadowRoot.querySelector(\"ch-flexible-layout-render\")!\r\n    .shadowRoot.querySelector(\"ch-chat\");\r\n\r\n  chatRef.addNewMessage({\r\n    id: `${new Date().getTime()}`,\r\n    role: \"assistant\",\r\n    content: \"Analyzing\",\r\n    status: \"waiting\"\r\n  });\r\n\r\n  timeOut = setTimeout(() => {\r\n    chatRef.updateLastMessage(\r\n      {\r\n        role: \"assistant\",\r\n        content: \"Processing with Chat with LLMs\",\r\n        status: \"waiting\"\r\n      },\r\n      \"replace\"\r\n    );\r\n\r\n    timeOut = setTimeout(() => {\r\n      dummyStreaming(chatRef, 20, ASSISTANT_RESPONSE_MARKDOWN, \"replace\");\r\n    }, 200);\r\n  }, 200);\r\n};\r\n\r\nfunction dummyStreaming(\r\n  chatRef: HTMLChChatElement,\r\n  counter: number,\r\n  stringToDisplay: string,\r\n  mode: \"concat\" | \"replace\"\r\n) {\r\n  timeOut = setTimeout(\r\n    () => {\r\n      const streamingCompleted = counter >= stringToDisplay.length;\r\n\r\n      chatRef.updateLastMessage(\r\n        {\r\n          role: \"assistant\",\r\n          content: stringToDisplay.substring(counter - 20, counter),\r\n\r\n          // {\r\n          //   message: stringToDisplay.substring(counter - 20, counter),\r\n          //   files: streamingCompleted\r\n          //     ? [\r\n          //         {\r\n          //           url: \"https://next.genexus.ai\",\r\n          //           caption: \"Mars Exploration Contract\"\r\n          //         },\r\n          //         {\r\n          //           url: \"https://gx-chameleon.netlify.app\",\r\n          //           caption: \"Venus Exploration Contract\"\r\n          //         }\r\n          //       ]\r\n          //     : undefined\r\n          // },\r\n          status: streamingCompleted ? \"complete\" : \"streaming\"\r\n        },\r\n        mode\r\n      );\r\n\r\n      if (!streamingCompleted) {\r\n        dummyStreaming(chatRef, counter + 20, stringToDisplay, \"concat\");\r\n      }\r\n    },\r\n    counter % 200 === 0 ? 50 : 40\r\n  );\r\n}\r\n\r\nexport const chatCallbacks: ChatInternalCallbacks = {\r\n  clear: () => new Promise(resolve => resolve()),\r\n  sendChatToLLM: sendChatToLLM,\r\n  uploadImage: () => new Promise(resolve => resolve(\"\")),\r\n  stopGeneratingAnswer: () => {\r\n    clearTimeout(timeOut);\r\n\r\n    // This is a WA to get the chat reference\r\n    const chatRef = document.querySelector(\"ch-chat\") as HTMLChChatElement;\r\n\r\n    chatRef.updateLastMessage(\r\n      {\r\n        role: \"assistant\",\r\n        content: \"\",\r\n        status: \"complete\"\r\n      },\r\n      \"concat\"\r\n    );\r\n\r\n    return new Promise(resolve => setTimeout(() => resolve, 10));\r\n  }\r\n};\r\n\r\nexport const chatTranslations: ChatTranslations = {\r\n  accessibleName: {\r\n    clearChat: \"Clear chat\",\r\n    copyResponseButton: \"Copy assistant response\",\r\n    downloadCodeButton: \"Download code\",\r\n    imagePicker: \"Select images\",\r\n    removeUploadedImage: \"Remove uploaded image\",\r\n    sendButton: \"Send\",\r\n    sendInput: \"Message\",\r\n    stopGeneratingAnswerButton: \"Stop generating answer\"\r\n  },\r\n  placeholder: {\r\n    sendInput: \"Ask me a question...\"\r\n  },\r\n  text: {\r\n    stopGeneratingAnswerButton: \"Stop generating answer\",\r\n    copyCodeButton: \"Copy code\",\r\n    processing: `Processing with ${PROCESSING_PLACEHOLDER}`,\r\n    sourceFiles: \"Source files:\"\r\n  }\r\n};\r\n\r\nexport const chatRecord: ChatMessage[] = [\r\n  { id: \"1\", role: \"user\", content: \"Hello world\" },\r\n  { id: \"2\", role: \"assistant\", content: ASSISTANT_RESPONSE_MARKDOWN },\r\n  { id: \"3\", role: \"user\", content: \"Hello world 1\" },\r\n  { id: \"4\", role: \"assistant\", content: ASSISTANT_RESPONSE_SHORT_MARKDOWN },\r\n  { id: \"5\", role: \"user\", content: \"Hello world 2\" },\r\n  { id: \"6\", role: \"assistant\", content: ASSISTANT_RESPONSE_SHORT_MARKDOWN },\r\n  { id: \"7\", role: \"user\", content: \"Hello world 3\" },\r\n  { id: \"8\", role: \"assistant\", content: ASSISTANT_RESPONSE_SHORT_MARKDOWN },\r\n  { id: \"9\", role: \"user\", content: \"Hello world 4\" },\r\n  { id: \"10\", role: \"assistant\", content: ASSISTANT_RESPONSE_SHORT_MARKDOWN }\r\n];\r\n\r\nexport const longChatRecord: ChatMessage[] = Array.from(\r\n  { length: 40 },\r\n  (_, index) =>\r\n    index % 2 === 0\r\n      ? {\r\n          id: `index: ${index}`,\r\n          role: \"user\",\r\n          content:\r\n            `index: ${index}` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n`\r\n        }\r\n      : {\r\n          id: `index: ${index}`,\r\n          role: \"assistant\",\r\n          content:\r\n            ASSISTANT_RESPONSE_SHORT_MARKDOWN +\r\n            `\\nindex: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n` +\r\n            `index: ${index}\\n`\r\n        }\r\n);\r\n\r\nexport const codeFixerRecord: ChatMessage[] = [\r\n  {\r\n    id: \"1\",\r\n    role: \"user\",\r\n    content: \"Please give me an example about...\",\r\n    metadata: \"14:55\"\r\n  },\r\n  {\r\n    id: \"2\",\r\n    role: \"assistant\",\r\n    status: \"complete\",\r\n    content:\r\n      \"Action required example. Action required example. Action required example.\",\r\n    metadata: \"14:56\"\r\n  },\r\n  {\r\n    id: \"3\",\r\n    role: \"assistant\",\r\n    status: \"complete\",\r\n    content: \"Warning in request\",\r\n    metadata: \"14:57\",\r\n    parts: \"warning\"\r\n  },\r\n  {\r\n    id: \"4\",\r\n    role: \"error\",\r\n    content: \"Error in Request\",\r\n    metadata: \"14:58\"\r\n  },\r\n  {\r\n    id: \"5\",\r\n    role: \"assistant\",\r\n    status: \"complete\",\r\n    content: \"Warning in request\",\r\n    metadata: \"14:59\",\r\n    parts: \"success\"\r\n  },\r\n  {\r\n    id: \"6\",\r\n    role: \"user\",\r\n    content:\r\n      \"Implement the function calculate_average_grade in grades.py that takes a list of grades as input and returns the average grade as a floating-point number\",\r\n    metadata: \"15:00\"\r\n  },\r\n  {\r\n    id: \"7\",\r\n    role: \"assistant\",\r\n    status: \"complete\",\r\n    content:\r\n      \"You can provide further details or updates regarding your support ticket and its associated code. Your input here helps us better understand and address your issue effectively.\",\r\n    metadata: \"15:01\"\r\n  },\r\n  {\r\n    id: \"8\",\r\n    role: \"assistant\",\r\n    status: \"waiting\",\r\n    content: \"Processing Request\"\r\n  },\r\n  {\r\n    id: \"9\",\r\n    role: \"assistant\",\r\n    status: \"complete\",\r\n    content: ASSISTANT_RESPONSE_SHORT_MARKDOWN\r\n  }\r\n];\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  MarkdownViewerCodeRender,\r\n  MarkdownViewerCodeRenderOptions\r\n} from \"../../../../components/markdown-viewer/parsers/types\";\r\nimport { ChatMessageByRole } from \"../../../../components\";\r\n\r\nconst copy = (text: string) => () => navigator.clipboard.writeText(text);\r\n\r\nexport const mercuryCodeRender =\r\n  (copyButtonAccessibleName: string) =>\r\n  (options: MarkdownViewerCodeRenderOptions): MarkdownViewerCodeRender =>\r\n    (\r\n      <div class=\"code-block-container\">\r\n        <div class=\"code-block-header\">\r\n          <button\r\n            aria-label={copyButtonAccessibleName}\r\n            title={copyButtonAccessibleName}\r\n            class=\"button-copy-code\"\r\n            type=\"button\"\r\n            onClick={copy(options.plainText)}\r\n          ></button>\r\n        </div>\r\n        <ch-code\r\n          language={options.language}\r\n          lastNestedChildClass={options.lastNestedChildClass}\r\n          value={options.plainText}\r\n          showIndicator={options.showIndicator}\r\n        ></ch-code>\r\n      </div>\r\n    );\r\n\r\nexport const mercuryChatMessageRender =\r\n  (theme: string) =>\r\n  (messageModel: ChatMessageByRole<\"assistant\" | \"error\" | \"user\">) =>\r\n    messageModel.role === \"assistant\" && messageModel.status === \"waiting\"\r\n      ? [\r\n          <span part=\"message__processing\">Processing request</span>,\r\n\r\n          <div class=\"processing-animation\" part=\"processing-animation\"></div>\r\n        ]\r\n      : [\r\n          <span part={`message__role ${messageModel.role}`}>\r\n            {messageModel.role === \"user\" ? \"You\" : \"GeneXus Code Fixer\"}\r\n          </span>,\r\n          <time dateTime={messageModel.metadata} part=\"message__time\">\r\n            {messageModel.metadata}\r\n          </time>,\r\n\r\n          messageModel.role === \"user\" ? (\r\n            <span part=\"message__content user\">{messageModel.content}</span>\r\n          ) : (\r\n            <ch-markdown-viewer\r\n              part={\r\n                messageModel.role === \"assistant\" &&\r\n                (messageModel.status === \"complete\" || !messageModel.status) &&\r\n                !messageModel.parts\r\n                  ? `message__content no-error`\r\n                  : \"message__content\"\r\n              }\r\n              theme={theme}\r\n              showIndicator={\r\n                messageModel.role === \"assistant\" &&\r\n                messageModel.status === \"streaming\"\r\n              }\r\n              renderCode={mercuryCodeRender(\"Copy code\")}\r\n              value={messageModel.content as string}\r\n            ></ch-markdown-viewer>\r\n          )\r\n        ];\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRender,\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  chatCallbacks,\r\n  longChatRecord,\r\n  chatTranslations,\r\n  codeFixerRecord\r\n} from \"./callbacks\";\r\nimport { mercuryChatMessageRender } from \"./mercury-code-render\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChChatElement> = {};\r\n\r\nconst render: ShowcaseRender = designSystem => (\r\n  <ch-chat\r\n    callbacks={chatCallbacks}\r\n    class=\"chat\"\r\n    generatingResponse={false}\r\n    loadingState={state.loadingState}\r\n    markdownTheme={\r\n      designSystem === \"unanimo\"\r\n        ? \"unanimo/markdown-viewer\"\r\n        : \"mercury/markdown-viewer\"\r\n    }\r\n    renderItem={\r\n      designSystem === \"unanimo\"\r\n        ? undefined\r\n        : mercuryChatMessageRender(\"mercury/markdown-viewer\")\r\n    }\r\n    isMobile={false}\r\n    items={state.items}\r\n    showAdditionalContent={state.showAdditionalContent}\r\n    translations={chatTranslations}\r\n  >\r\n    <div slot=\"additional-content\">\r\n      Custom content that is rendered when the chat renders content\r\n    </div>\r\n  </ch-chat>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChChatElement> = [\r\n  {\r\n    caption: \"Items\",\r\n    properties: [\r\n      {\r\n        id: \"items\",\r\n        accessibleName: \"Items\",\r\n        values: [\r\n          {\r\n            caption: \"GeneXus Enterprise AI Playground\",\r\n            value: longChatRecord\r\n          },\r\n          { caption: \"Code Fixer\", value: codeFixerRecord }\r\n        ],\r\n        value: longChatRecord,\r\n        type: \"enum\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Properties\",\r\n    properties: [\r\n      {\r\n        id: \"loadingState\",\r\n        caption: \"Loading State\",\r\n        values: [\r\n          { caption: \"initial\", value: \"initial\" },\r\n          { caption: \"loading\", value: \"loading\" },\r\n          {\r\n            caption: \"more-data-to-fetch\",\r\n            value: \"more-data-to-fetch\"\r\n          },\r\n          { caption: \"all-records-loaded\", value: \"all-records-loaded\" }\r\n        ],\r\n        value: \"all-records-loaded\",\r\n        type: \"enum\"\r\n      },\r\n      {\r\n        id: \"showAdditionalContent\",\r\n        caption: \"Show Additional Content\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChChatElement>[] =\r\n  [\r\n    { name: \"class\", fixed: true, value: \"chat\", type: \"string\" },\r\n    {\r\n      name: \"items\",\r\n      fixed: true,\r\n      value: \"controlUIModel\",\r\n      type: \"function\"\r\n    },\r\n    {\r\n      name: \"loadingState\",\r\n      defaultValue: \"initial\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"showAdditionalContent\",\r\n      defaultValue: false,\r\n      type: \"boolean\"\r\n    }\r\n  ];\r\n\r\nexport const chatShowcaseStory: ShowcaseStory<HTMLChChatElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithUIModel: {\r\n    uiModelType: \"ChatMessage[]\",\r\n    uiModel: () => state.items,\r\n    render: {\r\n      react: () => `<ChChat${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcasePropertiesInfo\r\n      )}\r\n      ></ChChat>`,\r\n\r\n      stencil: () => `<ch-chat${renderShowcaseProperties(\r\n        state,\r\n        \"stencil\",\r\n        showcasePropertiesInfo\r\n      )}\r\n        ></ch-chat>`\r\n    }\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties, updateShowcase } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChCheckboxElement> = {};\r\nconst formRefs: {\r\n  [key in \"form-checkbox-1\" | \"form-checkbox-2\" | \"form-checkbox-3\"]:\r\n    | HTMLFormElement\r\n    | undefined;\r\n} = {\r\n  \"form-checkbox-1\": undefined,\r\n  \"form-checkbox-2\": undefined,\r\n  \"form-checkbox-3\": undefined\r\n};\r\n\r\nconst formValues = {\r\n  \"checkbox-1\": \"\",\r\n  \"checkbox-2\": \"\",\r\n  \"checkbox-3\": \"\"\r\n};\r\n\r\nconst handleValueInput =\r\n  (formId: keyof typeof formRefs, checkboxId: keyof typeof formValues) =>\r\n  () => {\r\n    formValues[checkboxId] = Object.fromEntries(new FormData(formRefs[formId]))[\r\n      checkboxId\r\n    ] as string;\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst render = () => (\r\n  <div class=\"checkbox-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n      <form id=\"form-checkbox-1\" ref={el => (formRefs[\"form-checkbox-1\"] = el)}>\r\n        <ch-checkbox\r\n          name=\"checkbox-1\"\r\n          accessibleName={state.accessibleName}\r\n          caption={state.caption}\r\n          class=\"checkbox\"\r\n          checkedValue={state.checkedValue}\r\n          unCheckedValue={state.unCheckedValue}\r\n          disabled={state.disabled}\r\n          indeterminate={state.indeterminate}\r\n          readonly={state.readonly}\r\n          startImgSrc={state.startImgSrc}\r\n          startImgType={state.startImgType}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-checkbox-1\", \"checkbox-1\")}\r\n        ></ch-checkbox>\r\n      </form>\r\n      Form value: {formValues[\"checkbox-1\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n      <form id=\"form-checkbox-2\" ref={el => (formRefs[\"form-checkbox-2\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"checkbox-2\">\r\n          Label for checkbox 2\r\n        </label>\r\n\r\n        <ch-checkbox\r\n          id=\"checkbox-2\"\r\n          name=\"checkbox-2\"\r\n          accessibleName={state.accessibleName}\r\n          caption={state.caption}\r\n          class=\"checkbox\"\r\n          checkedValue={state.checkedValue}\r\n          unCheckedValue={state.unCheckedValue}\r\n          disabled={state.disabled}\r\n          indeterminate={state.indeterminate}\r\n          readonly={state.readonly}\r\n          startImgSrc={state.startImgSrc}\r\n          startImgType={state.startImgType}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-checkbox-2\", \"checkbox-2\")}\r\n        ></ch-checkbox>\r\n      </form>\r\n      Form value: {formValues[\"checkbox-2\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n      <form id=\"form-checkbox-3\" ref={el => (formRefs[\"form-checkbox-3\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"checkbox-3\">\r\n          Label for checkbox 3\r\n          <ch-checkbox\r\n            id=\"checkbox-3\"\r\n            name=\"checkbox-3\"\r\n            accessibleName={state.accessibleName}\r\n            caption={state.caption}\r\n            class=\"checkbox\"\r\n            checkedValue={state.checkedValue}\r\n            unCheckedValue={state.unCheckedValue}\r\n            disabled={state.disabled}\r\n            indeterminate={state.indeterminate}\r\n            readonly={state.readonly}\r\n            startImgSrc={state.startImgSrc}\r\n            startImgType={state.startImgType}\r\n            value={state.value}\r\n            onInput={handleValueInput(\"form-checkbox-3\", \"checkbox-3\")}\r\n          ></ch-checkbox>\r\n        </label>\r\n      </form>\r\n      Form value: {formValues[\"checkbox-3\"]}\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChCheckboxElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"accessibleName\",\r\n          caption: \"Accessible Name\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"caption\",\r\n          caption: \"Caption\",\r\n          value: \"Option\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"startImgSrc\",\r\n          caption: \"Start Image Src\",\r\n          value: \"folder\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"startImgType\",\r\n          caption: \"Start Image Type\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Background\", value: \"background\" },\r\n            { caption: \"Mask\", value: \"mask\" }\r\n          ],\r\n          value: \"background\"\r\n        },\r\n        {\r\n          id: \"checkedValue\",\r\n          caption: \"Checked Value\",\r\n          value: \"true\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"unCheckedValue\",\r\n          caption: \"Unchecked Value\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"indeterminate\",\r\n          caption: \"Indeterminate\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"readonly\",\r\n          caption: \"Readonly\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChCheckboxElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"class\", fixed: true, value: \"checkbox\", type: \"string\" },\r\n    { name: \"caption\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"checkedValue\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"indeterminate\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"readonly\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"startImgSrc\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"startImgType\", defaultValue: \"background\", type: \"string\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"unCheckedValue\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"input\", fixed: true, value: \"handleValueChange\", type: \"event\" }\r\n  ];\r\n\r\nexport const checkboxShowcaseStory: ShowcaseStory<HTMLChCheckboxElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<ChCheckbox${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcasePropertiesInfo\r\n    )}\r\n      ></ChCheckbox>`,\r\n\r\n    stencil: () => `<ch-checkbox${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcasePropertiesInfo\r\n    )}\r\n        ></ch-checkbox>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = () => (\r\n  <iframe src=\"/showcase/pages/code-diff-editor.html\" frameborder=\"0\"></iframe>\r\n);\r\n\r\nexport const codeDiffEditorShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = () => (\r\n  <iframe src=\"/showcase/pages/code-editor.html\" frameborder=\"0\"></iframe>\r\n);\r\n\r\nexport const codeEditorShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChCodeElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-code\r\n    class=\"code\"\r\n    language={state.language}\r\n    showIndicator={state.showIndicator}\r\n    value={state.value}\r\n  ></ch-code>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChCodeElement> = [\r\n  {\r\n    caption: \"Value\",\r\n    properties: [\r\n      {\r\n        id: \"value\",\r\n        accessibleName: \"value\",\r\n        value: 'console.log(\"Hello world\")',\r\n        render: \"textarea\",\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Properties\",\r\n    properties: [\r\n      {\r\n        id: \"language\",\r\n        caption: \"Language\",\r\n        value: \"typescript\",\r\n        render: \"input\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"showIndicator\",\r\n        caption: \"Show Indicator\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChCodeElement>[] =\r\n  [\r\n    { name: \"class\", fixed: true, value: \"code\", type: \"string\" },\r\n    { name: \"showIndicator\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string-template\" }\r\n  ];\r\n\r\nexport const codeShowcaseStory: ShowcaseStory<HTMLChCodeElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<ChCode${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcasePropertiesInfo\r\n    )}\r\n      ></ChCode>`,\r\n\r\n    stencil: () => `<ch-code${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcasePropertiesInfo\r\n    )}\r\n        ></ch-code>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseRenderProperty,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  comboBoxFilterChange,\r\n  dataTypeInGeneXus,\r\n  simpleModelComboBox1,\r\n  simpleModelComboBoxWithIcons,\r\n  smallModel\r\n} from \"./models\";\r\nimport {\r\n  ComboBoxSuggestOptions,\r\n  ComboBoxItemModel\r\n} from \"../../../../components/combo-box/types\";\r\nimport { ChComboBoxRenderCustomEvent } from \"../../../../components\";\r\nimport { renderShowcaseProperties, updateShowcase } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChComboBoxRenderElement> = {};\r\nlet itemsFilteredByTheServer: ComboBoxItemModel[] = comboBoxFilterChange({\r\n  filter: \"\",\r\n  options: { alreadyProcessed: true }\r\n});\r\n\r\nconst formRefs: {\r\n  [key in \"form-combo-box-1\" | \"form-combo-box-2\" | \"form-combo-box-3\"]:\r\n    | HTMLFormElement\r\n    | undefined;\r\n} = {\r\n  \"form-combo-box-1\": undefined,\r\n  \"form-combo-box-2\": undefined,\r\n  \"form-combo-box-3\": undefined\r\n};\r\n\r\nconst formValues = {\r\n  \"combo-box-1\": \"\",\r\n  \"combo-box-2\": \"\",\r\n  \"combo-box-3\": \"\"\r\n};\r\n\r\nconst changeValues = {\r\n  \"combo-box-1\": \"\",\r\n  \"combo-box-2\": \"\",\r\n  \"combo-box-3\": \"\"\r\n};\r\n\r\n// TODO: There is an issue when setting suggest, items are already filtered, string filter and the input equals to \"data\"\r\n\r\nconst handleInputChange =\r\n  (formId: keyof typeof formRefs, comboBoxId: keyof typeof formValues) =>\r\n  (event: ChComboBoxRenderCustomEvent<string> | InputEvent) => {\r\n    formValues[comboBoxId] = Object.fromEntries(new FormData(formRefs[formId]))[\r\n      comboBoxId\r\n    ] as string;\r\n\r\n    // Filters on the client\r\n    if (state.suggestOptions.alreadyProcessed) {\r\n      itemsFilteredByTheServer = comboBoxFilterChange({\r\n        filter: (event as ChComboBoxRenderCustomEvent<string>).detail,\r\n        options: { alreadyProcessed: true }\r\n      });\r\n    }\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst handleChangeEvent =\r\n  (comboBoxId: string) => (event: ChComboBoxRenderCustomEvent<string>) => {\r\n    changeValues[comboBoxId] = event.detail;\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst render = () => (\r\n  <div class=\"combo-box-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n      <form\r\n        id=\"form-combo-box-1\"\r\n        ref={el => (formRefs[\"form-combo-box-1\"] = el)}\r\n      >\r\n        <ch-combo-box-render\r\n          accessibleName={state.accessibleName}\r\n          placeholder={state.placeholder}\r\n          class=\"combo-box\"\r\n          name=\"combo-box-1\"\r\n          disabled={state.disabled}\r\n          popoverInlineAlign={state.popoverInlineAlign}\r\n          model={\r\n            state.suggestOptions.alreadyProcessed === true && state.suggest\r\n              ? itemsFilteredByTheServer\r\n              : state.model\r\n          }\r\n          readonly={state.readonly}\r\n          resizable={state.readonly}\r\n          suggest={state.suggest}\r\n          suggestDebounce={state.suggestDebounce}\r\n          suggestOptions={state.suggestOptions}\r\n          value={state.value}\r\n          onInput={handleInputChange(\"form-combo-box-1\", \"combo-box-1\")}\r\n          onChange={handleChangeEvent(\"combo-box-1\")}\r\n        ></ch-combo-box-render>\r\n      </form>\r\n      Form value: {formValues[\"combo-box-1\"]}\r\n      <p>Change event value: {changeValues[\"combo-box-1\"]}</p>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n      <form\r\n        id=\"form-combo-box-2\"\r\n        ref={el => (formRefs[\"form-combo-box-2\"] = el)}\r\n      >\r\n        <label class=\"label\" htmlFor=\"combo-box-2\">\r\n          Label for combo-box 2\r\n        </label>\r\n        <ch-combo-box-render\r\n          id=\"combo-box-2\"\r\n          name=\"combo-box-2\"\r\n          accessibleName={state.accessibleName}\r\n          placeholder={state.placeholder}\r\n          class=\"combo-box\"\r\n          disabled={state.disabled}\r\n          model={\r\n            state.suggestOptions.alreadyProcessed === true && state.suggest\r\n              ? itemsFilteredByTheServer\r\n              : state.model\r\n          }\r\n          readonly={state.readonly}\r\n          resizable={state.readonly}\r\n          suggest={state.suggest}\r\n          suggestDebounce={state.suggestDebounce}\r\n          suggestOptions={state.suggestOptions}\r\n          value={state.value}\r\n          onInput={handleInputChange(\"form-combo-box-2\", \"combo-box-2\")}\r\n          onChange={handleChangeEvent(\"combo-box-2\")}\r\n        ></ch-combo-box-render>\r\n      </form>\r\n      Form value: {formValues[\"combo-box-2\"]}\r\n      <p>Change event value: {changeValues[\"combo-box-2\"]}</p>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n      <form\r\n        id=\"form-combo-box-3\"\r\n        ref={el => (formRefs[\"form-combo-box-3\"] = el)}\r\n      >\r\n        <label class=\"label\" htmlFor=\"combo-box-3\">\r\n          Label for combo-box 3\r\n          <ch-combo-box-render\r\n            id=\"combo-box-3\"\r\n            name=\"combo-box-3\"\r\n            accessibleName={state.accessibleName}\r\n            placeholder={state.placeholder}\r\n            class=\"combo-box\"\r\n            disabled={state.disabled}\r\n            popoverInlineAlign={state.popoverInlineAlign}\r\n            model={\r\n              state.suggestOptions.alreadyProcessed === true && state.suggest\r\n                ? itemsFilteredByTheServer\r\n                : state.model\r\n            }\r\n            readonly={state.readonly}\r\n            resizable={state.resizable}\r\n            suggest={state.suggest}\r\n            suggestDebounce={state.suggestDebounce}\r\n            suggestOptions={state.suggestOptions}\r\n            value={state.value}\r\n            onInput={handleInputChange(\"form-combo-box-3\", \"combo-box-3\")}\r\n            onChange={handleChangeEvent(\"combo-box-3\")}\r\n          ></ch-combo-box-render>\r\n        </label>\r\n      </form>\r\n      Form value: {formValues[\"combo-box-3\"]}\r\n      <p>Change event value: {changeValues[\"combo-box-3\"]}</p>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChComboBoxRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Simple Model\", value: simpleModelComboBox1 },\r\n            {\r\n              caption: \"Simple Model with icons\",\r\n              value: simpleModelComboBoxWithIcons\r\n            },\r\n            { caption: \"Small Model\", value: smallModel },\r\n            { caption: \"Data Type Model in GeneXus\", value: dataTypeInGeneXus }\r\n          ],\r\n          value: simpleModelComboBox1\r\n        },\r\n        {\r\n          id: \"value\",\r\n          caption: \"Value\",\r\n          value: \"Value 1\",\r\n          type: \"string\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"accessibleName\",\r\n          caption: \"Accessible Name\",\r\n          value: \"Option\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"placeholder\",\r\n          caption: \"Placeholder\",\r\n          value: \"Select an option...\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"popoverInlineAlign\",\r\n          caption: \"Popover Inline Align\",\r\n          value: \"inside-start\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"hostParts\",\r\n          caption: \"Host Parts\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"resizable\",\r\n          caption: \"Resizable\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"readonly\",\r\n          caption: \"Readonly\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Suggest\",\r\n      properties: [\r\n        {\r\n          id: \"suggest\",\r\n          caption: \"Suggest\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"suggestDebounce\",\r\n          caption: \"Debounce\",\r\n          value: 250,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"suggestOptions\",\r\n          caption: \"Options\",\r\n          type: \"object\",\r\n          render: \"independent-properties\",\r\n          properties: [\r\n            {\r\n              id: \"alreadyProcessed\",\r\n              caption: \"Items are already filtered / Server filters\",\r\n              value: false,\r\n              type: \"boolean\"\r\n            },\r\n            {\r\n              id: \"matchCase\",\r\n              caption: \"Apply camel casing\",\r\n              value: false,\r\n              type: \"boolean\"\r\n            },\r\n            {\r\n              id: \"hideMatchesAndShowNonMatches\",\r\n              caption: \"Hide matches and show non-matches\",\r\n              value: false,\r\n              type: \"boolean\"\r\n            },\r\n            {\r\n              id: \"renderActiveItemIconOnExpand\",\r\n              caption: \"Render Active Item Icon On Expand\",\r\n              value: false,\r\n              type: \"boolean\"\r\n            },\r\n            {\r\n              id: \"strict\",\r\n              caption: \"Strict filter\",\r\n              value: false,\r\n              type: \"boolean\"\r\n            }\r\n          ] satisfies ShowcaseRenderProperty<ComboBoxSuggestOptions>[]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChComboBoxRenderElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"class\", fixed: true, value: \"combo-box\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"filter\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"hostParts\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"string\" },\r\n    { name: \"placeholder\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"readonly\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"suggest\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"suggestDebounce\", defaultValue: 250, type: \"number\" },\r\n    { name: \"resizable\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"filterChange\",\r\n      fixed: true,\r\n      value: \"handleFilterChange\",\r\n      type: \"event\"\r\n    },\r\n    { name: \"input\", fixed: true, value: \"handleValueChange\", type: \"event\" }\r\n  ];\r\n\r\nexport const comboBoxShowcaseStory: ShowcaseStory<HTMLChComboBoxRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"ComboBoxModel\",\r\n      render: {\r\n        react: () => `<ChComboBoxRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      ></ChComboBoxRender>`,\r\n\r\n        stencil: () => `<ch-combo-box-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-combo-box-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplateFrameWork,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  insertSpacesAtTheBeginningExceptForTheFirstLine,\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty,\r\n  updateShowcase\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChDialogElement> = {};\r\n\r\nconst handleClose = () => {\r\n  state.show = false;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst handleDialogOpen = () => {\r\n  state.show = true;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst render = () => [\r\n  <button class=\"button-primary\" type=\"button\" onClick={handleDialogOpen}>\r\n    Open dialog\r\n  </button>,\r\n\r\n  <ch-dialog\r\n    adjustPositionAfterResize={state.adjustPositionAfterResize}\r\n    allowDrag={state.allowDrag}\r\n    caption={state.caption}\r\n    class=\"dialog dialog-primary\"\r\n    closeButtonAccessibleName={state.closeButtonAccessibleName}\r\n    show={state.show}\r\n    modal={state.modal}\r\n    resizable={state.resizable}\r\n    showFooter={state.showFooter}\r\n    showHeader={state.showHeader}\r\n    onDialogClosed={handleClose}\r\n  >\r\n    <label htmlFor=\"some-input\">Any data</label>\r\n    <input id=\"some-input\" class=\"input\" type=\"text\" />\r\n\r\n    <button class=\"button-primary\">button</button>\r\n    <p>\r\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur\r\n      repellendus dolorem recusandae tenetur animi fuga aliquid! Vel iste amet\r\n      laudantium deleniti iusto, commodi dolor omnis laboriosam quod magni, quis\r\n      voluptatem.\r\n    </p>\r\n    <p>\r\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur\r\n      repellendus dolorem recusandae tenetur animi fuga aliquid! Vel iste amet\r\n      laudantium deleniti iusto, commodi dolor omnis laboriosam quod magni, quis\r\n      voluptatem.\r\n    </p>\r\n    <div class=\"box\"></div>\r\n\r\n    <button slot=\"footer\" type=\"button\" class=\"button-secondary\">\r\n      Cancel\r\n    </button>\r\n    <button slot=\"footer\" type=\"button\" class=\"button-primary\">\r\n      Save\r\n    </button>\r\n  </ch-dialog>\r\n];\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChDialogElement> =\r\n  [\r\n    {\r\n      caption: \"Visibility\",\r\n      columns: 2,\r\n      properties: [\r\n        {\r\n          id: \"show\",\r\n          caption: \"Show\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"modal\",\r\n          caption: \"Modal\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showFooter\",\r\n          caption: \"Show Footer\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showHeader\",\r\n          caption: \"Show Header\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"caption\",\r\n          caption: \"Caption\",\r\n          value: \"Title\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"closeButtonAccessibleName\",\r\n          caption: \"Close Button Accessible Name\",\r\n          value: \"Close dialog\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"resizable\",\r\n          caption: \"Resizable\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"adjustPositionAfterResize\",\r\n          caption: \"Adjust Position After Resize\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"allowDrag\",\r\n          caption: \"Allow Drag\",\r\n          value: \"no\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            {\r\n              value: \"box\",\r\n              caption: \"Box\"\r\n            },\r\n            {\r\n              value: \"header\",\r\n              caption: \"Header\"\r\n            },\r\n            {\r\n              value: \"no\",\r\n              caption: \"No\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChCheckboxElement>[] =\r\n  [\r\n    { name: \"adjustPositionAfterResize\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"allowDrag\", defaultValue: \"no\", type: \"string\" },\r\n    { name: \"caption\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"dialog dialog-primary\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"closeButtonAccessibleName\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    { name: \"show\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"modal\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"resizable\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"showFooter\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"showHeader\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"unCheckedValue\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"dialogClosed\",\r\n      fixed: true,\r\n      value: \"handleDialogClosed\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nconst showcaseButtonPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChCheckboxElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"button-primary\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"type\",\r\n      fixed: true,\r\n      value: \"button\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"click\",\r\n      fixed: true,\r\n      value: \"handleDialogOpen\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nconst lightDOMMarkup = (\r\n  framework: ShowcaseTemplateFrameWork\r\n) => `<label htmlFor=\"some-input\">Any data</label>\r\n<input id=\"some-input\" ${showcaseTemplateClassProperty(\r\n  framework,\r\n  \"input\"\r\n)} type=\"text\" />\r\n\r\n<button ${showcaseTemplateClassProperty(\r\n  framework,\r\n  \"button-primary\"\r\n)}>Button</button>\r\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\r\n\r\n<button slot=\"footer\" type=\"button\" ${showcaseTemplateClassProperty(\r\n  framework,\r\n  \"button-secondary\"\r\n)}>\r\n  Cancel\r\n</button>\r\n<button slot=\"footer\" type=\"button\" ${showcaseTemplateClassProperty(\r\n  framework,\r\n  \"button-primary\"\r\n)}>\r\n  Save\r\n</button>`;\r\n\r\nconst lightDOMMarkupReact = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"react\"),\r\n  8\r\n);\r\n\r\nconst lightDOMMarkupStencil = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"stencil\"),\r\n  10\r\n);\r\n\r\nexport const dialogShowcaseStory: ShowcaseStory<HTMLChDialogElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcaseButtonPropertiesInfo\r\n    )}\r\n      >\r\n        Open dialog\r\n      </button>\r\n\r\n      <ChDialog${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcasePropertiesInfo\r\n      )}\r\n      >\r\n        ${lightDOMMarkupReact}\r\n      </ChDialog>`,\r\n\r\n    stencil: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcaseButtonPropertiesInfo\r\n    )}\r\n        >\r\n          Open dialog\r\n        </button>\r\n\r\n        <ch-dialog${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n          ${lightDOMMarkupStencil}\r\n        </ch-dialog>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty,\r\n  updateShowcase\r\n} from \"../utils\";\r\nimport { dummyPictureCallback } from \"./models\";\r\n\r\nconst state: Partial<HTMLChEditElement> = {};\r\nconst formRefs: {\r\n  [key in \"form-edit-1\" | \"form-edit-2\" | \"form-edit-3\"]:\r\n    | HTMLFormElement\r\n    | undefined;\r\n} = {\r\n  \"form-edit-1\": undefined,\r\n  \"form-edit-2\": undefined,\r\n  \"form-edit-3\": undefined\r\n};\r\n\r\nconst formValues = {\r\n  \"edit-1\": \"\",\r\n  \"edit-2\": \"\",\r\n  \"edit-3\": \"\"\r\n};\r\n\r\nconst handleValueInput =\r\n  (formId: keyof typeof formRefs, checkboxId: keyof typeof formValues) =>\r\n  () => {\r\n    formValues[checkboxId] = Object.fromEntries(new FormData(formRefs[formId]))[\r\n      checkboxId\r\n    ] as string;\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst render = () => (\r\n  <div class=\"checkbox-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n      <form id=\"form-edit-1\" ref={el => (formRefs[\"form-edit-1\"] = el)}>\r\n        <ch-edit\r\n          name=\"edit-1\"\r\n          accessibleName={state.accessibleName}\r\n          autocapitalize={state.autocapitalize}\r\n          autocomplete={state.autocomplete}\r\n          autoGrow={state.autoGrow}\r\n          class=\"input\"\r\n          debounce={state.debounce}\r\n          disabled={state.disabled}\r\n          maxLength={state.maxLength}\r\n          mode={state.mode}\r\n          multiline={state.multiline}\r\n          pattern={state.pattern}\r\n          placeholder={state.placeholder}\r\n          picture={state.picture}\r\n          pictureCallback={dummyPictureCallback}\r\n          value={state.value}\r\n          showTrigger={state.showTrigger}\r\n          spellcheck={state.spellcheck}\r\n          startImgSrc={state.startImgSrc}\r\n          startImgType={state.startImgType}\r\n          type={state.type}\r\n          triggerButtonAccessibleName={state.triggerButtonAccessibleName}\r\n          readonly={state.readonly}\r\n          onInput={handleValueInput(\"form-edit-1\", \"edit-1\")}\r\n        ></ch-edit>\r\n      </form>\r\n      Form value: {formValues[\"edit-1\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n      <form id=\"form-edit-2\" ref={el => (formRefs[\"form-edit-2\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"edit-2\">\r\n          Label for edit 2\r\n        </label>\r\n\r\n        <ch-edit\r\n          id=\"edit-2\"\r\n          name=\"edit-2\"\r\n          accessibleName={state.accessibleName}\r\n          autocapitalize={state.autocapitalize}\r\n          autocomplete={state.autocomplete}\r\n          autoGrow={state.autoGrow}\r\n          class=\"input\"\r\n          debounce={state.debounce}\r\n          disabled={state.disabled}\r\n          maxLength={state.maxLength}\r\n          mode={state.mode}\r\n          multiline={state.multiline}\r\n          pattern={state.pattern}\r\n          placeholder={state.placeholder}\r\n          picture={state.picture}\r\n          pictureCallback={dummyPictureCallback}\r\n          value={state.value}\r\n          showTrigger={state.showTrigger}\r\n          spellcheck={state.spellcheck}\r\n          startImgSrc={state.startImgSrc}\r\n          startImgType={state.startImgType}\r\n          type={state.type}\r\n          triggerButtonAccessibleName={state.triggerButtonAccessibleName}\r\n          readonly={state.readonly}\r\n          onInput={handleValueInput(\"form-edit-2\", \"edit-2\")}\r\n        ></ch-edit>\r\n      </form>\r\n      Form value: {formValues[\"edit-2\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n      <form id=\"form-edit-3\" ref={el => (formRefs[\"form-edit-3\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"edit-3\">\r\n          Label for edit 3\r\n          <ch-edit\r\n            id=\"edit-3\"\r\n            name=\"edit-3\"\r\n            accessibleName={state.accessibleName}\r\n            autocapitalize={state.autocapitalize}\r\n            autocomplete={state.autocomplete}\r\n            autoGrow={state.autoGrow}\r\n            class=\"input\"\r\n            debounce={state.debounce}\r\n            disabled={state.disabled}\r\n            maxLength={state.maxLength}\r\n            mode={state.mode}\r\n            multiline={state.multiline}\r\n            pattern={state.pattern}\r\n            placeholder={state.placeholder}\r\n            picture={state.picture}\r\n            pictureCallback={dummyPictureCallback}\r\n            value={state.value}\r\n            showTrigger={state.showTrigger}\r\n            spellcheck={state.spellcheck}\r\n            startImgSrc={state.startImgSrc}\r\n            startImgType={state.startImgType}\r\n            type={state.type}\r\n            triggerButtonAccessibleName={state.triggerButtonAccessibleName}\r\n            readonly={state.readonly}\r\n            onInput={handleValueInput(\"form-edit-3\", \"edit-3\")}\r\n          ></ch-edit>\r\n        </label>\r\n      </form>\r\n      Form value: {formValues[\"edit-3\"]}\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChEditElement> = [\r\n  {\r\n    caption: \"Model\",\r\n    columns: 2,\r\n    properties: [\r\n      {\r\n        id: \"value\",\r\n        columnSpan: 2,\r\n        caption: \"Value\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"type\",\r\n        caption: \"Type\",\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"date\", value: \"date\" },\r\n          { caption: \"datetime-local\", value: \"datetime-local\" },\r\n          { caption: \"email\", value: \"email\" },\r\n          { caption: \"file\", value: \"file\" },\r\n          { caption: \"number\", value: \"number\" },\r\n          { caption: \"password\", value: \"password\" },\r\n          { caption: \"search\", value: \"search\" },\r\n          { caption: \"tel\", value: \"tel\" },\r\n          { caption: \"text\", value: \"text\" },\r\n          { caption: \"time\", value: \"time\" },\r\n          { caption: \"url\", value: \"url\" }\r\n        ],\r\n        value: \"text\"\r\n      },\r\n      {\r\n        id: \"mode\",\r\n        caption: \"Mode\",\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"none\", value: \"none\" },\r\n          { caption: \"text\", value: \"text\" },\r\n          { caption: \"decimal\", value: \"decimal\" },\r\n          { caption: \"numeric\", value: \"numeric\" },\r\n          { caption: \"tel\", value: \"tel\" },\r\n          { caption: \"search\", value: \"search\" },\r\n          { caption: \"email\", value: \"email\" },\r\n          { caption: \"url\", value: \"url\" }\r\n        ],\r\n        value: \"none\"\r\n      },\r\n      {\r\n        id: \"maxLength\",\r\n        columnSpan: 2,\r\n        caption: \"Max Length\",\r\n        type: \"number\",\r\n        value: 10\r\n      },\r\n      {\r\n        id: \"pattern\",\r\n        columnSpan: 2,\r\n        caption: \"Pattern\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"picture\",\r\n        columnSpan: 2,\r\n        caption: \"Picture\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"autoGrow\",\r\n        caption: \"Auto Grow\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"multiline\",\r\n        caption: \"Multiline\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Properties\",\r\n    columns: 2,\r\n    properties: [\r\n      {\r\n        id: \"accessibleName\",\r\n        caption: \"Accessible Name\",\r\n        columnSpan: 2,\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"placeholder\",\r\n        caption: \"Placeholder\",\r\n        columnSpan: 2,\r\n        value: \"Add a value...\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"debounce\",\r\n        columnSpan: 2,\r\n        caption: \"Debounce\",\r\n        type: \"number\",\r\n        value: 0\r\n      },\r\n      {\r\n        id: \"startImgSrc\",\r\n        caption: \"Start Image Src\",\r\n        value: \"folder\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"startImgType\",\r\n        caption: \"Start Image Type\",\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"Background\", value: \"background\" },\r\n          { caption: \"Mask\", value: \"mask\" }\r\n        ],\r\n        value: \"background\"\r\n      },\r\n      {\r\n        id: \"hostParts\",\r\n        caption: \"Host Parts\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"autocapitalize\",\r\n        caption: \"Auto Capitalize\",\r\n        columnSpan: 2,\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"on\", value: \"on\" },\r\n          { caption: \"sentences\", value: \"sentences\" },\r\n          { caption: \"words\", value: \"words\" },\r\n          { caption: \"characters\", value: \"characters\" },\r\n          { caption: \"off\", value: \"off\" },\r\n          { caption: \"none\", value: \"none\" }\r\n        ],\r\n        value: \"off\"\r\n      },\r\n      {\r\n        id: \"autocomplete\",\r\n        caption: \"Auto Complete\",\r\n        columnSpan: 2,\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"On\", value: \"on\" },\r\n          { caption: \"Off\", value: \"off\" }\r\n        ],\r\n        render: \"radio-group\",\r\n        value: \"off\"\r\n      },\r\n      {\r\n        id: \"spellcheck\",\r\n        caption: \"Spellcheck\",\r\n        type: \"boolean\",\r\n        value: false\r\n      },\r\n      {\r\n        id: \"disabled\",\r\n        caption: \"Disabled\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"readonly\",\r\n        caption: \"Readonly\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"clearSearchButtonAccessibleName\",\r\n        caption: \"Clear Search Button Accessible Name\",\r\n        columnSpan: 2,\r\n        value: \"Clear search\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"showTrigger\",\r\n        caption: \"Show Trigger\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"triggerButtonAccessibleName\",\r\n        caption: \"Trigger Button Accessible Name\",\r\n        columnSpan: 2,\r\n        value: undefined,\r\n        type: \"string\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChEditElement>[] =\r\n  [\r\n    {\r\n      name: \"id\",\r\n      fixed: true,\r\n      value: \"first-name\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"name\",\r\n      fixed: true,\r\n      value: \"first-name\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"autocapitalize\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"autocomplete\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"autoGrow\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"input\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"clearSearchButtonAccessibleName\",\r\n      defaultValue: \"Clear search\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"debounce\", defaultValue: 0, type: \"number\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"getImagePathCallback\",\r\n      fixed: true,\r\n      value: \"getImagePathCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"hostParts\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"maxLength\", defaultValue: undefined, type: \"number\" },\r\n    { name: \"mode\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"multiline\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"pattern\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"picture\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"pictureCallback\",\r\n      fixed: true,\r\n      value: \"pictureCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"placeholder\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"readonly\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"spellcheck\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"showTrigger\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"startImgSrc\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"startImgType\", defaultValue: \"background\", type: \"string\" },\r\n    {\r\n      name: \"triggerButtonAccessibleName\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    { name: \"type\", defaultValue: \"text\", type: \"string\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"input\",\r\n      fixed: true,\r\n      value: \"handleInput\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const editShowcaseStory: ShowcaseStory<HTMLChEditElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<label ${showcaseTemplateClassProperty(\r\n      \"react\",\r\n      \"label\"\r\n    )} htmlFor=\"first-name\">\r\n        First name\r\n      </label>\r\n\r\n      <ChEdit${renderShowcaseProperties(state, \"react\", showcasePropertiesInfo)}\r\n      ></ChEdit>`,\r\n\r\n    stencil: () => `<label ${showcaseTemplateClassProperty(\r\n      \"stencil\",\r\n      \"label\"\r\n    )} htmlFor=\"first-name\">\r\n          First name\r\n        </label>\r\n\r\n        <ch-edit${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-edit>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = (designSystem: \"mercury\" | \"unanimo\") => (\r\n  <ch-test-flexible-layout\r\n    designSystem={designSystem}\r\n  ></ch-test-flexible-layout>\r\n);\r\n\r\nexport const flexibleLayoutShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChImageElement> = {};\r\nlet button2Ref: HTMLButtonElement;\r\n\r\nconst render = () => (\r\n  <div class=\"image-test-main-wrapper\">\r\n    <button\r\n      class=\"button-tertiary button-icon\"\r\n      disabled={state.disabled}\r\n      type=\"button\"\r\n    >\r\n      <ch-image\r\n        disabled={state.disabled}\r\n        src={state.src}\r\n        type={state.type}\r\n      ></ch-image>\r\n      Some text\r\n    </button>\r\n\r\n    <button\r\n      class=\"button-tertiary button-icon\"\r\n      disabled={state.disabled}\r\n      type=\"button\"\r\n      ref={el => (button2Ref = el)}\r\n    >\r\n      <div>\r\n        <ch-image\r\n          containerRef={button2Ref}\r\n          disabled={state.disabled}\r\n          src={state.src}\r\n          type={state.type}\r\n        ></ch-image>\r\n      </div>\r\n      Some text\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChImageElement> = [\r\n  {\r\n    caption: \"Properties\",\r\n    properties: [\r\n      {\r\n        id: \"src\",\r\n        caption: \"Src\",\r\n        value: \"folder\",\r\n        render: \"input\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"type\",\r\n        caption: \"Type\",\r\n        value: \"background\",\r\n        values: [\r\n          { caption: \"Background\", value: \"background\" },\r\n          { caption: \"Mask\", value: \"mask\" }\r\n        ],\r\n        render: \"radio-group\",\r\n        type: \"enum\"\r\n      },\r\n      {\r\n        id: \"disabled\",\r\n        caption: \"Disabled\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcaseImage1PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChImageElement>[] =\r\n  [\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"getImagePathCallback\",\r\n      fixed: true,\r\n      value: \"getImagePathCallback\",\r\n      type: \"function\"\r\n    },\r\n    {\r\n      name: \"src\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"type\",\r\n      defaultValue: \"background\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nconst showcaseButton1PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChImageElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"button-tertiary button-icon\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"type\",\r\n      fixed: true,\r\n      value: \"button\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nconst showcaseImage2PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChImageElement>[] =\r\n  [\r\n    { name: \"containerRef\", fixed: true, value: \"buttonRef\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"getImagePathCallback\",\r\n      fixed: true,\r\n      value: \"getImagePathCallback\",\r\n      type: \"function\"\r\n    },\r\n    {\r\n      name: \"src\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"type\",\r\n      defaultValue: \"background\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nconst showcaseButton2PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChImageElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"button-tertiary button-icon\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"type\",\r\n      fixed: true,\r\n      value: \"button\",\r\n      type: \"string\"\r\n    }\r\n    // TODO: Add ref property\r\n  ];\r\n\r\nexport const imageShowcaseStory: ShowcaseStory<HTMLChImageElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcaseButton1PropertiesInfo\r\n    )}\r\n      >\r\n        <ChImage${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcaseImage1PropertiesInfo,\r\n          11\r\n        )}\r\n        ></ChImage>\r\n        Some text\r\n      </button>\r\n\r\n      <button${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcaseButton2PropertiesInfo\r\n      )}\r\n      >\r\n        <div>\r\n          <ChImage${renderShowcaseProperties(\r\n            state,\r\n            \"react\",\r\n            showcaseImage2PropertiesInfo,\r\n            13\r\n          )}\r\n          ></ChImage>\r\n        </div>\r\n        Some text\r\n      </button>`,\r\n\r\n    stencil: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcaseButton1PropertiesInfo\r\n    )}\r\n        >\r\n          <ch-image${renderShowcaseProperties(\r\n            state,\r\n            \"stencil\",\r\n            showcaseImage1PropertiesInfo,\r\n            13\r\n          )}\r\n          ></ch-image>\r\n          Some text\r\n        </button>\r\n  \r\n        <button${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcaseButton2PropertiesInfo\r\n        )}\r\n        >\r\n          <div>\r\n            <ch-image${renderShowcaseProperties(\r\n              state,\r\n              \"stencil\",\r\n              showcaseImage2PropertiesInfo,\r\n              15\r\n            )}\r\n            ></ch-image>\r\n          </div>\r\n          Some text\r\n        </button>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { LayoutSplitterModel } from \"../../../../components/layout-splitter/types\";\r\n\r\nexport const layout1: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"3fr\" },\r\n    { id: \"end-end-component\", size: \"2fr\" },\r\n    { id: \"center-component\", size: \"200px\" },\r\n    { id: \"end-component\", size: \"180px\" }\r\n  ]\r\n};\r\n\r\nexport const layout2: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"rows\",\r\n  items: [\r\n    {\r\n      id: \"sub-group-1\",\r\n      size: \"1fr\",\r\n      minSize: \"100px\",\r\n      direction: \"columns\",\r\n      items: [\r\n        {\r\n          id: \"start-component\",\r\n          size: \"100px\",\r\n          minSize: \"200px\",\r\n          dragBar: { hidden: true }\r\n        },\r\n        {\r\n          id: \"center-component\",\r\n          size: \"1fr\",\r\n          minSize: \"250px\"\r\n        },\r\n        { id: \"end-component\", size: \"270px\", minSize: \"400px\" }\r\n      ]\r\n    },\r\n    { id: \"end-end-component\", size: \"250px\", minSize: \"249px\" },\r\n    { id: \"center-2-component\", size: \"250px\", minSize: \"251px\" }\r\n  ]\r\n};\r\n\r\nexport const layout3: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"300px\" },\r\n    {\r\n      id: \"sub-group-1\",\r\n      size: \"1fr\",\r\n      direction: \"rows\",\r\n      items: [\r\n        { id: \"center-component\", size: \"1fr\" },\r\n        { id: \"end-end-component\", size: \"300px\" }\r\n      ]\r\n    },\r\n    { id: \"end-component\", size: \"270px\" }\r\n  ]\r\n};\r\n\r\nexport const layout4: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"300px\" },\r\n    {\r\n      id: \"sub-group-1\",\r\n      size: \"1fr\",\r\n      direction: \"rows\",\r\n      items: [\r\n        {\r\n          id: \"sub-group-1-1\",\r\n          size: \"1fr\",\r\n          direction: \"columns\",\r\n          items: [\r\n            { id: \"center-component\", size: \"1fr\" },\r\n            { id: \"center-2-component\", size: \"1fr\" }\r\n          ]\r\n        },\r\n        { id: \"end-end-component\", size: \"300px\" }\r\n      ]\r\n    },\r\n    { id: \"end-component\", size: \"270px\" }\r\n  ]\r\n};\r\n\r\nexport const layout5: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"3fr\" },\r\n    { id: \"center-2-component\", size: \"100px\" },\r\n    { id: \"end-end-component\", size: \"2fr\" },\r\n    { id: \"center-component\", size: \"200px\" },\r\n    { id: \"end-component\", size: \"180px\" }\r\n  ]\r\n};\r\n\r\nexport const layout6: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"3fr\" },\r\n    { id: \"end-end-component\", size: \"2fr\" },\r\n    { id: \"center-2-component\", size: \"1fr\" },\r\n    { id: \"center-component\", size: \"0.5fr\" },\r\n    { id: \"end-component\", size: \"180px\" }\r\n  ]\r\n};\r\n\r\nexport const layout7: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"300px\", dragBar: { size: 1 } },\r\n    {\r\n      id: \"sub-group-1\",\r\n      dragBar: { size: 1 },\r\n      size: \"1fr\",\r\n      direction: \"rows\",\r\n      items: [\r\n        {\r\n          id: \"sub-group-1-1\",\r\n          dragBar: { size: 1 },\r\n          size: \"1fr\",\r\n          direction: \"columns\",\r\n          items: [\r\n            {\r\n              id: \"center-component\",\r\n              size: \"1fr\",\r\n              dragBar: { size: 1 }\r\n            },\r\n            { id: \"center-2-component\", size: \"1fr\" }\r\n          ]\r\n        },\r\n        { id: \"end-end-component\", size: \"300px\" }\r\n      ]\r\n    },\r\n    { id: \"end-component\", size: \"270px\" }\r\n  ]\r\n};\r\n\r\nexport const layout8: LayoutSplitterModel = {\r\n  id: \"root\",\r\n  direction: \"columns\",\r\n  items: [\r\n    { id: \"start-component\", size: \"300px\", dragBar: { size: 5 } },\r\n    {\r\n      id: \"sub-group-1\",\r\n      dragBar: { size: 4 },\r\n      size: \"1fr\",\r\n      direction: \"rows\",\r\n      items: [\r\n        {\r\n          id: \"sub-group-1-1\",\r\n          dragBar: { size: 3 },\r\n          size: \"1fr\",\r\n          direction: \"columns\",\r\n          items: [\r\n            {\r\n              id: \"center-component\",\r\n              size: \"1fr\",\r\n              dragBar: { size: 2 }\r\n            },\r\n            { id: \"center-2-component\", size: \"1fr\" }\r\n          ]\r\n        },\r\n        { id: \"end-end-component\", size: \"300px\" }\r\n      ]\r\n    },\r\n    { id: \"end-component\", size: \"270px\" }\r\n  ]\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplateFrameWork,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  layout1,\r\n  layout2,\r\n  layout3,\r\n  layout4,\r\n  layout5,\r\n  layout6,\r\n  layout7,\r\n  layout8\r\n} from \"./models\";\r\nimport {\r\n  insertSpacesAtTheBeginningExceptForTheFirstLine,\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChLayoutSplitterElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-layout-splitter model={state.model}>\r\n    <div\r\n      slot=\"start-component\"\r\n      class=\"components\"\r\n      style={{\r\n        \"background-color\":\r\n          \"var(--colors-foundation__purple--10, var(--mer-color__neutral-gray--900))\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"start\">Start</label>\r\n      <ch-edit id=\"start\" class=\"input\" type=\"text\"></ch-edit>\r\n    </div>\r\n    <div\r\n      slot=\"end-component\"\r\n      class=\"components\"\r\n      style={{\r\n        \"background-color\":\r\n          \"var(--colors-foundation__orange--200, var(--mer-color__tinted-red--60))\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"end\">End</label>\r\n      <ch-edit id=\"end\" class=\"input\" type=\"text\"></ch-edit>\r\n    </div>\r\n\r\n    <div\r\n      slot=\"end-end-component\"\r\n      class=\"components\"\r\n      style={{\r\n        \"background-color\":\r\n          \"color-mix(in srgb, var(--icon__error),transparent 60%)\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"end-end\">End End</label>\r\n      <ch-edit id=\"end-end\" class=\"input\" type=\"text\"></ch-edit>\r\n    </div>\r\n\r\n    <div\r\n      slot=\"center-2-component\"\r\n      class=\"components\"\r\n      style={{\r\n        \"background-color\":\r\n          \"var(--accents__disabled, var(--mer-color__neutral-gray--700))\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"center-2\">Center 2</label>\r\n      <ch-edit id=\"center-2\" class=\"input\" type=\"text\"></ch-edit>\r\n    </div>\r\n\r\n    <div\r\n      slot=\"center-component\"\r\n      class=\"components\"\r\n      style={{\r\n        \"background-color\":\r\n          \"var(--alert-warning__background-color, var(--mer-color__neutral-gray--600))\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"center\">Center</label>\r\n      <ch-edit id=\"center\" class=\"input\" type=\"text\"></ch-edit>\r\n    </div>\r\n  </ch-layout-splitter>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChLayoutSplitterElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Layout 1\", value: layout1 },\r\n            { caption: \"Layout 2\", value: layout2 },\r\n            { caption: \"Layout 3\", value: layout3 },\r\n            { caption: \"Layout 4\", value: layout4 },\r\n            { caption: \"Layout 5\", value: layout5 },\r\n            { caption: \"Layout 6\", value: layout6 },\r\n            { caption: \"Layout 7\", value: layout7 },\r\n            { caption: \"Layout 8\", value: layout8 }\r\n          ],\r\n          value: layout7\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChLayoutSplitterElement>[] =\r\n  [\r\n    { name: \"class\", fixed: true, value: \"layout-splitter\", type: \"string\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" }\r\n  ];\r\n\r\nconst lightDOMMarkup = (\r\n  framework: ShowcaseTemplateFrameWork\r\n) => `<div slot=\"start-component\">\r\n  <label htmlFor=\"start\">Start</label>\r\n  <ch-edit id=\"start\" ${showcaseTemplateClassProperty(\r\n    framework,\r\n    \"input\"\r\n  )} type=\"text\"></ch-edit>\r\n</div>\r\n\r\n<div slot=\"end-component\">\r\n  <label htmlFor=\"end\">End</label>\r\n  <ch-edit id=\"end\" ${showcaseTemplateClassProperty(\r\n    framework,\r\n    \"input\"\r\n  )} type=\"text\"></ch-edit>\r\n</div>\r\n\r\n<div slot=\"end-end-component\">\r\n  <label htmlFor=\"end-end\">End End</label>\r\n  <ch-edit id=\"end-end\" ${showcaseTemplateClassProperty(\r\n    framework,\r\n    \"input\"\r\n  )} type=\"text\"></ch-edit>\r\n</div>\r\n\r\n<div slot=\"center-2-component\">\r\n  <label htmlFor=\"center-2\">Center 2</label>\r\n  <ch-edit id=\"center-2\" ${showcaseTemplateClassProperty(\r\n    framework,\r\n    \"input\"\r\n  )} type=\"text\"></ch-edit>\r\n</div>\r\n\r\n<div slot=\"center-component\">\r\n  <label htmlFor=\"center\">Center</label>\r\n  <ch-edit id=\"center\" ${showcaseTemplateClassProperty(\r\n    framework,\r\n    \"input\"\r\n  )} type=\"text\"></ch-edit>\r\n</div>`;\r\n\r\nconst lightDOMMarkupReact = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"react\"),\r\n  8\r\n);\r\n\r\nconst lightDOMMarkupStencil = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"stencil\"),\r\n  10\r\n);\r\n\r\nexport const layoutSplitterShowcaseStory: ShowcaseStory<HTMLChLayoutSplitterElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"LayoutSplitterModel\",\r\n      render: {\r\n        react: () => `<ChLayoutSplitter${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      >\r\n        ${lightDOMMarkupReact}\r\n      </ChLayoutSplitter>`,\r\n\r\n        stencil: () => `<ch-layout-splitter${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n          ${lightDOMMarkupStencil}\r\n        </ch-layout-splitter>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","export const markdownReadmeModel = `Chameleon Markdown Parser\r\n========================\r\n\r\nThe [ch-markdown] control lets you convert [Markdown] into HTML. Markdown is a simple text format whose goal is to be very easy to read and write, even when not converted to HTML.  This demo page will let you type anything you like and see how it gets converted.  Live.  No more waiting around.\r\n\r\n## Table of content\r\nBased on [Markdown basic syntax](https://www.markdownguide.org/basic-syntax/)\r\n\r\n* [Why Markdown?](#why-markdown)\r\n* [How To Use The Demo](#how-to-use-the-demo)\r\n* [Basic syntax](#basic)\r\n  - [Headings](#headings)\r\n  - [Alternative headings](#alternative-headings)\r\n  - [Paragraphs](#paragraphs)\r\n  - [Line Breaks](#line-break)\r\n  - [Emphasis](#emphasis)\r\n    + [Bold](#bold)\r\n    + [Italic](#italic)\r\n    + [Bold and Italic](#bold-and-italic)\r\n  - [Blockquotes](#blockquotes)\r\n    + [Blockquotes with Multiple Paragraphs](#blockquotes-with-multiple-paragraphs)\r\n    + [Nested Blockquotes](#nested-blockquotes)\r\n    + [Blockquotes with Other Elements](#blockquotes-with-other-elements)\r\n  - [Lists](#lists)\r\n    + [Ordered Lists](#ordered-lists)\r\n    + [Unordered Lists](#unordered-lists)\r\n    + [Starting Ordered List Items with Numbers](#starting-ordered-list-items-with-numbers)\r\n  - [Adding Elements in Lists](#adding-elements-in-lists)\r\n    + [Paragraphs](#starting-ordered-list-items-with-numbers-paragraphs)\r\n    + [Blockquotes](#starting-ordered-list-items-with-numbers-blockquotes)\r\n    + [Code Blocks](#starting-ordered-list-items-with-numbers-code-blocks)\r\n    + [Images](#starting-ordered-list-items-with-numbers-images)\r\n    + [Lists](#starting-ordered-list-items-with-numbers-lists)\r\n  - [Inline Code](#inline-code)\r\n    + [Escaping Backticks](#escaping-backticks)\r\n  - [Code block](#code-block)\r\n    + [Syntax Highlighting](#syntax-highlighting)\r\n  - [Horizontal Rules](#horizontal-rules)\r\n  - [Links](#links)\r\n    + [Adding Titles](#links-adding-titles)\r\n    + [URLs and Email Addresses](#links-urls-and-email-addresses)\r\n    + [Formatting Links](#links-formatting-links)\r\n    + [Reference-style Links](#links-reference-style-links)\r\n      * [Formatting the First Part of the Link](#links-formatting-the-first-part-of-the-link)\r\n      * [Formatting the Second Part of the Link](#links-formatting-the-second-part-of-the-link)\r\n      * [An Example Putting the Parts Together](#links-an-example-putting-the-parts-together)\r\n  - [Images](#images)\r\n    + [Linking Images](#linking-images)\r\n  - [Escaping Characters](#escaping-characters)\r\n\r\n\r\n* [GitHub flavored markdown (GFM)](#gfm)\r\n\r\n## Why Markdown? {#why-markdown}\r\n\r\nIt's easy.  It's not overly bloated, unlike HTML.  Also, as the creator of [markdown] says,\r\n\r\n> The overriding design goal for Markdown's\r\n> formatting syntax is to make it as readable\r\n> as possible. The idea is that a\r\n> Markdown-formatted document should be\r\n> publishable as-is, as plain text, without\r\n> looking like it's been marked up with tags\r\n> or formatting instructions.\r\n\r\n[ch-markdown]: https://github.com/genexuslabs/chameleon-controls-library\r\n[Markdown]: https://www.markdownguide.org/extended-syntax/\r\n\r\n## How To Use The Demo {#how-to-use-the-demo}\r\n\r\n1. 👈 Type in stuff on the left.\r\n2. 👉 See the live updates on the right.\r\n\r\n## Basic syntax {#basic}\r\n\r\n### Headings {#headings}\r\nTo create a heading, add number signs (\\`#\\`) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three (\\`<h3>\\`), use three number signs (e.g., \\`### My Header\\`).\r\n\r\n# Heading level 1\r\n## Heading level 2\r\n### Heading level 3\r\n#### Heading level 4\r\n##### Heading level 5\r\n###### Heading level 6\r\n\r\n### Alternative headings {#alternative-headings}\r\nAlternatively, on the line below the text, add any number of \\`==\\` characters for heading level 1 or \\`--\\` characters for heading level 2.\r\n\r\nHeading level 1\r\n===\r\n\r\nHeading level 2\r\n---\r\n\r\n### Paragraphs {#paragraphs}\r\nTo create paragraphs, use a blank line to separate one or more lines of text.\r\n\r\n### Line Breaks {#line-break}\r\nTo create a line break or new line (\\`<br>\\`), end a line with two or more spaces, and then type return.\r\n\r\nText example 1.\\\r\nText example 2 in the same paragraph.\r\n\r\nText example 3 in a new paragraph.\r\nText example 4 in the same paragraph.\r\n\r\n### Emphasis {#emphasis}\r\nYou can add emphasis by making text bold or italic.\r\n\r\n#### Bold {#bold}\r\nTo bold text, add two asterisks or underscores before and after a word or phrase. To bold the middle of a word for emphasis, add two asterisks without spaces around the letters.\r\n\r\nI just love **bold text**.\r\n\r\nI just love __bold text__.\r\n\r\nLove**is**bold\r\n\r\n#### Italic {#italic}\r\nTo italicize text, add one asterisk or underscore before and after a word or phrase. To italicize the middle of a word for emphasis, add one asterisk without spaces around the letters.\r\n\r\nItalicized text is the *cat's meow*.\r\n\r\nItalicized text is the _cat's meow_.\r\n\r\nA*cat*meow\r\n\r\n#### Bold and Italic {#bold-and-italic}\r\nTo emphasize text with bold and italics at the same time, add three asterisks or underscores before and after a word or phrase. To bold and italicize the middle of a word for emphasis, add three asterisks without spaces around the letters.\r\n\r\nThis text is ***really important***.\r\n\r\nThis text is ___really important___.\r\n\r\nThis text is __*really important*__.\r\n\r\nThis text is **_really important_**.\r\n\r\nThis is really***very***important text.\r\n\r\n### Blockquotes {#blockquotes}\r\nTo create a blockquote, add a \\`>\\` in front of a paragraph.\r\n\r\n> Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n\r\n#### Blockquotes with Multiple Paragraphs {#blockquotes-with-multiple-paragraphs}\r\nBlockquotes can contain multiple paragraphs. Add a \\`>\\` on the blank lines between the paragraphs.\r\n\r\n> Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n> \r\n> Asperiores iusto quasi exercitationem at suscipit, recusandae doloremque accusantium, eveniet delectus omnis harum voluptatum est, possimus nesciunt fugit autem! Sapiente, similique libero.\r\n\r\n#### Nested Blockquotes {#nested-blockquotes}\r\nBlockquotes can be nested. Add a \\`>>\\` in front of the paragraph you want to nest.\r\n\r\n> Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n> \r\n>> Asperiores iusto quasi exercitationem at suscipit, recusandae doloremque accusantium, eveniet delectus omnis harum voluptatum est, possimus nesciunt fugit autem!\r\n>\r\n> Sapiente, similique libero.\r\n\r\n####  Blockquotes with Other Elements {#blockquotes-with-other-elements}\r\nBlockquotes can contain other Markdown formatted elements. Not all elements can be used — you'll need to experiment to see which ones work.\r\n\r\n> #### The quarterly results look great!\r\n>\r\n> - Revenue was off the chart.\r\n> - Profits were higher than ever.\r\n>\r\n>  *Everything* is going according to **plan**.\r\n\r\n### Lists {#lists}\r\nYou can organize items into ordered and unordered lists.\r\n\r\n#### Ordered Lists {#ordered-lists}\r\nTo create an ordered list, add line items with numbers followed by periods. The numbers don’t have to be in numerical order, but the list should start with the number one.\r\n\r\n**Example 1:**\r\n1. First item\r\n2. Second item\r\n3. Third item\r\n4. Fourth item\r\n\r\n**Example 2:**\r\n1. First item\r\n1. Second item\r\n1. Third item\r\n1. Fourth item\r\n\r\n**Example 3:**\r\n1. First item\r\n8. Second item\r\n3. Third item\r\n5. Fourth item\r\n\r\n**Example 4:**\r\n1. First item\r\n2. Second item\r\n3. Third item\r\n    1. Indented item\r\n    2. Indented item\r\n4. Fourth item\r\n\r\n**Example 5:**\r\n\r\n6. First item\r\n7. Second item\r\n8. Third item\r\n    1. Indented item\r\n    2. Indented item\r\n9. Fourth item\r\n\r\n#### Unordered Lists {#unordered-lists}\r\nTo create an unordered list, add dashes (\\`-\\`), asterisks (\\`*\\`), or plus signs (\\`+\\`) in front of line items. Indent one or more items to create a nested list.\r\n\r\n**Example 1:**\r\n- First item\r\n- Second item\r\n- Third item\r\n- Fourth item\r\n\r\n**Example 2:**\r\n* First item\r\n* Second item\r\n* Third item\r\n* Fourth item\r\n\r\n**Example 3:**\r\n+ First item\r\n+ Second item\r\n+ Third item\r\n+ Fourth item\r\n\r\n**Example 4:**\r\n- First item\r\n- Second item\r\n- Third item\r\n    - Indented item\r\n    - Indented item\r\n- Fourth item\r\n\r\n**Example 5:**\r\n- First item\r\n- Second item\r\n- Third item\r\n    - Indented item\r\n    - Indented item\r\n- Fourth item\r\n  + Indented item\r\n  + Indented item\r\n    * Indented item\r\n    + Indented item\r\n  + Indented item\r\n  - Indented item\r\n\r\n#### Starting Ordered List Items with Numbers {#starting-ordered-list-items-with-numbers}\r\nIf you need to start an ordered list item with a number followed by a period, you can use a backslash (\\`\\\\\\`) to escape the period.\r\n\r\n1. 1968\\. A great year!\r\n2. I think 1969 was second best.\r\n\r\n### Adding Elements in Lists {#adding-elements-in-lists}\r\nTo add another element in a list while preserving the continuity of the list, indent the element four spaces or one tab, as shown in the following examples.\r\n\r\n**Important:** If things don't appear the way you expect, double check that you've indented the elements in the list four spaces or one tab.\r\n\r\n#### Paragraphs {#starting-ordered-list-items-with-numbers-paragraphs}\r\n* This is the first list item.\r\n* Here's the second list item.\r\n\r\n    I need to add another paragraph below the second list item.\r\n\r\n* And here's the third list item.\r\n\r\n#### Blockquotes {#starting-ordered-list-items-with-numbers-blockquotes}\r\n* This is the first list item.\r\n* Here's the second list item.\r\n\r\n    > A blockquote would look great below the second list item.\r\n\r\n* And here's the third list item.\r\n\r\n#### Code Blocks {#starting-ordered-list-items-with-numbers-code-blocks}\r\n1. Open the file.\r\n2. Find the following code block on line 21:\r\n   \\`\\`\\`javascript\r\n   const hello = \"Hello world!\";\r\n   console.log(hello);\r\n   \\`\\`\\`\r\n3. Update the title to match the name of your website.\r\n\r\n#### Images {#starting-ordered-list-items-with-numbers-images}\r\n1. Open the file containing the Angular logo.\r\n2. Marvel at its beauty.\r\n\r\n    ![Angular logo](showcase/pages/assets/icons/angular.svg)\r\n\r\n3. Close the file.\r\n\r\n#### Lists {#starting-ordered-list-items-with-numbers-lists}\r\nYou can nest an unordered list in an ordered list, or vice versa.\r\n\r\n1. First item\r\n2. Second item\r\n3. Third item\r\n    - Indented item\r\n    - Indented item\r\n4. Fourth item\r\n\r\n### Inline Code {#inline-code}\r\nTo denote a word or phrase as code, enclose it in backticks (\\` \\`\\` \\`).\r\n\r\nAt the command prompt, type \\`nano\\`.\r\n\r\n#### Escaping Backticks {#escaping-backticks}\r\nIf the word or phrase you want to denote as code includes one or more backticks, you can escape it by enclosing the word or phrase in double backticks (\\` \\`\\` \\`).\r\n\r\n\\`\\`Use \\`code\\` in your Markdown file.\\`\\`\r\n\r\n### Code block {#code-block}\r\nTo create code blocks, you’ll use three backticks (\\` \\`\\`\\` \\`) or three tildes (\\`~~~\\`) on the lines before and after the code block.\r\n\r\n\\`\\`\\`\r\n{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Smith\",\r\n  \"age\": 25\r\n}\r\n\\`\\`\\`\r\n\r\nAnother way to create code blocks is to indent every line of the block by at least four spaces or one tab.\r\n\r\n    <html>\r\n      <head>\r\n      </head>\r\n    </html>\r\n\r\n\r\n#### Syntax Highlighting {#syntax-highlighting}\r\nThis feature allows you to add color highlighting for whatever language your code was written in.\r\nTo add syntax highlighting, specify a language next to the backticks before the fenced code block.\r\n\r\n\\`\\`\\`json\r\n{\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"Smith\",\r\n  \"age\": 25\r\n}\r\n\\`\\`\\`\r\n\r\n\\`\\`\\`javascript\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Markdown from 'react-markdown'\r\nimport rehypeHighlight from 'rehype-highlight'\r\n\r\nconst markdown = \\`\r\n# Your markdown here\r\n\\`\r\n\r\nReactDOM.render(\r\n  <Markdown rehypePlugins={[rehypeHighlight]}>{markdown}</Markdown>,\r\n  document.querySelector('#content')\r\n)\r\n\\`\\`\\`\r\n\r\n### Horizontal Rules {#horizontal-rules}\r\nTo create a horizontal rule, use three or more asterisks (\\`***\\`), dashes (\\`---\\`), or underscores (\\`___\\`) on a line by themselves.\r\n\r\nAsterisks:\r\n\r\n***\r\n\r\nDashes:\r\n\r\n---\r\n\r\nUnderscores:\r\n_________________\r\n\r\n### Links {#links}\r\nTo create a link, enclose the link text in brackets (e.g., \\`[ch-markdown]\\`) and then follow it immediately with the URL in parentheses (e.g., \\`(https://github.com/genexuslabs/chameleon-controls-library)\\`).\r\n\r\nMy favorite markdown viewer is [ch-markdown](https://github.com/genexuslabs/chameleon-controls-library).\r\n\r\n#### Adding Titles {#links-adding-titles}\r\nYou can optionally add a title for a link. This will appear as a tooltip when the user hovers over the link. To add a title, enclose it in quotation marks after the URL.\r\n\r\nMy favorite markdown viewer is [ch-markdown](https://github.com/genexuslabs/chameleon-controls-library \"The best markdown viewer\").\r\n\r\n#### URLs and Email Addresses {#links-urls-and-email-addresses}\r\nTo quickly turn a URL or email address into a link, enclose it in angle brackets \\`<>\\`.\r\n\r\n<https://github.com/genexuslabs/chameleon-controls-library>\r\n\r\n<jdoe@example.com>\r\n\r\n#### Formatting Links {#links-formatting-links}\r\nTo emphasize links, add asterisks before and after the brackets and parentheses. To denote links as code, add backticks in the brackets.\r\n\r\nI love the **[ch-markdown control](https://github.com/genexuslabs/chameleon-controls-library)**.\r\n\r\nThis is the *[ch-markdown readme](https://github.com/genexuslabs/chameleon-controls-library)*.\r\n\r\nSee the section on [\\`code\\`](#code).\r\n\r\n#### Reference-style Links {#links-reference-style-links}\r\nReference-style links are a special kind of link that make URLs easier to display and read in Markdown. Reference-style links are constructed in two parts: the part you keep inline with your text and the part you store somewhere else in the file to keep the text easy to read.\r\n\r\n##### Formatting the First Part of the Link {#links-formatting-the-first-part-of-the-link}\r\nThe first part of a reference-style link is formatted with two sets of brackets. The first set of brackets surrounds the text that should appear linked. The second set of brackets displays a label used to point to the link you’re storing elsewhere in your document.\r\n\r\nAlthough not required, you can include a space between the first and second set of brackets. The label in the second set of brackets is not case sensitive and can include letters, numbers, spaces, or punctuation.\r\n\r\nThis means the following example formats are roughly equivalent for the first part of the link:\r\n\r\n  - \\`[hobbit-hole][1]\\`\r\n  - \\`[hobbit-hole] [1]\\`\r\n\r\n##### Formatting the Second Part of the Link {#links-formatting-the-second-part-of-the-link}\r\nThe second part of a reference-style link is formatted with the following attributes:\r\n\r\n 1. The label, in brackets, followed immediately by a colon and at least one space (e.g., \\`[label]:\\` ).\r\n 2. The URL for the link, which you can optionally enclose in angle brackets.\r\n 3. The optional title for the link, which you can enclose in double quotes, single quotes, or parentheses.\r\n\r\nThis means the following example formats are all roughly equivalent for the second part of the link:\r\n\r\n  - \\`[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle\\`\r\n  - \\`[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"\\`\r\n  - \\`[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles'\\`\r\n  - \\`[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)\\`\r\n  - \\`[1]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> \"Hobbit lifestyles\"\\`\r\n  - \\`[1]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> 'Hobbit lifestyles'\\`\r\n  - \\`[1]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> (Hobbit lifestyles)\\`\r\n\r\nYou can place this second part of the link anywhere in your Markdown document. Some people place them immediately after the paragraph in which they appear while other people place them at the end of the document (like endnotes or footnotes).\r\n\r\n##### An Example Putting the Parts Together {#links-an-example-putting-the-parts-together}\r\nSay you add a URL as a standard URL link to a paragraph and it looks like this in Markdown:\r\n\r\n\\`\\`\\`\r\nIn a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\r\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\r\neat: it was a [hobbit-hole](https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"), and that means comfort.\r\n\\`\\`\\`\r\n\r\nThough it may point to interesting additional information, the URL as displayed really doesn’t add much to the existing raw text other than making it harder to read. To fix that, you could format the URL like this instead:\r\n\r\n\\`\\`\\`\r\nIn a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\r\nof worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\r\neat: it was a [hobbit-hole][1], and that means comfort.\r\n\r\n[1]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> \"Hobbit lifestyles\"\r\n\\`\\`\\`\r\n\r\nIn both instances above, the rendered output would be identical:\r\n\r\n> In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\r\n> of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\r\n> eat: it was a [hobbit-hole](https://en.wikipedia.org/wiki/Hobbit#Lifestyle \"Hobbit lifestyles\"), and that means comfort.\r\n\r\n> In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends\r\n> of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to\r\n> eat: it was a [hobbit-hole][1], and that means comfort.\r\n\r\n[1]: <https://en.wikipedia.org/wiki/Hobbit#Lifestyle> \"Hobbit lifestyles\"\r\n\r\n\r\n### Images {#images}\r\nTo add an image, add an exclamation mark (\\`!\\`), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title in quotation marks after the path or URL.\r\n\r\n![Old angular logo](showcase/pages/assets/icons/angular.svg \"Old angular logo\")\r\n\r\n#### Linking Images {#linking-images}\r\nTo add a link to an image, enclose the Markdown for the image in brackets, and then add the link in parentheses.\r\n\r\n[![Old angular logo](showcase/pages/assets/icons/angular.svg \"Old angular logo\")](https://blog.angular.io/introducing-angular-v17-4d7033312e4b)\r\n\r\n### Escaping Characters {#escaping-characters}\r\nTo display a literal character that would otherwise be used to format text in a Markdown document, add a backslash (\\`\\\\\\`) in front of the character.\r\n\r\n\\* Without the backslash, this would be a bullet in an unordered list.\r\n\r\nCharacters you can escape:\r\n\r\n| Character | Name |\r\n| --        | :--   |\r\n| \\\\ | backslash |\r\n| \\` | backtick |\r\n| * | asterisk |\r\n| _ | underscore |\r\n| { } | curly braces |\r\n| [ ] | brackets |\r\n| < > | angle brackets |\r\n| ( ) | parentheses |\r\n| # | pound sign |\r\n| + | plus sign |\r\n| - | minus sign (hyphen) |\r\n| . | dot |\r\n| ! | exclamation mark |\r\n| \\\\| | pipe |\r\n\r\n## GitHub flavored markdown (GFM) {#gfm}\r\n`;\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory, ShowcaseRender } from \"../types\";\r\nimport { markdownReadmeModel } from \"./models\";\r\nimport { updateShowcase } from \"../utils\";\r\n\r\nlet initialMarkdown = markdownReadmeModel;\r\nlet rawHTMLEnabled = \"false\";\r\nlet showIndicator = \"false\";\r\n\r\nlet checkboxRawHTMLRef: HTMLChCheckboxElement;\r\nlet checkboxIndicatorRef: HTMLChCheckboxElement;\r\nlet textareaRef: HTMLTextAreaElement;\r\n\r\nconst handleValueChange = () => {\r\n  initialMarkdown = textareaRef.value;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst handleCheckboxValueChange = () => {\r\n  rawHTMLEnabled = checkboxRawHTMLRef.value;\r\n  showIndicator = checkboxIndicatorRef.value;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst render: ShowcaseRender = designSystem => (\r\n  <div class=\"markdown-test-main-wrapper\">\r\n    <div class=\"markdown-test-properties\">\r\n      <ch-checkbox\r\n        caption=\"Raw HTML enabled\"\r\n        class=\"checkbox\"\r\n        checkedValue=\"true\"\r\n        onInput={handleCheckboxValueChange}\r\n        ref={el => (checkboxRawHTMLRef = el)}\r\n      ></ch-checkbox>\r\n\r\n      <ch-checkbox\r\n        caption=\"Show indicator\"\r\n        class=\"checkbox\"\r\n        checkedValue=\"true\"\r\n        onInput={handleCheckboxValueChange}\r\n        ref={el => (checkboxIndicatorRef = el)}\r\n      ></ch-checkbox>\r\n    </div>\r\n\r\n    <textarea\r\n      aria-label=\"Markdown content\"\r\n      class=\"input\"\r\n      value={initialMarkdown}\r\n      onInput={handleValueChange}\r\n      ref={el => (textareaRef = el)}\r\n    ></textarea>\r\n    <ch-markdown-viewer\r\n      key={designSystem}\r\n      class=\"markdown\"\r\n      theme={\r\n        designSystem === \"unanimo\"\r\n          ? \"unanimo/markdown-viewer\"\r\n          : \"mercury/markdown-viewer\"\r\n      }\r\n      value={initialMarkdown}\r\n      rawHtml={rawHTMLEnabled === \"true\"}\r\n      showIndicator={showIndicator === \"true\"}\r\n    ></ch-markdown-viewer>\r\n  </div>\r\n);\r\n\r\nexport const markdownShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { NavigationListModel } from \"../../../../components/navigation-list/types\";\r\n\r\nexport const unanimoShowcase: NavigationListModel = [\r\n  {\r\n    caption: \"Controls\",\r\n    startImgSrc:\r\n      \"url('https://unpkg.com/@genexus/unanimo@0.25.0/dist/assets/icons/projects.svg')\",\r\n    startImgType: \"mask\",\r\n    items: [\r\n      {\r\n        caption: \"Button\",\r\n        items: [\r\n          { caption: \"Primary button\", link: { url: \"#primary-button\" } },\r\n          { caption: \"Secondary button\", link: { url: \"#secondary-button\" } },\r\n          { caption: \"Tertiary button\", link: { url: \"#tertiary-button\" } },\r\n          { caption: \"Rounded button\", link: { url: \"#rounded-button\" } }\r\n        ]\r\n      },\r\n      {\r\n        caption: \"Grid\",\r\n        items: [\r\n          { caption: \"Standard grid\", link: { url: \"#standard-grid\" } },\r\n          { caption: \"Horizontal grid\", link: { url: \"#horizontal-grid\" } },\r\n          { caption: \"Tabular grid\", link: { url: \"#tabular-grid\" } }\r\n        ]\r\n      },\r\n      {\r\n        caption: \"Attribute/Variable\",\r\n        items: [\r\n          { caption: \"Check Box\", link: { url: \"#checkbox\" } },\r\n          { caption: \"Combo Box\", link: { url: \"#combo-box\" } },\r\n          { caption: \"Date Picker\", link: { url: \"#date-picker\" } },\r\n          { caption: \"Edit\", link: { url: \"#edit\" } },\r\n          { caption: \"Radio Button\", link: { url: \"#radio-button\" } },\r\n          { caption: \"Slider\", link: { url: \"#slider\" } },\r\n          { caption: \"Switch\", link: { url: \"#switch\" } }\r\n        ]\r\n      },\r\n      {\r\n        caption: \"TextBlock\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Navigation\",\r\n    startImgSrc:\r\n      \"url('https://unpkg.com/@genexus/unanimo@0.25.0/dist/assets/icons/send.svg')\",\r\n    startImgType: \"mask\",\r\n    items: [\r\n      {\r\n        caption: \"Action Group\",\r\n        link: { url: \"#action-group\" }\r\n      },\r\n      {\r\n        caption: \"Action Menu\",\r\n        link: { url: \"#action-menu\" }\r\n      },\r\n      {\r\n        caption: \"Breadcrumb\",\r\n        link: { url: \"#breadcrumb\" }\r\n      },\r\n      {\r\n        caption: \"Tab\",\r\n        link: { url: \"#tab\" }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Interaction\",\r\n    startImgSrc:\r\n      \"url('https://unpkg.com/@genexus/unanimo@0.25.0/dist/assets/icons/profile.svg')\",\r\n    startImgType: \"mask\",\r\n    items: [\r\n      {\r\n        caption: \"Alert\",\r\n        link: { url: \"#alert\" }\r\n      },\r\n      {\r\n        caption: \"Progress Bar\",\r\n        link: { url: \"#progress-bar\" }\r\n      }\r\n    ]\r\n  },\r\n  { id: \"Show more\", caption: \"Show more\" }\r\n];\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { unanimoShowcase } from \"./models\";\r\nimport { ChNavigationListRenderCustomEvent } from \"../../../../components\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\nimport { NavigationListHyperlinkClickEvent } from \"../../../../components/navigation-list/types\";\r\n\r\nconst state: Partial<HTMLChNavigationListRenderElement> = {};\r\n\r\n// The current implementation of the showcase navigates when the hash of the\r\n// URL changes\r\nconst preventNavigation = (\r\n  event: ChNavigationListRenderCustomEvent<NavigationListHyperlinkClickEvent>\r\n) => event.detail.event.preventDefault();\r\n\r\nconst render = () => (\r\n  <div class=\"tab-test-main-wrapper\">\r\n    <ch-navigation-list-render\r\n      class=\"navigation-list navigation-list-secondary\"\r\n      autoGrow={state.autoGrow}\r\n      expandableButton={state.expandableButton}\r\n      expandableButtonPosition={state.expandableButtonPosition}\r\n      expanded={state.expanded}\r\n      model={state.model}\r\n      selectedLinkIndicator={state.selectedLinkIndicator}\r\n      showCaptionOnCollapse={state.showCaptionOnCollapse}\r\n      tooltipDelay={state.tooltipDelay}\r\n      onHyperlinkClick={preventNavigation}\r\n    ></ch-navigation-list-render>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChNavigationListRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [{ caption: \"Unanimo Showcase\", value: unanimoShowcase }],\r\n          value: unanimoShowcase\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"autoGrow\",\r\n          caption: \"Auto Grow\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expanded\",\r\n          caption: \"Expanded\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expandableButton\",\r\n          caption: \"Expandable button\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Decorative\", value: \"decorative\" },\r\n            { caption: \"No\", value: \"no\" }\r\n          ],\r\n          value: \"decorative\"\r\n        },\r\n        {\r\n          id: \"expandableButtonPosition\",\r\n          caption: \"Expandable button position\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            { caption: \"Start\", value: \"start\" },\r\n            { caption: \"End\", value: \"end\" }\r\n          ],\r\n          value: \"start\"\r\n        },\r\n        {\r\n          id: \"selectedLinkIndicator\",\r\n          caption: \"Selected Link Indicator\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showCaptionOnCollapse\",\r\n          caption: \"Show Caption On Collapse\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            { caption: \"Inline\", value: \"inline\" },\r\n            { caption: \"Tooltip\", value: \"tooltip\" }\r\n          ],\r\n          value: \"inline\"\r\n        },\r\n        {\r\n          id: \"tooltipDelay\",\r\n          caption: \"Tooltip Delay\",\r\n          value: 100,\r\n          type: \"number\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChNavigationListRenderElement>[] =\r\n  [\r\n    { name: \"autoGrow\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"navigation-list navigation-list-secondary\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"expandableButton\", defaultValue: \"decorative\", type: \"string\" },\r\n    { name: \"expandableButtonPosition\", defaultValue: \"start\", type: \"string\" },\r\n    { name: \"expanded\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    {\r\n      name: \"selectedLink\",\r\n      fixed: true,\r\n      value: \"selectedLink\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"selectedLinkIndicator\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"showCaptionOnCollapse\", defaultValue: \"inline\", type: \"string\" },\r\n    { name: \"tooltipDelay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"buttonClick\",\r\n      fixed: true,\r\n      value: \"handleButtonClick\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"hyperlinkClick\",\r\n      fixed: true,\r\n      value: \"handleHyperlinkClick\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const navigationListShowcaseStory: ShowcaseStory<HTMLChNavigationListRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"NavigationListModel\",\r\n      render: {\r\n        react: () => `<ChNavigationListRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      ></ChNavigationListRender>`,\r\n\r\n        stencil: () => `<ch-navigation-list-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-navigation-list-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = () => (\r\n  <iframe src=\"/showcase/pages/paginator.html\" frameborder=\"0\"></iframe>\r\n);\r\n\r\nexport const paginatorShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty,\r\n  updateShowcase\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChPopoverElement> = {};\r\nlet buttonRef: HTMLButtonElement;\r\n\r\nconst handlePopoverOpened = () => {\r\n  state.show = true;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst handlePopoverClosed = () => {\r\n  state.show = false;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst render = () => (\r\n  <div class=\"popover-test-main-wrapper\">\r\n    <div class=\"popover-test-scroll\">\r\n      <button class=\"button-primary\" type=\"button\" ref={el => (buttonRef = el)}>\r\n        Open popover\r\n      </button>\r\n\r\n      <ch-popover\r\n        allowDrag={state.allowDrag}\r\n        actionElement={buttonRef}\r\n        blockAlign={state.blockAlign}\r\n        blockSizeMatch={state.blockSizeMatch}\r\n        class=\"popover-secondary\"\r\n        closeOnClickOutside={state.closeOnClickOutside}\r\n        show={state.show}\r\n        inlineAlign={state.inlineAlign}\r\n        inlineSizeMatch={state.inlineSizeMatch}\r\n        mode={state.mode}\r\n        overflowBehavior={state.overflowBehavior}\r\n        positionTry={state.positionTry}\r\n        resizable={state.resizable}\r\n        onPopoverOpened={handlePopoverOpened}\r\n        onPopoverClosed={handlePopoverClosed}\r\n      >\r\n        <div\r\n          slot=\"header\"\r\n          style={{ display: \"flex\", \"justify-content\": \"space-between\" }}\r\n        >\r\n          <span class=\"heading-4\">Header title</span>\r\n          <button\r\n            aria-label=\"Close\"\r\n            class=\"button-tertiary\"\r\n            onClick={handlePopoverClosed}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n        Popover content\r\n        <div>\r\n          <div>\r\n            <label class=\"label\">\r\n              Any content 1\r\n              <input class=\"input\" type=\"text\" />\r\n            </label>\r\n          </div>\r\n\r\n          <label class=\"label\">\r\n            Any content 2\r\n            <input class=\"input\" type=\"text\" />\r\n          </label>\r\n          <button class=\"button-primary\" onClick={handlePopoverClosed}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </ch-popover>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChPopoverElement> =\r\n  [\r\n    {\r\n      caption: \"Visibility\",\r\n      columns: 2,\r\n      properties: [\r\n        {\r\n          id: \"show\",\r\n          caption: \"Show\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"mode\",\r\n          caption: \"Mode\",\r\n          value: \"auto\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            {\r\n              value: \"auto\",\r\n              caption: \"Auto\"\r\n            },\r\n            {\r\n              value: \"manual\",\r\n              caption: \"Manual\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"closeOnClickOutside\",\r\n          caption: 'Close On Click Outside (when Mode === \"Manual\")',\r\n          columnSpan: 2,\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Alignment\",\r\n      columns: 2,\r\n      properties: [\r\n        {\r\n          id: \"inlineAlign\",\r\n          caption: \"Inline Align\",\r\n          value: \"center\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"blockAlign\",\r\n          caption: \"Block Align\",\r\n          value: \"outside-end\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"outside-start\",\r\n              caption: \"outside-start\"\r\n            },\r\n            {\r\n              value: \"inside-start\",\r\n              caption: \"inside-start\"\r\n            },\r\n            { value: \"center\", caption: \"center\" },\r\n            {\r\n              value: \"inside-end\",\r\n              caption: \"inside-end\"\r\n            },\r\n            {\r\n              value: \"outside-end\",\r\n              caption: \"outside-end\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"inlineSizeMatch\",\r\n          caption: \"Inline Size Match\",\r\n          value: \"content\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"content\",\r\n              caption: \"content\"\r\n            },\r\n            {\r\n              value: \"action-element\",\r\n              caption: \"action-element\"\r\n            },\r\n            {\r\n              value: \"action-element-as-minimum\",\r\n              caption: \"action-element-as-minimum\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"blockSizeMatch\",\r\n          caption: \"Block Size Match\",\r\n          value: \"content\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"content\",\r\n              caption: \"content\"\r\n            },\r\n            {\r\n              value: \"action-element\",\r\n              caption: \"action-element\"\r\n            },\r\n            {\r\n              value: \"action-element-as-minimum\",\r\n              caption: \"action-element-as-minimum\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"positionTry\",\r\n          caption: \"Position Try\",\r\n          columnSpan: 2,\r\n          value: \"content\",\r\n          type: \"enum\",\r\n          values: [\r\n            {\r\n              value: \"flip-block\",\r\n              caption: \"flip-block\"\r\n            },\r\n            {\r\n              value: \"flip-inline\",\r\n              caption: \"flip-inline\"\r\n            },\r\n            {\r\n              value: \"none\",\r\n              caption: \"none\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"allowDrag\",\r\n          caption: \"Allow Drag\",\r\n          value: \"no\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            {\r\n              value: \"box\",\r\n              caption: \"Box\"\r\n            },\r\n            {\r\n              value: \"header\",\r\n              caption: \"Header\"\r\n            },\r\n            {\r\n              value: \"no\",\r\n              caption: \"No\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"overflowBehavior\",\r\n          caption: \"Overflow Behavior\",\r\n          value: \"overflow\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            {\r\n              value: \"overflow\",\r\n              caption: \"Overflow\"\r\n            },\r\n            {\r\n              value: \"add-scroll\",\r\n              caption: \"Add Scroll\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"resizable\",\r\n          caption: \"Resizable\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChPopoverElement>[] =\r\n  [\r\n    { name: \"allowDrag\", defaultValue: \"no\", type: \"string\" },\r\n    {\r\n      name: \"actionElement\",\r\n      fixed: true,\r\n      value: \"buttonRef\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"blockAlign\", defaultValue: \"center\", type: \"string\" },\r\n    { name: \"blockSizeMatch\", defaultValue: \"content\", type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"popover popover-secondary\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"closeOnClickOutside\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"show\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"inlineAlign\", defaultValue: \"center\", type: \"string\" },\r\n    { name: \"inlineSizeMatch\", defaultValue: \"content\", type: \"string\" },\r\n    { name: \"mode\", defaultValue: \"auto\", type: \"string\" },\r\n    { name: \"overflowBehavior\", defaultValue: \"overflow\", type: \"string\" },\r\n    { name: \"positionTry\", defaultValue: \"none\", type: \"string\" },\r\n    { name: \"resizable\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"popoverClosed\",\r\n      fixed: true,\r\n      value: \"handlePopoverClosed\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nconst showcaseOpenButtonPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChPopoverElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"button-primary\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"type\",\r\n      fixed: true,\r\n      value: \"button\",\r\n      type: \"string\"\r\n    }\r\n    // TODO: Add ref keyword/type\r\n  ];\r\n\r\nconst showcaseCloseButtonPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChPopoverElement>[] =\r\n  [\r\n    {\r\n      name: \"aria-label\",\r\n      fixed: true,\r\n      value: \"Close\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"button-tertiary\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"type\",\r\n      fixed: true,\r\n      value: \"button\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"popoverClosed\",\r\n      fixed: true,\r\n      value: \"handlePopoverClosed\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const popoverShowcaseStory: ShowcaseStory<HTMLChPopoverElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcaseOpenButtonPropertiesInfo\r\n    )}\r\n      >\r\n        Open popover\r\n      </button>\r\n\r\n      <ChPopover${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcasePropertiesInfo\r\n      )}\r\n      >\r\n        <div slot=\"header\">\r\n          <span ${showcaseTemplateClassProperty(\r\n            \"react\",\r\n            \"heading-4\"\r\n          )}>Header title</span>\r\n\r\n          <button${renderShowcaseProperties(\r\n            state,\r\n            \"react\",\r\n            showcaseCloseButtonPropertiesInfo,\r\n            13\r\n          )}\r\n          >\r\n          </button>\r\n        </div>\r\n\r\n        Popover content\r\n      </ChPopover>`,\r\n\r\n    stencil: () => `<button${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcaseOpenButtonPropertiesInfo\r\n    )}\r\n        >\r\n          Open popover\r\n        </button>\r\n  \r\n        <ch-popover${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n          <div slot=\"header\">\r\n            <span ${showcaseTemplateClassProperty(\r\n              \"stencil\",\r\n              \"heading-4\"\r\n            )}>Header title</span>\r\n  \r\n            <button${renderShowcaseProperties(\r\n              state,\r\n              \"stencil\",\r\n              showcaseCloseButtonPropertiesInfo,\r\n              15\r\n            )}\r\n            >\r\n            </button>\r\n          </div>\r\n  \r\n          Popover content\r\n        </ch-popover>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChQrElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-qr\r\n    class=\"qr\"\r\n    accessibleName={state.accessibleName}\r\n    background={state.background}\r\n    errorCorrectionLevel={state.errorCorrectionLevel}\r\n    fill={state.fill}\r\n    radius={state.radius}\r\n    value={state.value}\r\n    size={state.size}\r\n  ></ch-qr>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChQrElement> = [\r\n  {\r\n    caption: \"Model\",\r\n    properties: [\r\n      {\r\n        id: \"value\",\r\n        caption: \"Value\",\r\n        value: \"https://gx-chameleon.netlify.app\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"accessibleName\",\r\n        caption: \"Accessible Name\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"errorCorrectionLevel\",\r\n        caption: \"Error Correction Level\",\r\n        value: \"High\",\r\n        values: [\r\n          { caption: \"Low (7%)\", value: \"Low\" },\r\n          { caption: \"Medium (15%)\", value: \"Medium\" },\r\n          { caption: \"Quartile (25%)\", value: \"Quartile\" },\r\n          { caption: \"High (30%)\", value: \"High\" }\r\n        ],\r\n        type: \"enum\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Customization\",\r\n    properties: [\r\n      {\r\n        id: \"background\",\r\n        caption: \"Background\",\r\n        value: \"white\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"fill\",\r\n        caption: \"Fill\",\r\n        value: \"black\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"radius\",\r\n        caption: \"Radius\",\r\n        value: 0,\r\n        type: \"number\"\r\n      },\r\n      {\r\n        id: \"size\",\r\n        caption: \"Size\",\r\n        value: 128,\r\n        type: \"number\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChQrElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"background\", defaultValue: \"white\", type: \"string\" },\r\n    { name: \"errorCorrectionLevel\", defaultValue: \"High\", type: \"string\" },\r\n    { name: \"fill\", defaultValue: \"black\", type: \"string\" },\r\n    { name: \"radius\", defaultValue: 0, type: \"number\" },\r\n    { name: \"size\", defaultValue: 128, type: \"number\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" }\r\n  ];\r\n\r\nexport const qrShowcaseStory: ShowcaseStory<HTMLChQrElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<ChQr${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcasePropertiesInfo\r\n    )}\r\n      ></ChQr>`,\r\n\r\n    stencil: () => `<ch-qr${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcasePropertiesInfo\r\n    )}\r\n        ></ch-qr>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { RadioGroupModel } from \"../../../../components\";\r\n\r\nexport const simpleModel1: RadioGroupModel = [\r\n  { value: \"value 1\", caption: \"Label for the value 1\", disabled: false },\r\n  {\r\n    value: \"value 2\",\r\n    caption: \"Label for the value 2\"\r\n  },\r\n  {\r\n    value: \"value 3\",\r\n    caption: \"Label for the value 3\"\r\n  },\r\n  { value: \"value 4\", caption: \"Label for the value 4\" },\r\n  {\r\n    value: \"value 5\",\r\n    caption: \"Label for the value 5\"\r\n  }\r\n];\r\n\r\nexport const simpleModel2: RadioGroupModel = [\r\n  { value: \"value 1\", caption: \"Label for the value 1\" },\r\n  {\r\n    value: \"value 2\",\r\n    caption: \"Label for the value 2\"\r\n  },\r\n  {\r\n    value: \"value 3\",\r\n    caption: \"Label for the value 3\",\r\n    disabled: true\r\n  },\r\n  { value: \"value 4\", caption: \"Label for the value 4\" },\r\n  {\r\n    value: \"value 5\",\r\n    caption: \"Label for the value 5\",\r\n    disabled: true\r\n  },\r\n  {\r\n    value: \"value 6\",\r\n    caption: \"Label for the value 6\"\r\n  }\r\n];\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { simpleModel1, simpleModel2 } from \"./models\";\r\nimport { renderShowcaseProperties, updateShowcase } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChRadioGroupRenderElement> = {};\r\nconst formRefs: {\r\n  [key in \"form-radio-group-1\" | \"form-radio-group-2\" | \"form-radio-group-3\"]:\r\n    | HTMLFormElement\r\n    | undefined;\r\n} = {\r\n  \"form-radio-group-1\": undefined,\r\n  \"form-radio-group-2\": undefined,\r\n  \"form-radio-group-3\": undefined\r\n};\r\n\r\nconst formValues = {\r\n  \"radio-group-1\": \"\",\r\n  \"radio-group-2\": \"\",\r\n  \"radio-group-3\": \"\"\r\n};\r\n\r\nconst handleValueInput =\r\n  (formId: keyof typeof formRefs, switchId: keyof typeof formValues) => () => {\r\n    formValues[switchId] = Object.fromEntries(new FormData(formRefs[formId]))[\r\n      switchId\r\n    ] as string;\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst render = () => (\r\n  <div class=\"radio-group-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n      <form\r\n        id=\"form-radio-group-1\"\r\n        ref={el => (formRefs[\"form-radio-group-1\"] = el)}\r\n      >\r\n        <ch-radio-group-render\r\n          id=\"radio-group-1\"\r\n          // name=\"radio-group-1\"\r\n          class=\"radio-group\"\r\n          direction={state.direction}\r\n          disabled={state.disabled}\r\n          model={state.model}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-radio-group-1\", \"radio-group-1\")}\r\n        ></ch-radio-group-render>\r\n      </form>\r\n      Form value: {formValues[\"radio-group-1\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n      <form\r\n        id=\"form-radio-group-2\"\r\n        ref={el => (formRefs[\"form-radio-group-2\"] = el)}\r\n      >\r\n        <label class=\"label\" htmlFor=\"radio-group-2\">\r\n          Label for switch 2\r\n        </label>\r\n\r\n        <ch-radio-group-render\r\n          id=\"radio-group-2\"\r\n          // name=\"radio-group-2\"\r\n          class=\"radio-group\"\r\n          direction={state.direction}\r\n          disabled={state.disabled}\r\n          model={state.model}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-radio-group-2\", \"radio-group-2\")}\r\n        ></ch-radio-group-render>\r\n      </form>\r\n      Form value: {formValues[\"radio-group-2\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n      <form\r\n        id=\"form-radio-group-3\"\r\n        ref={el => (formRefs[\"form-radio-group-3\"] = el)}\r\n      >\r\n        <label class=\"label\" htmlFor=\"radio-group-3\">\r\n          Label for switch 3\r\n          <ch-radio-group-render\r\n            id=\"radio-group-3\"\r\n            // name=\"radio-group-3\"\r\n            class=\"radio-group\"\r\n            direction={state.direction}\r\n            disabled={state.disabled}\r\n            model={state.model}\r\n            value={state.value}\r\n            onInput={handleValueInput(\"form-radio-group-3\", \"radio-group-3\")}\r\n          ></ch-radio-group-render>\r\n        </label>\r\n      </form>\r\n      Form value: {formValues[\"radio-group-3\"]}\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChRadioGroupRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Simple Model\", value: simpleModel1 },\r\n            { caption: \"Simple Model 2\", value: simpleModel2 }\r\n          ],\r\n          value: simpleModel2\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"value\",\r\n          caption: \"Value\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"direction\",\r\n          caption: \"Direction\",\r\n          value: \"horizontal\",\r\n          values: [\r\n            { caption: \"Horizontal\", value: \"horizontal\" },\r\n            { caption: \"Vertical\", value: \"vertical\" }\r\n          ],\r\n          render: \"radio-group\",\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChRadioGroupRenderElement>[] =\r\n  [\r\n    { name: \"class\", fixed: true, value: \"radio-group\", type: \"string\" },\r\n    { name: \"direction\", defaultValue: \"horizontal\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"input\",\r\n      fixed: true,\r\n      value: \"handleInput\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const radioGroupShowcaseStory: ShowcaseStory<HTMLChRadioGroupRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"RadioGroupModel\",\r\n      render: {\r\n        react: () => `<ChRadioGroupRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      ></ChRadioGroupRender>`,\r\n\r\n        stencil: () => `<ch-radio-group-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-radio-group-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { SegmentedControlModel } from \"../../../../components\";\r\n\r\nexport const basicModel1: SegmentedControlModel = [\r\n  { id: \"Value 1\", caption: \"Label for the value 1\" },\r\n  {\r\n    id: \"Value 2\",\r\n    caption: \"Label for the value 2\"\r\n  },\r\n  {\r\n    id: \"Value 3\",\r\n    caption: \"Label for the value 3\",\r\n    disabled: true\r\n  },\r\n  { id: \"Value 4\", caption: \"Label for the value 4\" }\r\n];\r\n\r\nexport const model2: SegmentedControlModel = [\r\n  { id: \"Value 1\", caption: \"Label for the value 1\" },\r\n  {\r\n    id: \"Value 2\",\r\n    caption: \"Label for the value 2\"\r\n  },\r\n  {\r\n    id: \"Value 3\",\r\n    caption: \"Label for the value 3\",\r\n    disabled: true\r\n  },\r\n  { id: \"Value 4\", caption: \"Label for the value 4\" },\r\n  {\r\n    id: \"Value 5\",\r\n    caption: \"Label for the value 5\",\r\n    disabled: true\r\n  },\r\n  {\r\n    id: \"Value 6\",\r\n    caption: \"Label for the value 6\"\r\n  },\r\n  {\r\n    id: \"Value 7\",\r\n    caption: \"Label for the value 7\",\r\n    disabled: true\r\n  },\r\n  { id: \"Value 8\", caption: \"Label for the value 8\" }\r\n];\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { basicModel1, model2 } from \"./models\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChSegmentedControlRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <div class=\"segmented-control-test-main-wrapper\">\r\n    <ch-segmented-control-render\r\n      model={state.model}\r\n    ></ch-segmented-control-render>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChSegmentedControlRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Model 1\", value: basicModel1 },\r\n            { caption: \"Model 2\", value: model2 }\r\n          ],\r\n          value: basicModel1\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChSegmentedControlRenderElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"segmented-control\",\r\n      type: \"string\"\r\n    },\r\n\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" }\r\n  ];\r\n\r\nexport const segmentedControlShowcaseStory: ShowcaseStory<HTMLChSegmentedControlRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"SegmentedControlModel\",\r\n      render: {\r\n        react: () => `<ChSegmentedControlRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      >\r\n      </ChSegmentedControlRender>`,\r\n\r\n        stencil: () => `<ch-segmented-control-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n        </ch-segmented-control-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = () => (\r\n  <iframe src=\"/showcase/pages/shortcuts.html\" frameborder=\"0\"></iframe>\r\n);\r\n\r\nexport const shortcutsShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import { forceUpdate, h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseRenderPropertyStyleValues,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { ChNavigationListRenderCustomEvent } from \"../../../../components\";\r\nimport { unanimoShowcase } from \"../navigation-list/models\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\nimport { NavigationListHyperlinkClickEvent } from \"../../../../components/navigation-list/types\";\r\n\r\nconst state: Partial<\r\n  HTMLChSidebarElement &\r\n    HTMLChNavigationListRenderElement & {\r\n      customVars: ShowcaseRenderPropertyStyleValues;\r\n    }\r\n> = {};\r\n\r\n// The current implementation of the showcase navigates when the hash of the\r\n// URL changes\r\nconst preventNavigation = (\r\n  event: ChNavigationListRenderCustomEvent<NavigationListHyperlinkClickEvent>\r\n) => event.detail.event.preventDefault();\r\n\r\nconst handleExpandedChange = () => {\r\n  state.expanded = !state.expanded;\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  forceUpdate(document.querySelector(\"ch-showcase\"));\r\n};\r\n\r\nconst render = () => (\r\n  <ch-sidebar\r\n    class=\"sidebar\"\r\n    expandButtonExpandAccessibleName={state.expandButtonExpandAccessibleName}\r\n    expandButtonCollapseAccessibleName={\r\n      state.expandButtonCollapseAccessibleName\r\n    }\r\n    expandButtonExpandCaption={state.expandButtonExpandCaption}\r\n    expandButtonCollapseCaption={state.expandButtonCollapseCaption}\r\n    expanded={state.expanded}\r\n    showExpandButton={state.showExpandButton}\r\n    onExpandedChange={handleExpandedChange}\r\n    // showIndicator={state.showIndicator}\r\n    // value={state.value}\r\n  >\r\n    <div class=\"ch-showcase-sidebar-layout\">\r\n      <h2\r\n        class=\"heading-4\"\r\n        style={!state.expanded ? { opacity: \"0\" } : undefined}\r\n      >\r\n        Menu title\r\n      </h2>\r\n\r\n      <ch-navigation-list-render\r\n        class=\"navigation-list navigation-list-primary\"\r\n        autoGrow={state.autoGrow}\r\n        expandableButton={state.expandableButton}\r\n        expandableButtonPosition={state.expandableButtonPosition}\r\n        model={state.model}\r\n        selectedLinkIndicator={state.selectedLinkIndicator}\r\n        showCaptionOnCollapse={state.showCaptionOnCollapse}\r\n        tooltipDelay={state.tooltipDelay}\r\n        onHyperlinkClick={preventNavigation}\r\n      ></ch-navigation-list-render>\r\n    </div>\r\n  </ch-sidebar>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<\r\n  HTMLChSidebarElement & HTMLChNavigationListRenderElement\r\n> = [\r\n  {\r\n    caption: \"Models\",\r\n    properties: [\r\n      {\r\n        id: \"model\",\r\n        accessibleName: \"Model\",\r\n        type: \"enum\",\r\n        values: [{ caption: \"Unanimo Showcase\", value: unanimoShowcase }],\r\n        value: unanimoShowcase\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Properties\",\r\n    properties: [\r\n      {\r\n        id: \"expanded\",\r\n        caption: \"Expanded\",\r\n        value: true,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"expandButtonExpandCaption\",\r\n        caption: \"Expand Button Expand Caption\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"expandButtonCollapseCaption\",\r\n        caption: \"Expand Button Collapse Caption\",\r\n        value: undefined,\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"expandButtonExpandAccessibleName\",\r\n        caption: \"Expand Button Expand Accessible Name\",\r\n        value: \"Expand\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"expandButtonCollapseAccessibleName\",\r\n        caption: \"Expand Button Collapse Accessible Name\",\r\n        value: \"Collapse\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        id: \"showExpandButton\",\r\n        caption: \"Show Expand Button\",\r\n        value: true,\r\n        type: \"boolean\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Navigation List Properties\",\r\n    properties: [\r\n      {\r\n        id: \"autoGrow\",\r\n        caption: \"Auto Grow\",\r\n        value: false,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"expandableButton\",\r\n        caption: \"Expandable button\",\r\n        type: \"enum\",\r\n        values: [\r\n          { caption: \"Decorative\", value: \"decorative\" },\r\n          { caption: \"No\", value: \"no\" }\r\n        ],\r\n        value: \"decorative\"\r\n      },\r\n      {\r\n        id: \"expandableButtonPosition\",\r\n        caption: \"Expandable button position\",\r\n        type: \"enum\",\r\n        render: \"radio-group\",\r\n        values: [\r\n          { caption: \"Start\", value: \"start\" },\r\n          { caption: \"End\", value: \"end\" }\r\n        ],\r\n        value: \"start\"\r\n      },\r\n      {\r\n        id: \"selectedLinkIndicator\",\r\n        caption: \"Selected Link Indicator\",\r\n        value: true,\r\n        type: \"boolean\"\r\n      },\r\n      {\r\n        id: \"showCaptionOnCollapse\",\r\n        caption: \"Show Caption On Collapse\",\r\n        type: \"enum\",\r\n        render: \"radio-group\",\r\n        values: [\r\n          { caption: \"Inline\", value: \"inline\" },\r\n          { caption: \"Tooltip\", value: \"tooltip\" }\r\n        ],\r\n        value: \"tooltip\"\r\n      },\r\n      {\r\n        id: \"tooltipDelay\",\r\n        caption: \"Tooltip Delay\",\r\n        value: 100,\r\n        type: \"number\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    caption: \"Styles\",\r\n    properties: [\r\n      {\r\n        id: \"customVars\",\r\n        type: \"style\",\r\n        properties: [\r\n          {\r\n            id: \"--ch-sidebar-inline-size--collapsed\",\r\n            caption: \"--ch-sidebar-inline-size--collapsed\",\r\n            value: 80,\r\n            render: \"input\",\r\n            type: \"number\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst showcaseSidebarPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChSidebarElement>[] =\r\n  [\r\n    { name: \"expanded\", defaultValue: true, type: \"boolean\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"sidebar\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"expandButtonCollapseAccessibleName\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"expandButtonCollapseCaption\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"expandButtonExpandAccessibleName\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"expandButtonExpandCaption\",\r\n      defaultValue: undefined,\r\n      type: \"string\"\r\n    },\r\n    { name: \"showExpandButton\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"tooltipDelay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"buttonClick\",\r\n      fixed: true,\r\n      value: \"buttonClick\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"hyperlinkClick\",\r\n      fixed: true,\r\n      value: \"hyperlinkClick\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nconst showcaseNavigationListPropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChNavigationListRenderElement>[] =\r\n  [\r\n    { name: \"autoGrow\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"navigation-list navigation-list-secondary\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"expandableButton\", defaultValue: \"decorative\", type: \"string\" },\r\n    { name: \"expandableButtonPosition\", defaultValue: \"start\", type: \"string\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    {\r\n      name: \"selectedLink\",\r\n      fixed: true,\r\n      value: \"selectedLink\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"selectedLinkIndicator\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"showCaptionOnCollapse\", defaultValue: \"inline\", type: \"string\" },\r\n    { name: \"tooltipDelay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"buttonClick\",\r\n      fixed: true,\r\n      value: \"handleButtonClick\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"hyperlinkClick\",\r\n      fixed: true,\r\n      value: \"handleHyperlinkClick\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const sidebarShowcaseStory: ShowcaseStory<\r\n  HTMLChSidebarElement & HTMLChNavigationListRenderElement\r\n> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithUIModel: {\r\n    uiModel: () => state.model,\r\n    uiModelType: \"NavigationListModel\",\r\n    render: {\r\n      react: () => `<ChSidebar${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcaseSidebarPropertiesInfo\r\n      )}\r\n      >\r\n        <ChNavigationListRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcaseNavigationListPropertiesInfo,\r\n          11\r\n        )}\r\n        ></ChNavigationListRender>\r\n      </ChSidebar>`,\r\n\r\n      stencil: () => `<ch-sidebar${renderShowcaseProperties(\r\n        state,\r\n        \"stencil\",\r\n        showcaseSidebarPropertiesInfo\r\n      )}\r\n        >\r\n          <ch-navigation-list-render${renderShowcaseProperties(\r\n            state,\r\n            \"stencil\",\r\n            showcaseNavigationListPropertiesInfo,\r\n            13\r\n          )}\r\n          ></ch-navigation-list-render>\r\n        </ch-sidebar>`\r\n    }\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChSliderElement> = {};\r\n\r\nconst render = () => (\r\n  <div class=\"checkbox-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n\r\n      <ch-slider\r\n        accessibleName={state.accessibleName}\r\n        class=\"slider slider-primary\"\r\n        disabled={state.disabled}\r\n        maxValue={state.maxValue}\r\n        minValue={state.minValue}\r\n        showValue={state.showValue}\r\n        step={state.step}\r\n        value={state.value}\r\n      ></ch-slider>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n\r\n      <label class=\"label\" htmlFor=\"slider-2\">\r\n        Label for slider 2\r\n      </label>\r\n      <ch-slider\r\n        id=\"slider-2\"\r\n        accessibleName={state.accessibleName}\r\n        class=\"slider slider-primary\"\r\n        disabled={state.disabled}\r\n        maxValue={state.maxValue}\r\n        minValue={state.minValue}\r\n        showValue={state.showValue}\r\n        step={state.step}\r\n        value={state.value}\r\n      ></ch-slider>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n\r\n      <label class=\"label\" htmlFor=\"slider-3\">\r\n        Label for slider 3\r\n        <ch-slider\r\n          id=\"slider-3\"\r\n          accessibleName={state.accessibleName}\r\n          class=\"slider slider-primary\"\r\n          disabled={state.disabled}\r\n          maxValue={state.maxValue}\r\n          minValue={state.minValue}\r\n          showValue={state.showValue}\r\n          step={state.step}\r\n          value={state.value}\r\n        ></ch-slider>\r\n      </label>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChSliderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"value\",\r\n          caption: \"Value\",\r\n          value: 2,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"maxValue\",\r\n          caption: \"Max Value\",\r\n          value: 5,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"minValue\",\r\n          caption: \"Min Value\",\r\n          value: 0,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"step\",\r\n          caption: \"Step\",\r\n          value: 0.1,\r\n          type: \"number\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"accessibleName\",\r\n          caption: \"Accessible Name\",\r\n          value: \"Option\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showValue\",\r\n          caption: \"Show Value (not supported yet)\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChSliderElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"slider\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"maxValue\", defaultValue: 5, type: \"number\" },\r\n    { name: \"minValue\", defaultValue: 0, type: \"number\" },\r\n    { name: \"step\", defaultValue: 1, type: \"number\" },\r\n    { name: \"value\", defaultValue: 0, type: \"number\" },\r\n    { name: \"input\", fixed: true, value: \"handleInput\", type: \"event\" }\r\n  ];\r\n\r\nexport const sliderShowcaseStory: ShowcaseStory<HTMLChSliderElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<ChSlider${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcasePropertiesInfo\r\n    )}\r\n      ></ChSlider>`,\r\n\r\n    stencil: () => `<ch-slider${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcasePropertiesInfo\r\n    )}\r\n        ></ch-slider>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties, updateShowcase } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChSwitchElement> = {};\r\nconst formRefs: {\r\n  [key in \"form-switch-1\" | \"form-switch-2\" | \"form-switch-3\"]:\r\n    | HTMLFormElement\r\n    | undefined;\r\n} = {\r\n  \"form-switch-1\": undefined,\r\n  \"form-switch-2\": undefined,\r\n  \"form-switch-3\": undefined\r\n};\r\n\r\nconst formValues = {\r\n  \"switch-1\": \"\",\r\n  \"switch-2\": \"\",\r\n  \"switch-3\": \"\"\r\n};\r\n\r\nconst handleValueInput =\r\n  (formId: keyof typeof formRefs, switchId: keyof typeof formValues) => () => {\r\n    formValues[switchId] = Object.fromEntries(new FormData(formRefs[formId]))[\r\n      switchId\r\n    ] as string;\r\n\r\n    // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n    // this is a hack to update the render of the widget and thus re-render the\r\n    // combo-box updating the displayed items\r\n    updateShowcase();\r\n  };\r\n\r\nconst render = () => (\r\n  <div class=\"checkbox-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">No label</legend>\r\n      <form id=\"form-switch-1\" ref={el => (formRefs[\"form-switch-1\"] = el)}>\r\n        <ch-switch\r\n          name=\"switch-1\"\r\n          accessibleName={state.accessibleName}\r\n          class=\"switch\"\r\n          checkedValue={state.checkedValue}\r\n          unCheckedValue={state.unCheckedValue}\r\n          checkedCaption={state.checkedCaption}\r\n          unCheckedCaption={state.unCheckedCaption}\r\n          disabled={state.disabled}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-switch-1\", \"switch-1\")}\r\n        ></ch-switch>\r\n      </form>\r\n      Form value: {formValues[\"switch-1\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Label with HTML for</legend>\r\n      <form id=\"form-switch-2\" ref={el => (formRefs[\"form-switch-2\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"switch-2\">\r\n          Label for switch 2\r\n        </label>\r\n\r\n        <ch-switch\r\n          id=\"switch-2\"\r\n          name=\"switch-2\"\r\n          accessibleName={state.accessibleName}\r\n          class=\"switch\"\r\n          checkedValue={state.checkedValue}\r\n          unCheckedValue={state.unCheckedValue}\r\n          checkedCaption={state.checkedCaption}\r\n          unCheckedCaption={state.unCheckedCaption}\r\n          disabled={state.disabled}\r\n          value={state.value}\r\n          onInput={handleValueInput(\"form-switch-2\", \"switch-2\")}\r\n        ></ch-switch>\r\n      </form>\r\n      Form value: {formValues[\"switch-2\"]}\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Component inside label\r\n      </legend>\r\n      <form id=\"form-switch-3\" ref={el => (formRefs[\"form-switch-3\"] = el)}>\r\n        <label class=\"label\" htmlFor=\"switch-3\">\r\n          Label for switch 3\r\n          <ch-switch\r\n            id=\"switch-3\"\r\n            name=\"switch-3\"\r\n            accessibleName={state.accessibleName}\r\n            class=\"switch\"\r\n            checkedValue={state.checkedValue}\r\n            unCheckedValue={state.unCheckedValue}\r\n            checkedCaption={state.checkedCaption}\r\n            unCheckedCaption={state.unCheckedCaption}\r\n            disabled={state.disabled}\r\n            value={state.value}\r\n            onInput={handleValueInput(\"form-switch-3\", \"switch-3\")}\r\n          ></ch-switch>\r\n        </label>\r\n      </form>\r\n      Form value: {formValues[\"switch-3\"]}\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChSwitchElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"accessibleName\",\r\n          caption: \"Accessible Name\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"checkedValue\",\r\n          caption: \"Checked Value\",\r\n          value: \"true\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"unCheckedValue\",\r\n          caption: \"Unchecked Value\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"checkedCaption\",\r\n          caption: \"Checked Caption\",\r\n          value: \"Checked caption\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"unCheckedCaption\",\r\n          caption: \"Unchecked Caption\",\r\n          value: \"Unchecked caption\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChSwitchElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"switch\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"checkedCaption\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"checkedValue\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"name\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"unCheckedCaption\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"unCheckedValue\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"value\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"input\", fixed: true, value: \"handleInput\", type: \"event\" }\r\n  ];\r\n\r\nexport const switchShowcaseStory: ShowcaseStory<HTMLChSwitchElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<ChSwitch${renderShowcaseProperties(\r\n      state,\r\n      \"react\",\r\n      showcasePropertiesInfo\r\n    )}\r\n      ></ChSwitch>`,\r\n\r\n    stencil: () => `<ch-switch${renderShowcaseProperties(\r\n      state,\r\n      \"stencil\",\r\n      showcasePropertiesInfo\r\n    )}\r\n        ></ch-switch>`\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRender,\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplateFrameWork,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  disabledModel1,\r\n  disabledModel4,\r\n  disabledModel2,\r\n  disabledModel3,\r\n  simpleModel1,\r\n  simpleModel2,\r\n  closeButtonModel\r\n} from \"./models\";\r\nimport { ChTabRenderCustomEvent } from \"../../../../components\";\r\nimport {\r\n  TabItemCloseInfo,\r\n  TabSelectedItemInfo\r\n} from \"../../../../components/tab/types\";\r\nimport {\r\n  kbExplorerModel,\r\n  lazyLoadTreeItemsCallback,\r\n  preferencesModel\r\n} from \"../tree-view/models\";\r\nimport {\r\n  insertSpacesAtTheBeginningExceptForTheFirstLine,\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty,\r\n  updateShowcase\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChTabRenderElement> = {};\r\nconst renderedItems = new Set([\"item1\"]);\r\n\r\nconst selectedItemChangeHandler = (\r\n  event: ChTabRenderCustomEvent<TabSelectedItemInfo>\r\n) => {\r\n  renderedItems.add(event.detail.newSelectedId);\r\n  state.selectedId = event.detail.newSelectedId; // TODO: Automatic sync this value in the UI\r\n\r\n  // TODO: Until we support external slots in the ch-flexible-layout-render,\r\n  // this is a hack to update the render of the widget and thus re-render the\r\n  // combo-box updating the displayed items\r\n  updateShowcase();\r\n};\r\n\r\nconst handleItemClose = (event: CustomEvent<TabItemCloseInfo>) => {\r\n  console.log(event.detail);\r\n};\r\n\r\nconst render: ShowcaseRender = designSystem => (\r\n  <div class=\"tab-test-main-wrapper\">\r\n    <fieldset>\r\n      <legend class=\"heading-4\">Simple pages</legend>\r\n\r\n      <ch-tab-render\r\n        class=\"tab\"\r\n        accessibleName={state.accessibleName}\r\n        contain={state.contain}\r\n        closeButton={state.closeButton}\r\n        closeButtonAccessibleName={state.closeButtonAccessibleName}\r\n        tabListPosition={state.tabListPosition}\r\n        disabled={state.disabled}\r\n        dragOutside={state.dragOutside}\r\n        expanded={state.expanded}\r\n        model={state.model}\r\n        overflow={state.overflow}\r\n        selectedId={state.selectedId}\r\n        showCaptions={state.showCaptions}\r\n        showTabListEnd={state.showTabListEnd}\r\n        showTabListStart={state.showTabListStart}\r\n        sortable={state.sortable}\r\n        onItemClose={handleItemClose}\r\n        onSelectedItemChange={selectedItemChangeHandler}\r\n      >\r\n        {renderedItems.has(\"item1\") && (\r\n          <div key=\"item1\" slot=\"item1\">\r\n            Content of the item 1\r\n            <label>\r\n              Any text\r\n              <input type=\"text\" />\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        {renderedItems.has(\"item2\") && (\r\n          <div key=\"item2\" slot=\"item2\">\r\n            Content of the item 2\r\n          </div>\r\n        )}\r\n\r\n        {renderedItems.has(\"item3\") && (\r\n          <div key=\"item3\" slot=\"item3\">\r\n            Content of the item 3\r\n          </div>\r\n        )}\r\n\r\n        {renderedItems.has(\"item4\") && (\r\n          <div key=\"item4\" slot=\"item4\">\r\n            Content of the item 4\r\n          </div>\r\n        )}\r\n      </ch-tab-render>\r\n    </fieldset>\r\n\r\n    <fieldset>\r\n      <legend class=\"heading-4\">Heavy pages</legend>\r\n\r\n      <ch-tab-render\r\n        class=\"tab\"\r\n        accessibleName={state.accessibleName}\r\n        contain={state.contain}\r\n        closeButton={state.closeButton}\r\n        closeButtonAccessibleName={state.closeButtonAccessibleName}\r\n        tabListPosition={state.tabListPosition}\r\n        disabled={state.disabled}\r\n        dragOutside={state.dragOutside}\r\n        expanded={state.expanded}\r\n        model={state.model}\r\n        overflow={state.overflow}\r\n        selectedId={state.selectedId}\r\n        showCaptions={state.showCaptions}\r\n        showTabListEnd={state.showTabListEnd}\r\n        showTabListStart={state.showTabListStart}\r\n        sortable={state.sortable}\r\n        onItemClose={handleItemClose}\r\n        onSelectedItemChange={selectedItemChangeHandler}\r\n      >\r\n        <ch-checkbox\r\n          slot=\"tab-list-start\"\r\n          accessibleName=\"Visibility\"\r\n          class=\"checkbox\"\r\n          caption=\"Option\"\r\n          checkedValue=\"true\"\r\n        ></ch-checkbox>\r\n\r\n        <ch-switch\r\n          slot=\"tab-list-end\"\r\n          accessibleName=\"Visibility\"\r\n          class={designSystem === \"mercury\" ? \"toggle-small\" : \"switch\"}\r\n          checkedValue=\"true\"\r\n          checkedCaption=\"Visibility\"\r\n          unCheckedCaption=\"Visibility\"\r\n        ></ch-switch>\r\n\r\n        <ch-switch\r\n          slot=\"tab-list-end\"\r\n          accessibleName=\"Status\"\r\n          class={designSystem === \"mercury\" ? \"toggle-small\" : \"switch\"}\r\n          checkedValue=\"true\"\r\n          checkedCaption=\"Status\"\r\n          unCheckedCaption=\"Status\"\r\n        ></ch-switch>\r\n\r\n        {renderedItems.has(\"item1\") && (\r\n          <ch-tree-view-render\r\n            class=\"tree-view tree-view-secondary\"\r\n            slot=\"item1\"\r\n            showLines=\"last\"\r\n            model={kbExplorerModel}\r\n            lazyLoadTreeItemsCallback={lazyLoadTreeItemsCallback}\r\n          ></ch-tree-view-render>\r\n        )}\r\n\r\n        {renderedItems.has(\"item2\") && (\r\n          <ch-tree-view-render\r\n            class=\"tree-view tree-view-secondary\"\r\n            slot=\"item2\"\r\n            showLines=\"last\"\r\n            model={preferencesModel}\r\n            lazyLoadTreeItemsCallback={lazyLoadTreeItemsCallback}\r\n          ></ch-tree-view-render>\r\n        )}\r\n\r\n        {renderedItems.has(\"item3\") && (\r\n          <div slot=\"item3\">Content of the item 3</div>\r\n        )}\r\n\r\n        {renderedItems.has(\"item4\") && (\r\n          <div slot=\"item4\">Content of the item 4</div>\r\n        )}\r\n      </ch-tab-render>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChTabRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Simple Model 1\", value: simpleModel1 },\r\n            { caption: \"Simple Model 2\", value: simpleModel2 },\r\n            { caption: \"Close Button Model\", value: closeButtonModel },\r\n            { caption: \"Disabled Model 1\", value: disabledModel1 },\r\n            { caption: \"Disabled Model 2\", value: disabledModel2 },\r\n            { caption: \"Disabled Model 3\", value: disabledModel3 },\r\n            { caption: \"Disabled Model 4\", value: disabledModel4 }\r\n          ],\r\n          value: simpleModel1\r\n        },\r\n        {\r\n          id: \"selectedId\",\r\n          caption: \"Selected Id\",\r\n          value: \"item1\",\r\n          type: \"string\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"tabListPosition\",\r\n          caption: \"Tab List Position\",\r\n          value: \"block-start\",\r\n          values: [\r\n            { caption: \"Block Start\", value: \"block-start\" },\r\n            { caption: \"Block End\", value: \"block-end\" },\r\n            { caption: \"Inline Start\", value: \"inline-start\" },\r\n            { caption: \"Inline End\", value: \"inline-end\" }\r\n          ],\r\n          render: \"radio-group\",\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"showTabListStart\",\r\n          caption: \"Show Tab List Start\",\r\n          type: \"boolean\",\r\n          value: false\r\n        },\r\n        {\r\n          id: \"showTabListEnd\",\r\n          caption: \"Show Tab List End\",\r\n          type: \"boolean\",\r\n          value: false\r\n        },\r\n        {\r\n          id: \"contain\",\r\n          caption: \"Contain\",\r\n          value: \"none\",\r\n          values: [\r\n            { caption: \"style\", value: \"style\" },\r\n            { caption: \"none\", value: \"none\" },\r\n            { caption: \"size\", value: \"size\" },\r\n            { caption: \"inline-size\", value: \"inline-size\" },\r\n            { caption: \"layout\", value: \"layout\" },\r\n            { caption: \"paint\", value: \"paint\" },\r\n            { caption: \"content\", value: \"content\" },\r\n            { caption: \"strict\", value: \"strict\" }\r\n          ],\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"overflow\",\r\n          caption: \"Overflow\",\r\n          value: \"visible\",\r\n          values: [\r\n            { caption: \"visible\", value: \"visible\" },\r\n            { caption: \"hidden\", value: \"hidden\" },\r\n            { caption: \"clip\", value: \"clip\" },\r\n            { caption: \"scroll\", value: \"scroll\" },\r\n            { caption: \"auto\", value: \"auto\" },\r\n            { caption: \"visible hidden\", value: \"visible hidden\" },\r\n            { caption: \"visible clip\", value: \"visible clip\" },\r\n            { caption: \"visible scroll\", value: \"visible scroll\" },\r\n            { caption: \"visible auto\", value: \"visible auto\" },\r\n            { caption: \"hidden visible\", value: \"hidden visible\" },\r\n            { caption: \"hidden clip\", value: \"hidden clip\" },\r\n            { caption: \"hidden scroll\", value: \"hidden scroll\" },\r\n            { caption: \"hidden auto\", value: \"hidden auto\" },\r\n            { caption: \"clip visible\", value: \"clip visible\" },\r\n            { caption: \"clip hidden\", value: \"clip hidden\" },\r\n            { caption: \"clip scroll\", value: \"clip scroll\" },\r\n            { caption: \"clip auto\", value: \"clip auto\" },\r\n            { caption: \"auto visible\", value: \"auto visible\" },\r\n            { caption: \"auto hidden\", value: \"auto hidden\" },\r\n            { caption: \"auto clip\", value: \"auto clip\" },\r\n            { caption: \"auto scroll\", value: \"auto scroll\" }\r\n          ],\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"accessibleName\",\r\n          caption: \"Accessible Name\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"closeButton\",\r\n          caption: \"Close Button\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"closeButtonAccessibleName\",\r\n          caption: \"Close Button Accessible Name\",\r\n          value: \"Close\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"disabled\",\r\n          caption: \"Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"dragOutside\",\r\n          caption: \"Drag Outside\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expanded\",\r\n          caption: \"Expanded\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showCaptions\",\r\n          caption: \"Show Captions\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"sortable\",\r\n          caption: \"Sortable\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"tabButtonHidden\",\r\n          caption: \"Tab Button Hidden\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTabRenderElement>[] =\r\n  [\r\n    { name: \"accessibleName\", defaultValue: undefined, type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"tab\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"closeButton\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"closeButtonAccessibleName\",\r\n      defaultValue: \"Close\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"contain\", defaultValue: \"none\", type: \"string\" },\r\n    { name: \"direction\", defaultValue: \"block\", type: \"string\" },\r\n    { name: \"disabled\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"dragOutside\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"expanded\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    { name: \"overflow\", defaultValue: \"visible\", type: \"string\" },\r\n    { name: \"selectedId\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"showCaptions\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"sortable\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"tabButtonHidden\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"itemClose\",\r\n      fixed: true,\r\n      value: \"handleItemClose\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"selectedItemChange\",\r\n      fixed: true,\r\n      value: \"handleSelectedItemChange\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"itemDragStart\",\r\n      fixed: true,\r\n      value: \"handleItemDragStart\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nconst lightDOMMarkup = (\r\n  framework: ShowcaseTemplateFrameWork\r\n) => `{renderedItems.has(\"item1\") && (\r\n  <div slot=\"item1\">\r\n    Content of the item 1\r\n    <label>\r\n      Any text\r\n      <input ${showcaseTemplateClassProperty(framework, \"input\")} type=\"text\" />\r\n    </label>\r\n  </div>\r\n)}\r\n\r\n{renderedItems.has(\"item2\") && (\r\n  <div slot=\"item2\">Content of the item 2</div>\r\n)}\r\n\r\n{renderedItems.has(\"item3\") && (\r\n  <div slot=\"item3\">Content of the item 3</div>\r\n)}\r\n\r\n{renderedItems.has(\"item4\") && (\r\n  <div slot=\"item4\">Content of the item 4</div>\r\n)}`;\r\n\r\nconst lightDOMMarkupReact = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"react\"),\r\n  8\r\n);\r\n\r\nconst lightDOMMarkupStencil = insertSpacesAtTheBeginningExceptForTheFirstLine(\r\n  lightDOMMarkup(\"stencil\"),\r\n  10\r\n);\r\n\r\nexport const tabShowcaseStory: ShowcaseStory<HTMLChTabRenderElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithUIModel: {\r\n    uiModel: () => state.model,\r\n    uiModelType: \"TabModel\",\r\n    render: {\r\n      react: () => `<ChTabRender${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcasePropertiesInfo\r\n      )}\r\n      >\r\n        ${lightDOMMarkupReact}\r\n      </ChTabRender>`,\r\n\r\n      stencil: () => `<ch-tab-render${renderShowcaseProperties(\r\n        state,\r\n        \"stencil\",\r\n        showcasePropertiesInfo\r\n      )}\r\n        >\r\n          ${lightDOMMarkupStencil}\r\n        </ch-tab-render>`\r\n    }\r\n  },\r\n  render: render,\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseCustomStory } from \"../types\";\r\n\r\nconst render = () => (\r\n  <iframe src=\"/showcase/pages/tabular-grid.html\" frameborder=\"0\"></iframe>\r\n);\r\n\r\nexport const tabularGridShowcaseStory: ShowcaseCustomStory = {\r\n  render: render\r\n};\r\n","import {\r\n  TabularGridColumnsModel,\r\n  TabularGridModel,\r\n  TabularGridRowItemModel\r\n} from \"../../../../components/tabular-grid-render/types\";\r\n\r\nconst columnsCountry: TabularGridColumnsModel = [\r\n  {\r\n    id: \"code\",\r\n    caption: \"Code\",\r\n    parts: \"iso\"\r\n  },\r\n  {\r\n    id: \"name\",\r\n    caption: \"Name\"\r\n  },\r\n  {\r\n    id: \"population\",\r\n    caption: \"Population\"\r\n  },\r\n  {\r\n    id: \"lang\",\r\n    caption: \"Language\"\r\n  }\r\n];\r\n\r\nconst columnsTreeGrid: TabularGridColumnsModel = [\r\n  {\r\n    id: \"name\",\r\n    caption: \"Name\"\r\n  },\r\n  {\r\n    id: \"type\",\r\n    caption: \"Type\"\r\n  },\r\n  {\r\n    id: \"desc\",\r\n    caption: \"Description\"\r\n  },\r\n  {\r\n    id: \"collection\",\r\n    caption: \"Collection\"\r\n  }\r\n];\r\n\r\nconst columnsPropertyGrid: TabularGridColumnsModel = [\r\n  {\r\n    id: \"name\",\r\n    caption: \"Property\"\r\n  },\r\n  {\r\n    id: \"value\",\r\n    caption: \"Value\"\r\n  }\r\n];\r\n\r\nconst rowCountryAR: TabularGridRowItemModel = {\r\n  id: \"ar\",\r\n  cells: [\r\n    { text: \"AR\" },\r\n    { text: \"Argentina\" },\r\n    { text: \"45.400.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryBO: TabularGridRowItemModel = {\r\n  id: \"bo\",\r\n  cells: [\r\n    { text: \"BO\" },\r\n    { text: \"Bolivia\" },\r\n    { text: \"11.800.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryBR: TabularGridRowItemModel = {\r\n  id: \"br\",\r\n  cells: [\r\n    { text: \"BR\" },\r\n    { text: \"Brasil\" },\r\n    { text: \"212.600.000\" },\r\n    { text: \"Português\" }\r\n  ]\r\n};\r\nconst rowCountryCL: TabularGridRowItemModel = {\r\n  id: \"cl\",\r\n  cells: [\r\n    { text: \"CL\" },\r\n    { text: \"Chile\" },\r\n    { text: \"19.500.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryCO: TabularGridRowItemModel = {\r\n  id: \"co\",\r\n  cells: [\r\n    { text: \"CO\" },\r\n    { text: \"Colombia\" },\r\n    { text: \"38.750.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryEC: TabularGridRowItemModel = {\r\n  id: \"ec\",\r\n  cells: [\r\n    { text: \"EC\" },\r\n    { text: \"Ecuador\" },\r\n    { text: \"17.600.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryPY: TabularGridRowItemModel = {\r\n  id: \"py\",\r\n  cells: [\r\n    { text: \"PY\" },\r\n    { text: \"Paraguay\" },\r\n    { text: \"7.500.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryPE: TabularGridRowItemModel = {\r\n  id: \"pe\",\r\n  cells: [\r\n    { text: \"PE\" },\r\n    { text: \"Perú\" },\r\n    { text: \"32.800.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryUY: TabularGridRowItemModel = {\r\n  id: \"uy\",\r\n  cells: [\r\n    { text: \"UY\" },\r\n    { text: \"Uruguay\" },\r\n    { text: \"3.500.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryVE: TabularGridRowItemModel = {\r\n  id: \"ve\",\r\n  cells: [\r\n    { text: \"VE\" },\r\n    { text: \"Venezuela\" },\r\n    { text: \"28.500.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\n\r\nconst rowCountryCA: TabularGridRowItemModel = {\r\n  id: \"ca\",\r\n  cells: [\r\n    { text: \"CA\" },\r\n    { text: \"Canadá\" },\r\n    { text: \"38.000.000\" },\r\n    { text: \"English\" }\r\n  ]\r\n};\r\nconst rowCountryMX: TabularGridRowItemModel = {\r\n  id: \"mx\",\r\n  cells: [\r\n    { text: \"MX\" },\r\n    { text: \"México\" },\r\n    { text: \"126.000.000\" },\r\n    { text: \"Español\" }\r\n  ]\r\n};\r\nconst rowCountryUS: TabularGridRowItemModel = {\r\n  id: \"us\",\r\n  cells: [\r\n    { text: \"US\" },\r\n    { text: \"Estados Unidos\" },\r\n    { text: \"331.000.000\" },\r\n    { text: \"English\" }\r\n  ]\r\n};\r\n\r\nexport const basicModel: TabularGridModel = {\r\n  columns: columnsCountry,\r\n  rowsets: {\r\n    rows: [\r\n      rowCountryAR,\r\n      rowCountryBO,\r\n      rowCountryBR,\r\n      rowCountryCL,\r\n      rowCountryCO,\r\n      rowCountryEC,\r\n      rowCountryPE,\r\n      rowCountryPY,\r\n      rowCountryUY,\r\n      rowCountryVE\r\n    ]\r\n  }\r\n};\r\n\r\nexport const groupModel: TabularGridModel = {\r\n  columns: columnsCountry,\r\n  rowsets: [\r\n    {\r\n      id: \"america-north\",\r\n      caption: \"América del Norte\",\r\n      rows: [rowCountryCA, rowCountryMX, rowCountryUS]\r\n    },\r\n    {\r\n      id: \"america-south\",\r\n      caption: \"América del Sur\",\r\n      rows: [\r\n        rowCountryAR,\r\n        rowCountryBO,\r\n        rowCountryBR,\r\n        rowCountryCL,\r\n        rowCountryCO,\r\n        rowCountryEC,\r\n        rowCountryPE,\r\n        rowCountryPY,\r\n        rowCountryUY,\r\n        rowCountryVE\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const treeGridModel: TabularGridModel = {\r\n  columns: columnsTreeGrid,\r\n  rowsets: {\r\n    rows: [\r\n      {\r\n        id: \"target\",\r\n        cells: [\r\n          { text: \"Target\" },\r\n          { text: \"\" },\r\n          { text: \"Target\" },\r\n          { text: \"false\" }\r\n        ],\r\n        rows: [\r\n          {\r\n            id: \"target-type\",\r\n            cells: [\r\n              { text: \"TargetType\" },\r\n              { text: \"TargetType, GeneXus.Common.Notifications\" },\r\n              { text: \"Target Type (required)\" },\r\n              { text: \"false\" }\r\n            ]\r\n          },\r\n          {\r\n            id: \"devices\",\r\n            cells: [\r\n              { text: \"Devices\" },\r\n              { text: \"\" },\r\n              { text: \"Devices List\" },\r\n              { text: \"true\" }\r\n            ],\r\n            rows: [\r\n              {\r\n                id: \"device\",\r\n                cells: [\r\n                  { text: \"Device\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" }\r\n                ],\r\n                rows: [\r\n                  {\r\n                    id: \"device-token\",\r\n                    cells: [\r\n                      { text: \"DeviceToken\" },\r\n                      { text: \"Character(500)\" },\r\n                      { text: \"DeviceToken\" },\r\n                      { text: \"false\" }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: \"groups\",\r\n            cells: [\r\n              { text: \"Groups\" },\r\n              { text: \"\" },\r\n              { text: \"Groups\" },\r\n              { text: \"true\" }\r\n            ],\r\n            rows: [\r\n              {\r\n                id: \"group\",\r\n                cells: [\r\n                  { text: \"Group\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" }\r\n                ],\r\n                rows: [\r\n                  {\r\n                    id: \"name\",\r\n                    cells: [\r\n                      { text: \"Name\" },\r\n                      { text: \"Character(100)\" },\r\n                      { text: \"Name\" },\r\n                      { text: \"false\" }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: \"targets\",\r\n            cells: [\r\n              { text: \"Targets\" },\r\n              { text: \"\" },\r\n              { text: \"Targets\" },\r\n              { text: \"true\" }\r\n            ],\r\n            rows: [\r\n              {\r\n                id: \"filter\",\r\n                cells: [\r\n                  { text: \"Filter\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" },\r\n                  { text: \"\" }\r\n                ],\r\n                rows: [\r\n                  {\r\n                    id: \"name\",\r\n                    cells: [\r\n                      { text: \"Name\" },\r\n                      { text: \"Character(100)\" },\r\n                      { text: \"Name\" },\r\n                      { text: \"false\" }\r\n                    ]\r\n                  },\r\n                  {\r\n                    id: \"value\",\r\n                    cells: [\r\n                      { text: \"Value\" },\r\n                      { text: \"Character(100)\" },\r\n                      { text: \"Value\" },\r\n                      { text: \"false\" }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const propertyGridModel: TabularGridModel = {\r\n  columns: columnsPropertyGrid,\r\n  rowsets: [\r\n    {\r\n      rows: [\r\n        {\r\n          id: \"name\",\r\n          cells: [{ text: \"Nombre\" }, { text: \"Productos\" }],\r\n          rows: [\r\n            {\r\n              id: \"english\",\r\n              cells: [{ text: \"English\" }, { text: \"Products\" }]\r\n            },\r\n            {\r\n              id: \"portugues\",\r\n              cells: [{ text: \"Português\" }, { text: \"Produtos\" }]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"redirect\",\r\n          cells: [\r\n            { text: \"Redireccionar a\" },\r\n            { text: \"Tecnologías soportadas\" }\r\n          ]\r\n        },\r\n        {\r\n          id: \"redirect-type\",\r\n          cells: [{ text: \"Tipo de redirección\" }, { text: \"Found\" }]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: \"url\",\r\n      caption: \"Url\",\r\n      rows: [\r\n        {\r\n          id: \"url-friendly\",\r\n          cells: [{ text: \"Url amigable\" }, { text: \"productos\" }],\r\n          rows: [\r\n            {\r\n              id: \"english\",\r\n              cells: [{ text: \"English\" }, { text: \"products\" }]\r\n            },\r\n            {\r\n              id: \"portugues\",\r\n              cells: [{ text: \"Português\" }, { text: \"produtos\" }]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      rowsets: [\r\n        {\r\n          id: \"permalink\",\r\n          caption: \"Permalink\",\r\n          rows: [\r\n            { id: \"id\", cells: [{ text: \"Id\" }, { text: \"Found\" }] },\r\n            {\r\n              id: \"guid\",\r\n              cells: [{ text: \"Guid\" }, { text: \"abcdef-peodfg-293845-3947\" }]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\nimport {\r\n  basicModel,\r\n  groupModel,\r\n  propertyGridModel,\r\n  treeGridModel\r\n} from \"./models\";\r\n\r\nconst state: Partial<HTMLChTabularGridRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-tabular-grid-render model={state.model} theme=\"showcase-tabular-grid\">\r\n    <ch-theme\r\n      model={{\r\n        name: \"showcase-tabular-grid-icons\",\r\n        url: \"https://unpkg.com/@genexus/mercury@0.8.9/dist/bundles/css/base/icons.css\",\r\n        themeBaseUrl: \"https://unpkg.com/@genexus/mercury@0.8.9/dist/\"\r\n      }}\r\n    ></ch-theme>\r\n    <ch-theme\r\n      model={{\r\n        name: \"showcase-tabular-grid\",\r\n        url: \"https://unpkg.com/@genexus/mercury@0.8.9/dist/bundles/css/components/tabular-grid.css\"\r\n      }}\r\n    ></ch-theme>\r\n  </ch-tabular-grid-render>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChTabularGridRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Basic\", value: basicModel },\r\n            { caption: \"Group\", value: groupModel },\r\n            { caption: \"TreeGrid\", value: treeGridModel },\r\n            { caption: \"PropertyGrid\", value: propertyGridModel }\r\n          ],\r\n          value: basicModel\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTabularGridRenderElement>[] =\r\n  [{ name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" }];\r\n\r\nexport const tabularGridRenderShowcaseStory: ShowcaseStory<HTMLChTabularGridRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"TabularGridModel\",\r\n      render: {\r\n        react: () => `<ChTabularGridRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        >\r\n        </ChTabularGridRender>`,\r\n\r\n        stencil: () => `<ch-tabular-grid-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n          >\r\n          </ch-tabular-grid-render>`\r\n      }\r\n    },\r\n    render: render,\r\n    state: state\r\n  };\r\n","import { h } from \"@stencil/core\";\r\nimport { ShowcaseRenderProperties, ShowcaseStory } from \"../types\";\r\n\r\nconst state: Partial<HTMLChTextblockElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-textblock\r\n    autoGrow={state.autoGrow}\r\n    caption={state.caption}\r\n    format={state.format}\r\n    showTooltipOnOverflow={state.showTooltipOnOverflow}\r\n  >\r\n    <ul>\r\n      <li>Item 1</li>\r\n      <li>Item 2</li>\r\n      <li>Item 3</li>\r\n    </ul>\r\n\r\n    <p>\r\n      Some <i>custom</i> <b>HTML</b>\r\n    </p>\r\n\r\n    <h2>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </h2>\r\n\r\n    <b>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </b>\r\n\r\n    <i>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </i>\r\n\r\n    <b>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </b>\r\n\r\n    <i>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </i>\r\n\r\n    <b>\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos\r\n      quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio\r\n      consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n    </b>\r\n  </ch-textblock>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChTextblockElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"caption\",\r\n          caption: \"Caption\",\r\n          value: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n\r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n\r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.\r\n  \r\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Sunt hic quos quia provident odit ad praesentium voluptas! Id aspernatur eum veniam odio consequuntur ea culpa aut unde, reprehenderit fugit perspiciatis.`,\r\n          render: \"textarea\",\r\n          type: \"string\"\r\n        },\r\n        {\r\n          id: \"format\",\r\n          caption: \"Format\",\r\n          value: \"text\",\r\n          type: \"enum\",\r\n          render: \"radio-group\",\r\n          values: [\r\n            { value: \"HTML\", caption: \"HTML\" },\r\n            { value: \"text\", caption: \"Text\" }\r\n          ]\r\n        },\r\n        {\r\n          id: \"autoGrow\",\r\n          caption: \"Auto Grow\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"showTooltipOnOverflow\",\r\n          caption: \"Show Tooltip On Overflow\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nexport const textBlockShowcaseStory: ShowcaseStory<HTMLChTextblockElement> = {\r\n  properties: showcaseRenderProperties,\r\n  render: render,\r\n  state: state\r\n};\r\n","import { forceUpdate, h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  renderShowcaseProperties,\r\n  showcaseTemplateClassProperty\r\n} from \"../utils\";\r\n\r\nconst state: Partial<HTMLChTooltipElement> = {};\r\nlet buttonRef: HTMLButtonElement;\r\n\r\nconst render = () => (\r\n  <div class=\"tooltip-test-main-wrapper\">\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Tooltip using a reference (actionElement property)\r\n      </legend>\r\n\r\n      <button id=\"tooltip-button-1\" class=\"button-primary\" type=\"button\">\r\n        Something\r\n      </button>\r\n\r\n      <ch-tooltip\r\n        class=\"tooltip\"\r\n        actionElement={buttonRef}\r\n        blockAlign={state.blockAlign}\r\n        delay={state.delay}\r\n        inlineAlign={state.inlineAlign}\r\n      >\r\n        Tooltip using a reference (actionElement property)\r\n      </ch-tooltip>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">\r\n        Tooltip inside a button element\r\n      </legend>\r\n\r\n      <button class=\"button-secondary\" type=\"button\">\r\n        Something 2\r\n        <ch-tooltip\r\n          class=\"tooltip\"\r\n          actionElement={null}\r\n          blockAlign={state.blockAlign}\r\n          delay={state.delay}\r\n          inlineAlign={state.inlineAlign}\r\n        >\r\n          Tooltip inside a button element\r\n        </ch-tooltip>\r\n      </button>\r\n    </fieldset>\r\n\r\n    <fieldset class=\"fieldset-test\">\r\n      <legend class=\"heading-4 field-legend-test\">Standalone tooltip</legend>\r\n\r\n      <ch-tooltip\r\n        class=\"tooltip\"\r\n        blockAlign={state.blockAlign}\r\n        delay={state.delay}\r\n        inlineAlign={state.inlineAlign}\r\n      >\r\n        <div slot=\"action\">Standalone tooltip content</div>\r\n        Standalone tooltip\r\n      </ch-tooltip>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChTooltipElement> =\r\n  [\r\n    {\r\n      caption: \"Properties\",\r\n      properties: [\r\n        {\r\n          id: \"blockAlign\",\r\n          caption: \"Block Align\",\r\n          value: \"outside-end\",\r\n          values: [\r\n            { caption: \"Outside start\", value: \"outside-start\" },\r\n            { caption: \"Inside start\", value: \"inside-start\" },\r\n            { caption: \"Center\", value: \"center\" },\r\n            { caption: \"Inside end\", value: \"inside-end\" },\r\n            { caption: \"Outside end\", value: \"outside-end\" }\r\n          ],\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"inlineAlign\",\r\n          caption: \"Inline Align\",\r\n          value: \"center\",\r\n          values: [\r\n            { caption: \"Outside start\", value: \"outside-start\" },\r\n            { caption: \"Inside start\", value: \"inside-start\" },\r\n            { caption: \"Center\", value: \"center\" },\r\n            { caption: \"Inside end\", value: \"inside-end\" },\r\n            { caption: \"Outside end\", value: \"outside-end\" }\r\n          ],\r\n          type: \"enum\"\r\n        },\r\n        {\r\n          id: \"delay\",\r\n          caption: \"Delay\",\r\n          value: 100,\r\n          type: \"number\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\nconst showcaseTooltip1PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTooltipElement>[] =\r\n  [\r\n    { name: \"actionElement\", fixed: true, value: \"button1Ref\", type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"tooltip\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"blockAlign\",\r\n      defaultValue: \"outside-end\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"delay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"inlineAlign\",\r\n      defaultValue: \"center\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nconst showcaseTooltip2PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTooltipElement>[] =\r\n  [\r\n    { name: \"actionElement\", fixed: true, value: \"button2Ref\", type: \"string\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"tooltip\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"blockAlign\",\r\n      defaultValue: \"outside-end\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"delay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"inlineAlign\",\r\n      defaultValue: \"center\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nconst showcaseTooltip3PropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTooltipElement>[] =\r\n  [\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"tooltip\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"blockAlign\",\r\n      defaultValue: \"outside-end\",\r\n      type: \"string\"\r\n    },\r\n    { name: \"delay\", defaultValue: 100, type: \"number\" },\r\n    {\r\n      name: \"inlineAlign\",\r\n      defaultValue: \"center\",\r\n      type: \"string\"\r\n    }\r\n  ];\r\n\r\nexport const tooltipShowcaseStory: ShowcaseStory<HTMLChTooltipElement> = {\r\n  properties: showcaseRenderProperties,\r\n  markupWithoutUIModel: {\r\n    react: () => `<button id=\"tooltip-button-1\" ${showcaseTemplateClassProperty(\r\n      \"react\",\r\n      \"button-primary\"\r\n    )} type=\"button\">\r\n        Something\r\n      </button>\r\n      <ChTooltip${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcaseTooltip1PropertiesInfo\r\n      )}\r\n      >\r\n        Tooltip using a reference (actionElement property)\r\n      </ChTooltip>\r\n\r\n      <button ${showcaseTemplateClassProperty(\r\n        \"react\",\r\n        \"button-secondary\"\r\n      )} type=\"button\">\r\n        Something 2\r\n        <ChTooltip${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcaseTooltip2PropertiesInfo,\r\n          11\r\n        )}\r\n        >\r\n          Tooltip inside a button element\r\n        </ChTooltip>\r\n      </button>\r\n\r\n      <ChTooltip${renderShowcaseProperties(\r\n        state,\r\n        \"react\",\r\n        showcaseTooltip3PropertiesInfo\r\n      )}\r\n      >\r\n        <div slot=\"action\">Standalone tooltip content</div>\r\n        Standalone tooltip\r\n      </ChTooltip>`,\r\n\r\n    stencil:\r\n      () => `<button id=\"tooltip-button-1\" ${showcaseTemplateClassProperty(\r\n        \"stencil\",\r\n        \"button-primary\"\r\n      )} type=\"button\">\r\n          Something\r\n        </button>\r\n        <ch-tooltip${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcaseTooltip1PropertiesInfo\r\n        )}\r\n        >\r\n          Tooltip using a reference (actionElement property)\r\n        </ch-tooltip>\r\n\r\n        <button ${showcaseTemplateClassProperty(\r\n          \"stencil\",\r\n          \"button-secondary\"\r\n        )} type=\"button\">\r\n          Something 2\r\n          <ch-tooltip${renderShowcaseProperties(\r\n            state,\r\n            \"stencil\",\r\n            showcaseTooltip2PropertiesInfo,\r\n            13\r\n          )}\r\n          >\r\n            Tooltip inside a button element\r\n          </ch-tooltip>\r\n        </button>\r\n\r\n        <ch-tooltip${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcaseTooltip3PropertiesInfo\r\n        )}\r\n        >\r\n          <div slot=\"action\">Standalone tooltip content</div>\r\n          Standalone tooltip\r\n        </ch-tooltip>`\r\n  },\r\n  render: render,\r\n  storyDidLoad: () => {\r\n    buttonRef = document.querySelector(\"[id='tooltip-button-1']\");\r\n    forceUpdate(document.querySelector(\"ch-showcase\"));\r\n  },\r\n  state: state\r\n};\r\n","import { h } from \"@stencil/core\";\r\nimport {\r\n  ShowcaseRenderProperties,\r\n  ShowcaseStory,\r\n  ShowcaseTemplatePropertyInfo\r\n} from \"../types\";\r\nimport {\r\n  lazyLargeModel,\r\n  disabledItemsModel,\r\n  eagerLargeModel,\r\n  fileSystemModel,\r\n  kbExplorerModel,\r\n  lazyLoadTreeItemsCallback,\r\n  importObjectsModel,\r\n  simpleModel1,\r\n  simpleModel2,\r\n  checkDroppableZoneCallback,\r\n  dropItemsCallback\r\n} from \"./models\";\r\nimport { renderShowcaseProperties } from \"../utils\";\r\n\r\nconst state: Partial<HTMLChTreeViewRenderElement> = {};\r\n\r\nconst render = () => (\r\n  <ch-tree-view-render\r\n    class=\"tree-view tree-view-secondary\"\r\n    checkbox={state.checkbox}\r\n    checked={state.checked}\r\n    checkDroppableZoneCallback={checkDroppableZoneCallback}\r\n    dragDisabled={state.dragDisabled}\r\n    dropDisabled={state.dropDisabled}\r\n    dropItemsCallback={dropItemsCallback}\r\n    dropMode={state.dropMode}\r\n    editableItems={state.editableItems}\r\n    expandOnClick={state.expandOnClick}\r\n    expandableButton={state.expandableButton}\r\n    filter={state.filter}\r\n    filterDebounce={state.filterDebounce}\r\n    filterList={state.filterList}\r\n    filterOptions={state.filterOptions}\r\n    filterType={state.filterType}\r\n    lazyLoadTreeItemsCallback={lazyLoadTreeItemsCallback}\r\n    model={state.model}\r\n    modifyItemCaptionCallback={state.modifyItemCaptionCallback}\r\n    multiSelection={state.multiSelection}\r\n    showLines={state.showLines}\r\n    sortItemsCallback={state.sortItemsCallback}\r\n    toggleCheckboxes={state.toggleCheckboxes}\r\n  ></ch-tree-view-render>\r\n);\r\n\r\nconst showcaseRenderProperties: ShowcaseRenderProperties<HTMLChTreeViewRenderElement> =\r\n  [\r\n    {\r\n      caption: \"Models\",\r\n      properties: [\r\n        {\r\n          id: \"model\",\r\n          accessibleName: \"Model\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"KB Explorer\", value: kbExplorerModel },\r\n            { caption: \"Import Objects\", value: importObjectsModel },\r\n            { caption: \"File System\", value: fileSystemModel },\r\n            { caption: \"Disabled items\", value: disabledItemsModel },\r\n            { caption: \"Simple model 1\", value: simpleModel1 },\r\n            { caption: \"Simple model 2\", value: simpleModel2 },\r\n            { caption: \"Lazy Large Tree (10x20x20)\", value: lazyLargeModel },\r\n            { caption: \"Eager Large Tree (10x20x20)\", value: eagerLargeModel }\r\n          ],\r\n          value: kbExplorerModel\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Properties\",\r\n      columns: 2,\r\n      properties: [\r\n        { id: \"checkbox\", caption: \"Checkbox\", value: false, type: \"boolean\" },\r\n        { id: \"checked\", caption: \"Checked\", value: false, type: \"boolean\" },\r\n\r\n        {\r\n          id: \"dragDisabled\",\r\n          caption: \"Drag Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"dropDisabled\",\r\n          caption: \"Drop Disabled\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"editableItems\",\r\n          caption: \"Editable Items\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expandOnClick\",\r\n          caption: \"Expand on Click\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"multiSelection\",\r\n          caption: \"Multi Selection\",\r\n          value: true,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"toggleCheckboxes\",\r\n          columnSpan: 2,\r\n          caption: \"Toggle Checkboxes\",\r\n          value: false,\r\n          type: \"boolean\"\r\n        },\r\n        {\r\n          id: \"expandableButton\",\r\n          caption: \"Expandable Button\",\r\n          value: \"decorative\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Action\", value: \"action\" },\r\n            { caption: \"Decorative\", value: \"decorative\" },\r\n            { caption: \"No\", value: \"no\" }\r\n          ]\r\n        },\r\n        {\r\n          id: \"dropMode\",\r\n          caption: \"Drop Mode\",\r\n          value: \"above\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"Above\", value: \"above\" },\r\n            { caption: \"Before and After\", value: \"before-and-after\" },\r\n            { caption: \"All\", value: \"all\" }\r\n          ]\r\n        },\r\n        {\r\n          id: \"showLines\",\r\n          columnSpan: 2,\r\n          caption: \"Lines\",\r\n          value: \"all\",\r\n          render: \"radio-group\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"All\", value: \"all\" },\r\n            { caption: \"Last\", value: \"last\" },\r\n            { caption: \"None\", value: \"none\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      caption: \"Filters\",\r\n      columns: 2,\r\n      properties: [\r\n        {\r\n          id: \"filterType\",\r\n          caption: \"Filter Type\",\r\n          value: \"none\",\r\n          type: \"enum\",\r\n          values: [\r\n            { caption: \"None\", value: \"none\" },\r\n            { caption: \"Caption\", value: \"caption\" },\r\n            { caption: \"Metadata\", value: \"metadata\" },\r\n            { caption: \"Checked\", value: \"checked\" },\r\n            { caption: \"Unchecked\", value: \"unchecked\" },\r\n            { caption: \"List\", value: \"list\" }\r\n          ]\r\n        },\r\n        {\r\n          id: \"filterDebounce\",\r\n          caption: \"Filter Debounce\",\r\n          value: 250,\r\n          type: \"number\"\r\n        },\r\n        {\r\n          id: \"filter\",\r\n          columnSpan: 2,\r\n          caption: \"Filter\",\r\n          value: undefined,\r\n          type: \"string\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n// Hide matches and show non-matches\r\n\r\nconst showcasePropertiesInfo: ShowcaseTemplatePropertyInfo<HTMLChTreeViewRenderElement>[] =\r\n  [\r\n    { name: \"checkbox\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"checked\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"class\",\r\n      fixed: true,\r\n      value: \"tree-view tree-view-secondary\",\r\n      type: \"string\"\r\n    },\r\n    {\r\n      name: \"checkDroppableZoneCallback\",\r\n      fixed: true,\r\n      value: \"checkDroppableZoneCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"dragDisabled\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"dropDisabled\", defaultValue: true, type: \"boolean\" },\r\n    {\r\n      name: \"dropItemsCallback\",\r\n      fixed: true,\r\n      value: \"dropItemsCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"dropMode\", defaultValue: \"above\", type: \"string\" },\r\n    { name: \"editableItems\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"expandableButton\", defaultValue: \"decorative\", type: \"string\" },\r\n    { name: \"expandOnClick\", defaultValue: true, type: \"boolean\" },\r\n    { name: \"filter\", defaultValue: undefined, type: \"string\" },\r\n    { name: \"filterDebounce\", defaultValue: 250, type: \"number\" },\r\n    // TODO: filterList and filterOptions\r\n    { name: \"filterType\", defaultValue: \"none\", type: \"string\" },\r\n    {\r\n      name: \"getImagePathCallback\",\r\n      fixed: true,\r\n      value: \"getImagePathCallback\",\r\n      type: \"function\"\r\n    },\r\n    {\r\n      name: \"lazyLoadTreeItemsCallback\",\r\n      fixed: true,\r\n      value: \"lazyLoadTreeItemsCallback\",\r\n      type: \"function\"\r\n    },\r\n    {\r\n      name: \"modifyItemCaptionCallback\",\r\n      fixed: true,\r\n      value: \"modifyItemCaptionCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"multiSelection\", defaultValue: false, type: \"boolean\" },\r\n    { name: \"model\", fixed: true, value: \"controlUIModel\", type: \"function\" },\r\n    { name: \"showLines\", defaultValue: \"none\", type: \"string\" },\r\n    {\r\n      name: \"sortItemsCallback\",\r\n      fixed: true,\r\n      value: \"sortItemsCallback\",\r\n      type: \"function\"\r\n    },\r\n    { name: \"toggleCheckboxes\", defaultValue: false, type: \"boolean\" },\r\n    {\r\n      name: \"checkedItemsChange\",\r\n      fixed: true,\r\n      value: \"handleCheckedItemsChange\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"itemContextmenu\",\r\n      fixed: true,\r\n      value: \"handleItemContextmenu\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"itemOpenReference\",\r\n      fixed: true,\r\n      value: \"handleItemOpenReference\",\r\n      type: \"event\"\r\n    },\r\n    {\r\n      name: \"selectedItemsChange\",\r\n      fixed: true,\r\n      value: \"handleSelectedItemsChange\",\r\n      type: \"event\"\r\n    }\r\n  ];\r\n\r\nexport const treeViewShowcaseStory: ShowcaseStory<HTMLChTreeViewRenderElement> =\r\n  {\r\n    properties: showcaseRenderProperties,\r\n    render: render,\r\n    markupWithUIModel: {\r\n      uiModel: () => state.model,\r\n      uiModelType: \"TreeViewModel\",\r\n      render: {\r\n        react: () => `<ChTreeViewRender${renderShowcaseProperties(\r\n          state,\r\n          \"react\",\r\n          showcasePropertiesInfo\r\n        )}\r\n      ></ChTreeViewRender>`,\r\n\r\n        stencil: () => `<ch-tree-view-render${renderShowcaseProperties(\r\n          state,\r\n          \"stencil\",\r\n          showcasePropertiesInfo\r\n        )}\r\n        ></ch-tree-view-render>`\r\n      }\r\n    },\r\n    state: state\r\n  };\r\n","import { accordionShowcaseStory } from \"./accordion/accordion.showcase\";\r\nimport { actionGroupShowcaseStory } from \"./action-group/action-group.showcase\";\r\nimport { actionListShowcaseStory } from \"./action-list/action-list.showcase\";\r\nimport { actionMenuShowcaseStory } from \"./action-menu/action-menu.showcase\";\r\nimport { barcodeScannerShowcaseStory } from \"./barcode-scanner/barcode-scanner.showcase\";\r\nimport { chatShowcaseStory } from \"./chat/chat.showcase\";\r\nimport { checkboxShowcaseStory } from \"./checkbox/checkbox.showcase\";\r\nimport { codeDiffEditorShowcaseStory } from \"./code-diff-editor/code-diff-editor.showcase\";\r\nimport { codeEditorShowcaseStory } from \"./code-editor/code-editor.showcase\";\r\nimport { codeShowcaseStory } from \"./code/code.showcase\";\r\nimport { comboBoxShowcaseStory } from \"./combo-box/combo-box.showcase\";\r\nimport { dialogShowcaseStory } from \"./dialog/dialog.showcase\";\r\nimport { editShowcaseStory } from \"./edit/edit.showcase\";\r\nimport { flexibleLayoutShowcaseStory } from \"./flexible-layout/flexible-layout.showcase\";\r\nimport { imageShowcaseStory } from \"./image/image.showcase\";\r\nimport { layoutSplitterShowcaseStory } from \"./layout-splitter/layout-splitter.showcase\";\r\nimport { markdownShowcaseStory } from \"./markdown/markdown.showcase\";\r\nimport { navigationListShowcaseStory } from \"./navigation-list/navigation-list.showcase\";\r\nimport { paginatorShowcaseStory } from \"./paginator/paginator.showcase\";\r\nimport { popoverShowcaseStory } from \"./popover/popover.showcase\";\r\nimport { qrShowcaseStory } from \"./qr/qr.showcase\";\r\nimport { radioGroupShowcaseStory } from \"./radio-group/radio-group.showcase\";\r\nimport { segmentedControlShowcaseStory } from \"./segmented-control/segmented-control.showcase\";\r\nimport { shortcutsShowcaseStory } from \"./shortcuts/shortcuts.showcase\";\r\nimport { sidebarShowcaseStory } from \"./sidebar/sidebar.showcase\";\r\nimport { sliderShowcaseStory } from \"./slider/slider.showcase\";\r\nimport { switchShowcaseStory } from \"./switch/switch.showcase\";\r\nimport { tabShowcaseStory } from \"./tab/tab.showcase\";\r\nimport { tabularGridShowcaseStory } from \"./tabular-grid/tabular-grid.showcase\";\r\nimport { tabularGridRenderShowcaseStory } from \"./tabular-grid-render/tabular-grid-render.showcase\";\r\nimport { textBlockShowcaseStory } from \"./textblock/textblock.showcase\";\r\nimport { tooltipShowcaseStory } from \"./tooltip/tooltip.showcase\";\r\nimport { treeViewShowcaseStory } from \"./tree-view/tree-view.showcase\";\r\nimport { ChameleonCustomStories, ChameleonStories } from \"./types\";\r\n\r\nexport const showcaseStories = {\r\n  accordion: accordionShowcaseStory,\r\n  \"action-group\": actionGroupShowcaseStory,\r\n  \"action-menu\": actionMenuShowcaseStory,\r\n  \"action-list\": actionListShowcaseStory,\r\n  \"barcode-scanner\": barcodeScannerShowcaseStory,\r\n  checkbox: checkboxShowcaseStory,\r\n  chat: chatShowcaseStory,\r\n  code: codeShowcaseStory,\r\n  \"combo-box\": comboBoxShowcaseStory,\r\n  dialog: dialogShowcaseStory,\r\n  edit: editShowcaseStory,\r\n  image: imageShowcaseStory,\r\n  \"layout-splitter\": layoutSplitterShowcaseStory,\r\n  \"navigation-list\": navigationListShowcaseStory,\r\n  popover: popoverShowcaseStory,\r\n  qr: qrShowcaseStory,\r\n  \"radio-group\": radioGroupShowcaseStory,\r\n  \"segmented-control\": segmentedControlShowcaseStory,\r\n  sidebar: sidebarShowcaseStory,\r\n  slider: sliderShowcaseStory,\r\n  switch: switchShowcaseStory,\r\n  tab: tabShowcaseStory,\r\n  \"tabular-grid-render\": tabularGridRenderShowcaseStory,\r\n  textblock: textBlockShowcaseStory,\r\n  tooltip: tooltipShowcaseStory,\r\n  \"tree-view\": treeViewShowcaseStory\r\n} as const satisfies ChameleonStories;\r\n\r\nexport const showcaseCustomStories = {\r\n  \"code-editor\": codeEditorShowcaseStory,\r\n  \"code-diff-editor\": codeDiffEditorShowcaseStory,\r\n  \"flexible-layout\": flexibleLayoutShowcaseStory,\r\n  \"markdown-viewer\": markdownShowcaseStory,\r\n  paginator: paginatorShowcaseStory,\r\n  shortcuts: shortcutsShowcaseStory,\r\n  \"tabular-grid\": tabularGridShowcaseStory\r\n} as const satisfies ChameleonCustomStories;\r\n"],"mappings":"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"}