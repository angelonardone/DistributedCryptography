{"version":3,"names":["tooltipCss","ChTooltipStyle0","LISTENER_CONFIG","passive","ARIA_DESCRIBED_BY","ARIA_LABEL","TOOLTIP","autoId","ChTooltip","tooltipId","addListenersForTheActionElement","actualActionElement","innerActionRef","visibleChanged","isVisible","this","removeDisplayListeners","addListenersToHidePopover","removeHideListeners","addListenersToDisplayPopover","actionElementChanged","removeAllListeners","removeAriaLabelInActionElement","removeAriaDescribedByInActionElement","actionElementAccessibleNameChanged","actionElementAccessibleName","addAriaLabelToTheActionElement","handleEnter","visible","handleLeave","focusedWithFocusVisible","focusComposedPath","getActionElement","matches","addEventListener","removeEventListener","addAriaDescribedByToTheActionElement","setAttribute","removeAttribute","actionElement","el","parentElement","actionIsInsideShadow","undefined","connectedCallback","componentDidRender","disconnectedCallback","render","actionInsideShadow","h","Host","key","id","role","part","type","ref","name","style","delay","blockAlign","closeOnClickOutside","show","inlineAlign","mode","onPopoverClosed"],"sources":["src/components/tooltip/tooltip.scss?tag=ch-tooltip&encapsulation=shadow","src/components/tooltip/tooltip.tsx"],"sourcesContent":["@import \"../../common/_base\";\r\n\r\n@include button-reset();\r\n@include box-sizing();\r\n\r\n:host {\r\n  /**\r\n   * @prop --ch-tooltip-separation:\r\n   * Specifies the separation between the action and the displayed tooltip.\r\n   * @default 0px\r\n   */\r\n  --ch-tooltip-separation: 0px;\r\n\r\n  /**\r\n    * @prop --ch-tooltip-separation-x:\r\n    * Specifies the separation between the action and the tooltip displayed\r\n    * on the x-axis.\r\n    * @default var(--ch-tooltip-separation)\r\n    */\r\n  --ch-tooltip-separation-x: var(--ch-tooltip-separation);\r\n\r\n  /**\r\n    * @prop --ch-tooltip-separation-y:\r\n    * Specifies the separation between the action and the tooltip displayed\r\n    * on the y-axis.\r\n    * @default var(--ch-tooltip-separation)\r\n    */\r\n  --ch-tooltip-separation-y: var(--ch-tooltip-separation);\r\n\r\n  display: contents;\r\n}\r\n\r\nch-popover {\r\n  --ch-popover-separation-x: var(--ch-tooltip-separation-x);\r\n  --ch-popover-separation-y: var(--ch-tooltip-separation-y);\r\n  animation: delay-visibility var(--ch-tooltip-delay) linear;\r\n\r\n  &:not(.hydrated) {\r\n    display: none;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes delay-visibility {\r\n  0%,\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n// ch-tooltip {\r\n//   --ch-tooltip-separation: 12px;\r\n//   --ch-tooltip-separation-x: var(--ch-tooltip-separation);\r\n//   --ch-tooltip-separation-y: var(--ch-tooltip-separation);\r\n//   --ch-tooltip-arrow-size: 10px;\r\n//   --ch-tooltip-based: calc(1px - var(--ch-tooltip-arrow-size));\r\n//   --ch-tooltip-centered: calc(50% - var(--ch-tooltip-arrow-size) / 2);\r\n//   --ch-tooltip-75: calc(75% - var(--ch-tooltip-arrow-size) / 2);\r\n//   --ch-tooltip-25: calc(25% - var(--ch-tooltip-arrow-size) / 2);\r\n//   // display: flex;\r\n//   // position: relative;\r\n//   // width: 100%;\r\n//   // height: 100%;\r\n// }\r\n\r\n// // - - - - - - - - - - - - - - - -\r\n// //           Separation\r\n// // - - - - - - - - - - - - - - - -\r\n// ch-window[y-align=\"outside-start\"] {\r\n//   --ch-window-separation: var(--ch-tooltip-separation-y);\r\n//   --ch-window-separation-y: calc(var(--ch-tooltip-separation-y) * -1);\r\n// }\r\n\r\n// ch-window[y-align=\"outside-end\"] {\r\n//   --ch-window-separation: var(--ch-tooltip-separation-y);\r\n//   --ch-window-separation-y: var(--ch-tooltip-separation-y);\r\n// }\r\n\r\n// ch-window[x-align=\"outside-start\"]\r\n//   + :not(ch-window[y-align=\"outside-start\"], ch-window[y-align=\"outside-end\"]) {\r\n//   --ch-window-separation: var(--ch-tooltip-separation-x);\r\n//   --ch-window-separation-x: calc(var(--ch-tooltip-separation-x) * -1);\r\n// }\r\n\r\n// ch-window[x-align=\"outside-end\"]\r\n//   + :not(ch-window[y-align=\"outside-start\"], ch-window[y-align=\"outside-end\"]) {\r\n//   --ch-window-separation: var(--ch-tooltip-separation-x);\r\n//   --ch-window-separation-x: var(--ch-tooltip-separation-x);\r\n// }\r\n\r\n// // - - - - - - - - - - - - - - - -\r\n// //           Tooltip Arrow\r\n// // - - - - - - - - - - - - - - - -\r\n// ch-window[y-align=\"outside-start\"],\r\n// ch-window[y-align=\"outside-start\"][x-align=\"outside-start\"],\r\n// ch-window[y-align=\"outside-start\"][x-align=\"outside-end\"] {\r\n//   .tooltip-content::after {\r\n//     clip-path: polygon(0 0, 50% 100%, 100% 0);\r\n//     inset-block-end: var(--ch-tooltip-based);\r\n//   }\r\n//   &[x-align=\"outside-start\"] {\r\n//     .tooltip-content::after {\r\n//       inset-inline-end: 0;\r\n//     }\r\n//   }\r\n//   &[x-align=\"outside-end\"] {\r\n//     .tooltip-content::after {\r\n//       inset-inline-start: 0;\r\n//     }\r\n//   }\r\n// }\r\n\r\n// ch-window[y-align=\"outside-end\"],\r\n// ch-window[y-align=\"outside-end\"][x-align=\"outside-end\"],\r\n// ch-window[y-align=\"outside-end\"][x-align=\"outside-start\"] {\r\n//   .tooltip-content::after {\r\n//     clip-path: polygon(50% 0, 100% 100%, 0 100%);\r\n//     inset-block-start: var(--ch-tooltip-based);\r\n//   }\r\n//   &[x-align=\"outside-start\"] {\r\n//     .tooltip-content::after {\r\n//       inset-inline-end: 0;\r\n//     }\r\n//   }\r\n//   &[x-align=\"outside-end\"] {\r\n//     .tooltip-content::after {\r\n//       inset-inline-start: 0;\r\n//     }\r\n//   }\r\n// }\r\n\r\n// ch-window[x-align=\"outside-start\"] {\r\n//   .tooltip-content::after {\r\n//     clip-path: polygon(100% 50%, 0 0, 0 100%);\r\n//     inset-inline-end: var(--ch-tooltip-based);\r\n//   }\r\n// }\r\n\r\n// ch-window[x-align=\"outside-end\"] {\r\n//   .tooltip-content::after {\r\n//     clip-path: polygon(100% 0, 0 50%, 100% 100%);\r\n//     inset-inline-start: var(--ch-tooltip-based);\r\n//   }\r\n// }\r\n\r\n// ch-window[x-align=\"center\"] {\r\n//   .tooltip-content::after {\r\n//     inset-inline-start: var(--ch-tooltip-centered);\r\n//   }\r\n// }\r\n// ch-window[x-align=\"inside-start\"] {\r\n//   .tooltip-content::after {\r\n//     inset-inline-start: var(--ch-tooltip-75);\r\n//   }\r\n// }\r\n// ch-window[x-align=\"inside-end\"] {\r\n//   .tooltip-content::after {\r\n//     inset-inline-start: var(--ch-tooltip-25);\r\n//   }\r\n// }\r\n\r\n// ch-window[y-align=\"inside-start\"] {\r\n//   .tooltip-content::after {\r\n//     inset-block-start: var(--ch-tooltip-75);\r\n//   }\r\n// }\r\n// ch-window[y-align=\"center\"] {\r\n//   .tooltip-content::after {\r\n//     inset-block-start: var(--ch-tooltip-centered);\r\n//   }\r\n// }\r\n// ch-window[y-align=\"inside-end\"] {\r\n//   .tooltip-content::after {\r\n//     inset-block-start: var(--ch-tooltip-25);\r\n//   }\r\n// }\r\n\r\n// .tooltip-content {\r\n//   &::after {\r\n//     content: \" \";\r\n//     position: absolute;\r\n//     background-color: inherit;\r\n//     width: var(--ch-tooltip-arrow-size);\r\n//     height: var(--ch-tooltip-arrow-size);\r\n//   }\r\n// }\r\n","import {\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  State,\r\n  Watch\r\n} from \"@stencil/core\";\r\nimport { ChPopoverAlign } from \"../popover/types\";\r\nimport { focusComposedPath } from \"../common/helpers\";\r\n\r\nconst LISTENER_CONFIG = {\r\n  passive: true\r\n} as const satisfies AddEventListenerOptions;\r\n\r\nconst ARIA_DESCRIBED_BY = \"aria-describedby\";\r\nconst ARIA_LABEL = \"aria-label\";\r\nconst TOOLTIP = \"tooltip\";\r\n\r\nlet autoId = 0;\r\n\r\n@Component({\r\n  tag: \"ch-tooltip\",\r\n  styleUrl: \"tooltip.scss\",\r\n  shadow: true\r\n})\r\nexport class ChTooltip implements ComponentInterface {\r\n  #tooltipId: string;\r\n\r\n  #addListenersForTheActionElement = true;\r\n  #actualActionElement: HTMLButtonElement;\r\n\r\n  // Refs\r\n  #innerActionRef: HTMLButtonElement | undefined;\r\n\r\n  @Element() el!: HTMLChTooltipElement;\r\n\r\n  /**\r\n   * Specifies if the popover is visible.\r\n   */\r\n  @State() visible = false;\r\n  @Watch(\"visible\")\r\n  visibleChanged(isVisible: boolean) {\r\n    if (isVisible) {\r\n      this.#removeDisplayListeners();\r\n      this.#addListenersToHidePopover();\r\n    } else {\r\n      this.#removeHideListeners();\r\n      this.#addListenersToDisplayPopover();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Specifies a reference for the action that opens the tooltip.\r\n   *\r\n   * If `undefined`, a button on the tooltip will be rendered and the slot\r\n   * \"action\" can be used to display the content of the action.\r\n   *\r\n   * If `null`, the parentElement will be used as the action reference.\r\n   */\r\n  @Prop() readonly actionElement?: HTMLButtonElement | undefined | null;\r\n  @Watch(\"actionElement\")\r\n  actionElementChanged() {\r\n    this.#removeAllListeners();\r\n    this.#addListenersForTheActionElement = true;\r\n\r\n    // We have to remove the aria-describedby and aria-label first, because the\r\n    // actionElement can transition from null to the actual parentElement,\r\n    // which in the end is the \"same action element\"\r\n    this.#removeAriaLabelInActionElement();\r\n    this.#removeAriaDescribedByInActionElement();\r\n  }\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the actionElement. This property is necessary to provide a label when\r\n   * the tooltip is not displayed.\r\n   */\r\n  @Prop() readonly actionElementAccessibleName: string | undefined;\r\n  @Watch(\"actionElementAccessibleName\")\r\n  actionElementAccessibleNameChanged() {\r\n    if (this.actionElementAccessibleName) {\r\n      this.#addAriaLabelToTheActionElement();\r\n    } else {\r\n      this.#removeAriaLabelInActionElement();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Specifies the block alignment of the window.\r\n   */\r\n  @Prop() readonly blockAlign: ChPopoverAlign = \"outside-end\";\r\n\r\n  /**\r\n   * Specifies the delay (in ms) for the tooltip to be displayed.\r\n   */\r\n  @Prop() readonly delay: number = 100;\r\n\r\n  /**\r\n   * Specifies the inline alignment of the window.\r\n   */\r\n  @Prop() readonly inlineAlign: ChPopoverAlign = \"center\";\r\n\r\n  #handleEnter = () => {\r\n    this.visible = true;\r\n  };\r\n\r\n  #handleLeave = () => {\r\n    const focusedWithFocusVisible =\r\n      focusComposedPath()[0] === this.#getActionElement() &&\r\n      this.#actualActionElement.matches(\":focus-visible\");\r\n\r\n    // Only remove the tooltip if the action element is not focused with\r\n    // \"focus-visible\". If focused, \"mouseleave\" should not dismiss the tooltip\r\n    if (!focusedWithFocusVisible) {\r\n      this.visible = false;\r\n    }\r\n  };\r\n\r\n  #addListenersToDisplayPopover = () => {\r\n    this.#actualActionElement.addEventListener(\r\n      \"focus\",\r\n      this.#handleEnter,\r\n      LISTENER_CONFIG\r\n    );\r\n    this.#actualActionElement.addEventListener(\r\n      \"mouseenter\",\r\n      this.#handleEnter,\r\n      LISTENER_CONFIG\r\n    );\r\n  };\r\n\r\n  #addListenersToHidePopover = () => {\r\n    this.#actualActionElement.addEventListener(\r\n      \"focusout\",\r\n      this.#handleLeave,\r\n      LISTENER_CONFIG\r\n    );\r\n    this.#actualActionElement.addEventListener(\r\n      \"mouseleave\",\r\n      this.#handleLeave,\r\n      LISTENER_CONFIG\r\n    );\r\n  };\r\n\r\n  #removeDisplayListeners = () => {\r\n    this.#actualActionElement?.removeEventListener(\"focus\", this.#handleEnter);\r\n    this.#actualActionElement?.removeEventListener(\r\n      \"mouseenter\",\r\n      this.#handleEnter\r\n    );\r\n  };\r\n\r\n  #removeHideListeners = () => {\r\n    this.#actualActionElement?.removeEventListener(\r\n      \"focusout\",\r\n      this.#handleLeave\r\n    );\r\n    this.#actualActionElement?.removeEventListener(\r\n      \"mouseleave\",\r\n      this.#handleLeave\r\n    );\r\n  };\r\n\r\n  #addAriaDescribedByToTheActionElement = () =>\r\n    this.#actualActionElement?.setAttribute(ARIA_DESCRIBED_BY, this.#tooltipId);\r\n\r\n  #addAriaLabelToTheActionElement = () => {\r\n    if (this.actionElementAccessibleName) {\r\n      this.#actualActionElement?.setAttribute(\r\n        ARIA_LABEL,\r\n        this.actionElementAccessibleName\r\n      );\r\n    }\r\n  };\r\n\r\n  #removeAriaDescribedByInActionElement = () =>\r\n    this.#actualActionElement?.removeAttribute(ARIA_DESCRIBED_BY);\r\n\r\n  #removeAriaLabelInActionElement = () =>\r\n    this.#actualActionElement?.removeAttribute(ARIA_LABEL);\r\n\r\n  #getActionElement = (): HTMLButtonElement => {\r\n    if (this.actionElement === null) {\r\n      return this.el.parentElement as HTMLButtonElement;\r\n    }\r\n\r\n    return this.actionElement ?? this.#innerActionRef;\r\n  };\r\n\r\n  #removeAllListeners = () => {\r\n    this.#removeDisplayListeners();\r\n    this.#removeHideListeners();\r\n  };\r\n\r\n  #actionIsInsideShadow = () => this.actionElement === undefined;\r\n\r\n  connectedCallback() {\r\n    this.#tooltipId ??= `ch-tooltip-${autoId++}`;\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.#addListenersForTheActionElement) {\r\n      this.#addListenersForTheActionElement = false;\r\n      this.#actualActionElement = this.#getActionElement();\r\n\r\n      this.#addListenersToDisplayPopover();\r\n      this.#addAriaDescribedByToTheActionElement();\r\n      this.#addAriaLabelToTheActionElement();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#removeAllListeners();\r\n    this.#removeAriaDescribedByInActionElement();\r\n    this.#removeAriaLabelInActionElement();\r\n  }\r\n\r\n  render() {\r\n    const actionInsideShadow = this.#actionIsInsideShadow();\r\n\r\n    return (\r\n      <Host\r\n        id={!actionInsideShadow ? this.#tooltipId : undefined}\r\n        role={!actionInsideShadow ? TOOLTIP : undefined}\r\n        aria-hidden={!actionInsideShadow && !this.visible ? \"true\" : undefined}\r\n      >\r\n        {actionInsideShadow && (\r\n          <button\r\n            part=\"action\"\r\n            type=\"button\"\r\n            ref={el => (this.#innerActionRef = el)}\r\n          >\r\n            <slot name=\"action\"></slot>\r\n          </button>\r\n        )}\r\n\r\n        {this.visible && (\r\n          <ch-popover\r\n            id={actionInsideShadow ? this.#tooltipId : undefined}\r\n            role={actionInsideShadow ? TOOLTIP : undefined}\r\n            style={{\r\n              \"--ch-tooltip-delay\": `${this.delay}ms`\r\n            }}\r\n            part=\"window\"\r\n            // Don't use #actualActionElement. On the first render is not defined\r\n            actionElement={this.#getActionElement()}\r\n            blockAlign={this.blockAlign}\r\n            closeOnClickOutside\r\n            show\r\n            inlineAlign={this.inlineAlign}\r\n            mode=\"manual\"\r\n            // We need to sync the visible state when the popover is closed by an\r\n            // user interaction (click outside)\r\n            onPopoverClosed={this.#handleLeave}\r\n          >\r\n            <slot />\r\n          </ch-popover>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}