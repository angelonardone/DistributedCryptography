{"version":3,"names":["MARKER_CLASS","MARKER_HIDDEN_CLASS","MARKER_CLASS_SELECTOR","EMPTY_DROPDOWN","undefined","renderItem","item","itemIsVisible","marker","disabled","getImagePathCallback","markerClasses","actionMenuItemIsActionable","h","role","id","class","exportparts","ACTION_MENU_ITEM_EXPORT_PARTS","blockAlign","itemsBlockAlign","inlineAlign","itemsInlineAlign","model","items","caption","type","part","tokenMap","ACTION_MENU_ITEM_PARTS_DICTIONARY","SEPARATOR","ACTION_GROUP_PARTS_DICTIONARY","VERTICAL","parts","style","size","name","responsiveCollapse","displayedMarkers","index","displayed","renderItems","map","actionGroupRenderCss","ChActionGroupRenderStyle0","INTERSECTION_OPTIONS","threshold","ChActionGroupRender","collapsedModel","isResponsiveCollapse","shouldCheckResponsiveCollapseWatcher","responsiveActionsWatcher","updateActionsRAF","collapsedItemsChanged","this","setModels","itemsOverflowBehaviorChanged","itemsOverflowBehavior","disconnectActionsObserver","removeOrInitializeMarkersVisibility","modelChanged","_","toString","collapsedItems","slice","length","setResponsiveCollapse","connectActionsObserver","SyncWithRAF","IntersectionObserver","entries","forEach","entry","itemId","Number","target","offsetWidth","isIntersecting","perform","updateDisplayedActions","el","shadowRoot","querySelectorAll","action","observe","firstItemIndexThatIsNotVisible","findIndex","markerIsDisplayed","cancel","disconnect","connectedCallback","setAttribute","componentDidRender","disconnectedCallback","render","Host","key","moreActionsBlockAlign","moreActionsInlineAlign","moreActionsCaption","slot"],"sources":["src/components/action-group/renders.tsx","src/components/action-group/action-group-render.scss?tag=ch-action-group-render&encapsulation=shadow","src/components/action-group/action-group-render.tsx"],"sourcesContent":["import type {\r\n  ActionGroupDisplayedMarkers,\r\n  ActionGroupItemModel\r\n} from \"./types\";\r\nimport { actionMenuItemIsActionable } from \"../action-menu/internal/utils\";\r\nimport {\r\n  ActionMenuImagePathCallback,\r\n  ActionMenuModel\r\n} from \"../action-menu/types\";\r\nimport {\r\n  ACTION_GROUP_PARTS_DICTIONARY,\r\n  ACTION_MENU_ITEM_EXPORT_PARTS,\r\n  ACTION_MENU_ITEM_PARTS_DICTIONARY\r\n} from \"../../common/reserved-names\";\r\nimport { h } from \"@stencil/core\";\r\nimport { tokenMap } from \"../../common/utils\";\r\n\r\nexport const MARKER_CLASS = \"marker\";\r\nexport const MARKER_HIDDEN_CLASS = `${MARKER_CLASS}--hidden`;\r\nexport const MARKER_CLASS_SELECTOR = `.${MARKER_CLASS}`;\r\n\r\nconst EMPTY_DROPDOWN = undefined;\r\n\r\nconst renderItem = (\r\n  item: ActionGroupItemModel,\r\n  itemIsVisible: boolean,\r\n  marker: ActionGroupDisplayedMarkers | undefined,\r\n  disabled: boolean,\r\n  getImagePathCallback?: ActionMenuImagePathCallback\r\n) => {\r\n  const markerClasses = marker\r\n    ? {\r\n        [MARKER_CLASS]: true,\r\n        [MARKER_HIDDEN_CLASS]: !itemIsVisible\r\n      }\r\n    : undefined;\r\n\r\n  if (actionMenuItemIsActionable(item)) {\r\n    return (\r\n      <ch-action-menu-render\r\n        role=\"listitem\"\r\n        id={marker?.id}\r\n        class={markerClasses}\r\n        disabled={disabled}\r\n        getImagePathCallback={getImagePathCallback}\r\n        exportparts={ACTION_MENU_ITEM_EXPORT_PARTS}\r\n        blockAlign={item.itemsBlockAlign ?? \"outside-end\"}\r\n        inlineAlign={item.itemsInlineAlign ?? \"inside-start\"}\r\n        model={itemIsVisible ? item.items : EMPTY_DROPDOWN}\r\n      >\r\n        {item.caption}\r\n      </ch-action-menu-render>\r\n    );\r\n  }\r\n\r\n  if (item.type === \"separator\") {\r\n    return (\r\n      <hr\r\n        id={marker?.id}\r\n        class={markerClasses}\r\n        part={tokenMap({\r\n          [item.id]: !!item.id,\r\n          [ACTION_MENU_ITEM_PARTS_DICTIONARY.SEPARATOR]: true,\r\n          [ACTION_GROUP_PARTS_DICTIONARY.VERTICAL]: true,\r\n          [item.parts]: !!item.parts\r\n        })}\r\n      />\r\n    );\r\n  }\r\n\r\n  return marker ? (\r\n    <div\r\n      role=\"listitem\"\r\n      id={marker.id}\r\n      class={markerClasses}\r\n      style={!itemIsVisible ? { \"inline-size\": marker.size } : undefined}\r\n    >\r\n      {itemIsVisible && <slot name={item.id} />}\r\n    </div>\r\n  ) : (\r\n    <slot\r\n      // @ts-expect-error This error is a StencilJS's bug.\r\n      // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot#attributes\r\n      role=\"listitem\"\r\n      name={item.id}\r\n    />\r\n  );\r\n};\r\n\r\nconst itemIsVisible = (\r\n  responsiveCollapse: boolean,\r\n  displayedMarkers: ActionGroupDisplayedMarkers[] | undefined,\r\n  index: number\r\n) => !responsiveCollapse || displayedMarkers[index].displayed;\r\n\r\nexport const renderItems = (\r\n  model: ActionMenuModel,\r\n  responsiveCollapse: boolean,\r\n  displayedMarkers: ActionGroupDisplayedMarkers[] | undefined,\r\n  disabled: boolean,\r\n  getImagePathCallback?: ActionMenuImagePathCallback\r\n) =>\r\n  model.map((item, index) =>\r\n    renderItem(\r\n      item,\r\n      itemIsVisible(responsiveCollapse, displayedMarkers, index),\r\n      displayedMarkers ? displayedMarkers[index] : undefined,\r\n      disabled,\r\n      getImagePathCallback\r\n    )\r\n  );\r\n","@import \"../../common/_base\";\r\n\r\n@include box-sizing();\r\n\r\n:host {\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: max-content;\r\n  align-items: center;\r\n}\r\n\r\n:host([items-overflow-behavior=\"add-scroll\"]) {\r\n  overflow-x: auto;\r\n}\r\n\r\n:host([items-overflow-behavior=\"multiline\"]) {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n:host([items-overflow-behavior=\"responsive-collapse\"]) {\r\n  contain: inline-size;\r\n}\r\n\r\nhr {\r\n  display: grid;\r\n  align-self: stretch;\r\n  inline-size: 1px;\r\n  margin: 0;\r\n  background-color: color-mix(in srgb, currentColor 25%, transparent);\r\n  border: unset;\r\n  pointer-events: none;\r\n}\r\n\r\n.marker {\r\n  display: grid;\r\n  align-items: center;\r\n  align-self: stretch;\r\n\r\n  &--hidden {\r\n    visibility: hidden;\r\n  }\r\n}\r\n","import { Component, Element, h, Host, Prop, State, Watch } from \"@stencil/core\";\r\nimport type {\r\n  ActionGroupDisplayedMarkers,\r\n  ActionGroupModel,\r\n  ItemsOverflowBehavior\r\n} from \"./types\";\r\n// import { fromGxImageToURL } from \"../tree-view/genexus-implementation\";\r\n\r\nimport { ACTION_MENU_ITEM_EXPORT_PARTS } from \"../../common/reserved-names\";\r\nimport { SyncWithRAF } from \"../../common/sync-with-frames\";\r\nimport { MARKER_CLASS_SELECTOR, renderItems } from \"./renders\";\r\nimport { ChPopoverAlign } from \"../popover/types\";\r\nimport { ActionMenuImagePathCallback } from \"../action-menu/types\";\r\n\r\n// const FLOATING_POINT_ERROR = 1;\r\n\r\nconst INTERSECTION_OPTIONS: IntersectionObserverInit = { threshold: 1 };\r\n\r\n@Component({\r\n  tag: \"ch-action-group-render\",\r\n  styleUrl: \"action-group-render.scss\",\r\n  shadow: true // Necessary to avoid focus capture\r\n})\r\nexport class ChActionGroupRender {\r\n  #collapsedModel: ActionGroupModel = [];\r\n  #isResponsiveCollapse = false;\r\n  #shouldCheckResponsiveCollapseWatcher = true;\r\n\r\n  // Responsive collapse variables\r\n  #displayedMarkers: ActionGroupDisplayedMarkers[] | undefined;\r\n  #responsiveActionsWatcher: IntersectionObserver | undefined;\r\n  #updateActionsRAF: SyncWithRAF | undefined; // Don't allocate memory until needed when dragging\r\n\r\n  /**\r\n   * 0 means no collapsed items. 1 means the first items is collapsed. And so\r\n   * on.\r\n   */\r\n  @State() collapsedItems = 0;\r\n  @Watch(\"collapsedItems\")\r\n  collapsedItemsChanged() {\r\n    this.#setModels();\r\n  }\r\n\r\n  @Element() el!: HTMLChActionGroupRenderElement;\r\n\r\n  /**\r\n   * This attribute lets you specify if the element is disabled.\r\n   * If disabled, it will not fire any user interaction related event\r\n   * (for example, click event).\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * This property specifies a callback that is executed when the path for an\r\n   * startImgSrc or endImgSrc (of an item) needs to be resolved.\r\n   */\r\n  @Prop() readonly getImagePathCallback?: ActionMenuImagePathCallback;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxImageConstructor: (name: string) => any;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxSettings: any;\r\n\r\n  /**\r\n   * This attribute determines how items behave when the content of the ActionGroup overflows horizontal. This property is needed\r\n   * to make the control responsive to changes in the Width of the container of ActionGroup.\r\n   *\r\n   * | Value                 | Details                                                                                          |\r\n   * | --------------------- | ------------------------------------------------------------------------------------------------ |\r\n   * | `add-scroll`          | The items of the ActionGroup that overflow horizontally are shown by means of a scroll.          |\r\n   * | `multiline`           | The ActionGroup items that overflow horizontally are shown in a second line of the control.      |\r\n   * | `responsive-collapse` | The Action Group items, when they start to overflow the control, are placed in the More Actions. |\r\n   */\r\n  @Prop({ reflect: true })\r\n  readonly itemsOverflowBehavior: ItemsOverflowBehavior = \"responsive-collapse\";\r\n  @Watch(\"itemsOverflowBehavior\")\r\n  itemsOverflowBehaviorChanged() {\r\n    this.#shouldCheckResponsiveCollapseWatcher = true;\r\n    this.#isResponsiveCollapse =\r\n      this.itemsOverflowBehavior === \"responsive-collapse\";\r\n\r\n    this.#disconnectActionsObserver();\r\n    this.#removeOrInitializeMarkersVisibility();\r\n  }\r\n\r\n  /**\r\n   * This property lets you define the model of the ch-action-group control.\r\n   */\r\n  @Prop() readonly model: ActionGroupModel | undefined;\r\n  @Watch(\"model\")\r\n  modelChanged() {\r\n    this.#shouldCheckResponsiveCollapseWatcher = true;\r\n\r\n    this.#disconnectActionsObserver();\r\n    this.#removeOrInitializeMarkersVisibility();\r\n    this.#setModels();\r\n  }\r\n\r\n  /**\r\n   * This property lets you specify the label for the more actions button.\r\n   * Important for accessibility.\r\n   */\r\n  @Prop() readonly moreActionsAccessibleName: string = \"Show more actions\";\r\n\r\n  /**\r\n   * Specifies the block alignment of the more actions dropdown that is\r\n   * placed relative to the \"more actions\" button.\r\n   */\r\n  @Prop() readonly moreActionsBlockAlign: ChPopoverAlign = \"outside-end\";\r\n\r\n  /**\r\n   * This attribute lets you specify the caption for the more actions button.\r\n   */\r\n  @Prop() readonly moreActionsCaption: string | undefined;\r\n\r\n  /**\r\n   * Specifies the inline alignment of the more actions dropdown that is\r\n   * placed relative to the \"more actions\" button.\r\n   */\r\n  @Prop() readonly moreActionsInlineAlign: ChPopoverAlign = \"inside-start\";\r\n\r\n  // /**\r\n  //  * Determine if the dropdown section should be opened when the expandable\r\n  //  * button of the control is focused.\r\n  //  * TODO: Add implementation\r\n  //  */\r\n  // @Prop() readonly openOnFocus: boolean = false;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly useGxRender: boolean = false;\r\n\r\n  // TODO: Use the getImagePath for resolving the images\r\n  // #getImagePath = (img: string) =>\r\n  //   this.useGxRender\r\n  //     ? fromGxImageToURL(img, this.gxSettings, this.gxImageConstructor)\r\n  //     : img;\r\n\r\n  #removeOrInitializeMarkersVisibility = () => {\r\n    this.#displayedMarkers = this.#isResponsiveCollapse\r\n      ? this.model?.map((_, index) => ({\r\n          id: index.toString(),\r\n          displayed: true\r\n        })) ?? []\r\n      : undefined;\r\n  };\r\n\r\n  #setModels = () => {\r\n    this.#collapsedModel = [];\r\n\r\n    if (this.model && this.collapsedItems > 0) {\r\n      this.#collapsedModel = this.model.slice(\r\n        this.model.length - this.collapsedItems\r\n      );\r\n    }\r\n  };\r\n\r\n  // - - - - - - - - - - - - - - - - - - - -\r\n  //                Observers\r\n  // - - - - - - - - - - - - - - - - - - - -\r\n  #setResponsiveCollapse = () => {\r\n    if (this.#isResponsiveCollapse) {\r\n      this.#connectActionsObserver();\r\n    }\r\n  };\r\n\r\n  #connectActionsObserver = () => {\r\n    this.#updateActionsRAF ??= new SyncWithRAF();\r\n    this.#responsiveActionsWatcher ??= new IntersectionObserver(entries => {\r\n      // Update the visibility of each entry\r\n      entries.forEach(entry => {\r\n        const itemId = Number(entry.target.id);\r\n\r\n        if (this.model[itemId].type === \"slot\") {\r\n          this.#displayedMarkers[itemId].size = `${\r\n            (entry.target as HTMLSlotElement).offsetWidth\r\n          }px`;\r\n        }\r\n\r\n        this.#displayedMarkers[itemId].displayed = entry.isIntersecting;\r\n      });\r\n\r\n      // Queue a task to update the displayed actions in the next frame\r\n      this.#updateActionsRAF.perform(this.#updateDisplayedActions);\r\n    }, INTERSECTION_OPTIONS);\r\n\r\n    // Observe the actions\r\n    this.el.shadowRoot\r\n      .querySelectorAll(MARKER_CLASS_SELECTOR)\r\n      .forEach(action => this.#responsiveActionsWatcher.observe(action));\r\n  };\r\n\r\n  /**\r\n   * Update the visibility of the actions.\r\n   * Only works if itemsOverflowBehavior === \"responsive-collapse\"\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #updateDisplayedActions = () => {\r\n    const firstItemIndexThatIsNotVisible = this.#displayedMarkers.findIndex(\r\n      markerIsDisplayed => !markerIsDisplayed.displayed\r\n    );\r\n\r\n    // All items are visible\r\n    if (firstItemIndexThatIsNotVisible === -1) {\r\n      this.collapsedItems = 0;\r\n    }\r\n    // There are hidden items\r\n    else {\r\n      this.collapsedItems = this.model.length - firstItemIndexThatIsNotVisible;\r\n    }\r\n  };\r\n\r\n  #disconnectActionsObserver = () => {\r\n    this.#updateActionsRAF?.cancel();\r\n    this.#updateActionsRAF = undefined;\r\n\r\n    this.#responsiveActionsWatcher?.disconnect();\r\n    this.#responsiveActionsWatcher = undefined;\r\n  };\r\n\r\n  connectedCallback() {\r\n    // TODO: Use role=\"menu\"\r\n    this.el.setAttribute(\"role\", \"list\");\r\n\r\n    this.collapsedItems = 0;\r\n    this.#isResponsiveCollapse =\r\n      this.itemsOverflowBehavior === \"responsive-collapse\";\r\n\r\n    this.#removeOrInitializeMarkersVisibility();\r\n    this.#setModels();\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.#shouldCheckResponsiveCollapseWatcher) {\r\n      this.#shouldCheckResponsiveCollapseWatcher = false;\r\n      this.#setResponsiveCollapse();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#disconnectActionsObserver();\r\n  }\r\n\r\n  render() {\r\n    if (!this.model || this.model.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <Host>\r\n        {this.#isResponsiveCollapse && this.collapsedItems !== 0 && (\r\n          <ch-action-menu-render\r\n            key=\"__action-menu\"\r\n            role=\"listitem\"\r\n            exportparts={ACTION_MENU_ITEM_EXPORT_PARTS}\r\n            blockAlign={this.moreActionsBlockAlign}\r\n            disabled={this.disabled}\r\n            getImagePathCallback={this.getImagePathCallback}\r\n            inlineAlign={this.moreActionsInlineAlign}\r\n            model={this.#collapsedModel}\r\n          >\r\n            {this.moreActionsCaption}\r\n\r\n            {this.#collapsedModel.map(item =>\r\n              item.type === \"slot\" ? (\r\n                <slot slot={item.id} name={item.id} />\r\n              ) : undefined\r\n            )}\r\n          </ch-action-menu-render>\r\n        )}\r\n\r\n        {renderItems(\r\n          this.model,\r\n          this.#isResponsiveCollapse,\r\n          this.#displayedMarkers,\r\n          this.disabled,\r\n          this.getImagePathCallback\r\n        )}\r\n      </Host>\r\n    );\r\n\r\n    // const thereAreCollapsedItems =\r\n    //   this.itemsOverflowBehavior === \"responsive-collapse\" &&\r\n    //   this.moreActionsButtonWasExpanded &&\r\n    //   this.model != null &&\r\n    //   this.displayedItemsCount !== -1;\r\n\r\n    // return (\r\n    //   <ch-action-group\r\n    //     exportparts={this.actionGroupExportParts}\r\n    //     itemsOverflowBehavior={this.itemsOverflowBehavior}\r\n    //     moreActionsAccessibleName={this.moreActionsAccessibleName}\r\n    //     // moreActionsDropdownPosition={this.moreActionsDropdownPosition}\r\n    //     openOnFocus={this.openOnFocus}\r\n    //     onDisplayedItemsCountChange={this.#handleDisplayedItemsCountChange}\r\n    //     onMoreActionsButtonExpandedChange={\r\n    //       !this.moreActionsButtonWasExpanded\r\n    //         ? this.#handleMoreActionButtonExpandedChange\r\n    //         : null\r\n    //     }\r\n    //   >\r\n    //     {this.model.map(this.#renderItem)}\r\n    //     {/* {this.model != null &&\r\n    //       this.model.map((item, index) => (\r\n    //         <ch-action-group-item\r\n    //           slot=\"items\"\r\n    //           key={item.id || item.caption || index}\r\n    //         >\r\n    //           {this.#firstLevelRenderItem(item, index, 0)}\r\n    //         </ch-action-group-item>\r\n    //       ))} */}\r\n\r\n    //     {/* {thereAreCollapsedItems &&\r\n    //       this.model\r\n    //         .filter((_, index) => index >= this.displayedItemsCount)\r\n    //         .map(this.#firstLevelRenderCollapsedItem(0))} */}\r\n    //   </ch-action-group>\r\n    // );\r\n  }\r\n}\r\n"],"mappings":"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"}