{"version":3,"names":["MARKER_CLASS","MARKER_HIDDEN_CLASS","concat","MARKER_CLASS_SELECTOR","EMPTY_DROPDOWN","undefined","renderItem","item","itemIsVisible","marker","disabled","getImagePathCallback","markerClasses","_b","actionMenuItemIsActionable","h","role","id","class","exportparts","ACTION_MENU_ITEM_EXPORT_PARTS","blockAlign","_d","itemsBlockAlign","inlineAlign","_e","itemsInlineAlign","model","items","caption","type","part","tokenMap","_c","ACTION_MENU_ITEM_PARTS_DICTIONARY","SEPARATOR","ACTION_GROUP_PARTS_DICTIONARY","VERTICAL","parts","style","size","name","responsiveCollapse","displayedMarkers","index","displayed","renderItems","map","actionGroupRenderCss","ChActionGroupRenderStyle0","INTERSECTION_OPTIONS","threshold","ChActionGroupRender","exports","_a","_collapsedModel","set","this","_isResponsiveCollapse","_shouldCheckResponsiveCollapseWatcher","_displayedMarkers","_responsiveActionsWatcher","_updateActionsRAF","_removeOrInitializeMarkersVisibility","__classPrivateFieldSet","_this","__classPrivateFieldGet","_","toString","_setModels","collapsedItems","slice","length","_setResponsiveCollapse","_connectActionsObserver","call","SyncWithRAF","IntersectionObserver","entries","forEach","entry","itemId","Number","target","offsetWidth","isIntersecting","perform","_updateDisplayedActions","el","shadowRoot","querySelectorAll","action","observe","firstItemIndexThatIsNotVisible","findIndex","markerIsDisplayed","_disconnectActionsObserver","cancel","disconnect","class_1","prototype","collapsedItemsChanged","itemsOverflowBehaviorChanged","itemsOverflowBehavior","modelChanged","connectedCallback","setAttribute","componentDidRender","disconnectedCallback","render","Host","key","moreActionsBlockAlign","moreActionsInlineAlign","moreActionsCaption","slot"],"sources":["src/components/action-group/renders.tsx","src/components/action-group/action-group-render.scss?tag=ch-action-group-render&encapsulation=shadow","src/components/action-group/action-group-render.tsx"],"sourcesContent":["import type {\r\n  ActionGroupDisplayedMarkers,\r\n  ActionGroupItemModel\r\n} from \"./types\";\r\nimport { actionMenuItemIsActionable } from \"../action-menu/internal/utils\";\r\nimport {\r\n  ActionMenuImagePathCallback,\r\n  ActionMenuModel\r\n} from \"../action-menu/types\";\r\nimport {\r\n  ACTION_GROUP_PARTS_DICTIONARY,\r\n  ACTION_MENU_ITEM_EXPORT_PARTS,\r\n  ACTION_MENU_ITEM_PARTS_DICTIONARY\r\n} from \"../../common/reserved-names\";\r\nimport { h } from \"@stencil/core\";\r\nimport { tokenMap } from \"../../common/utils\";\r\n\r\nexport const MARKER_CLASS = \"marker\";\r\nexport const MARKER_HIDDEN_CLASS = `${MARKER_CLASS}--hidden`;\r\nexport const MARKER_CLASS_SELECTOR = `.${MARKER_CLASS}`;\r\n\r\nconst EMPTY_DROPDOWN = undefined;\r\n\r\nconst renderItem = (\r\n  item: ActionGroupItemModel,\r\n  itemIsVisible: boolean,\r\n  marker: ActionGroupDisplayedMarkers | undefined,\r\n  disabled: boolean,\r\n  getImagePathCallback?: ActionMenuImagePathCallback\r\n) => {\r\n  const markerClasses = marker\r\n    ? {\r\n        [MARKER_CLASS]: true,\r\n        [MARKER_HIDDEN_CLASS]: !itemIsVisible\r\n      }\r\n    : undefined;\r\n\r\n  if (actionMenuItemIsActionable(item)) {\r\n    return (\r\n      <ch-action-menu-render\r\n        role=\"listitem\"\r\n        id={marker?.id}\r\n        class={markerClasses}\r\n        disabled={disabled}\r\n        getImagePathCallback={getImagePathCallback}\r\n        exportparts={ACTION_MENU_ITEM_EXPORT_PARTS}\r\n        blockAlign={item.itemsBlockAlign ?? \"outside-end\"}\r\n        inlineAlign={item.itemsInlineAlign ?? \"inside-start\"}\r\n        model={itemIsVisible ? item.items : EMPTY_DROPDOWN}\r\n      >\r\n        {item.caption}\r\n      </ch-action-menu-render>\r\n    );\r\n  }\r\n\r\n  if (item.type === \"separator\") {\r\n    return (\r\n      <hr\r\n        id={marker?.id}\r\n        class={markerClasses}\r\n        part={tokenMap({\r\n          [item.id]: !!item.id,\r\n          [ACTION_MENU_ITEM_PARTS_DICTIONARY.SEPARATOR]: true,\r\n          [ACTION_GROUP_PARTS_DICTIONARY.VERTICAL]: true,\r\n          [item.parts]: !!item.parts\r\n        })}\r\n      />\r\n    );\r\n  }\r\n\r\n  return marker ? (\r\n    <div\r\n      role=\"listitem\"\r\n      id={marker.id}\r\n      class={markerClasses}\r\n      style={!itemIsVisible ? { \"inline-size\": marker.size } : undefined}\r\n    >\r\n      {itemIsVisible && <slot name={item.id} />}\r\n    </div>\r\n  ) : (\r\n    <slot\r\n      // @ts-expect-error This error is a StencilJS's bug.\r\n      // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot#attributes\r\n      role=\"listitem\"\r\n      name={item.id}\r\n    />\r\n  );\r\n};\r\n\r\nconst itemIsVisible = (\r\n  responsiveCollapse: boolean,\r\n  displayedMarkers: ActionGroupDisplayedMarkers[] | undefined,\r\n  index: number\r\n) => !responsiveCollapse || displayedMarkers[index].displayed;\r\n\r\nexport const renderItems = (\r\n  model: ActionMenuModel,\r\n  responsiveCollapse: boolean,\r\n  displayedMarkers: ActionGroupDisplayedMarkers[] | undefined,\r\n  disabled: boolean,\r\n  getImagePathCallback?: ActionMenuImagePathCallback\r\n) =>\r\n  model.map((item, index) =>\r\n    renderItem(\r\n      item,\r\n      itemIsVisible(responsiveCollapse, displayedMarkers, index),\r\n      displayedMarkers ? displayedMarkers[index] : undefined,\r\n      disabled,\r\n      getImagePathCallback\r\n    )\r\n  );\r\n","@import \"../../common/_base\";\r\n\r\n@include box-sizing();\r\n\r\n:host {\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-auto-columns: max-content;\r\n  align-items: center;\r\n}\r\n\r\n:host([items-overflow-behavior=\"add-scroll\"]) {\r\n  overflow-x: auto;\r\n}\r\n\r\n:host([items-overflow-behavior=\"multiline\"]) {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n:host([items-overflow-behavior=\"responsive-collapse\"]) {\r\n  contain: inline-size;\r\n}\r\n\r\nhr {\r\n  display: grid;\r\n  align-self: stretch;\r\n  inline-size: 1px;\r\n  margin: 0;\r\n  background-color: color-mix(in srgb, currentColor 25%, transparent);\r\n  border: unset;\r\n  pointer-events: none;\r\n}\r\n\r\n.marker {\r\n  display: grid;\r\n  align-items: center;\r\n  align-self: stretch;\r\n\r\n  &--hidden {\r\n    visibility: hidden;\r\n  }\r\n}\r\n","import { Component, Element, h, Host, Prop, State, Watch } from \"@stencil/core\";\r\nimport type {\r\n  ActionGroupDisplayedMarkers,\r\n  ActionGroupModel,\r\n  ItemsOverflowBehavior\r\n} from \"./types\";\r\n// import { fromGxImageToURL } from \"../tree-view/genexus-implementation\";\r\n\r\nimport { ACTION_MENU_ITEM_EXPORT_PARTS } from \"../../common/reserved-names\";\r\nimport { SyncWithRAF } from \"../../common/sync-with-frames\";\r\nimport { MARKER_CLASS_SELECTOR, renderItems } from \"./renders\";\r\nimport { ChPopoverAlign } from \"../popover/types\";\r\nimport { ActionMenuImagePathCallback } from \"../action-menu/types\";\r\n\r\n// const FLOATING_POINT_ERROR = 1;\r\n\r\nconst INTERSECTION_OPTIONS: IntersectionObserverInit = { threshold: 1 };\r\n\r\n@Component({\r\n  tag: \"ch-action-group-render\",\r\n  styleUrl: \"action-group-render.scss\",\r\n  shadow: true // Necessary to avoid focus capture\r\n})\r\nexport class ChActionGroupRender {\r\n  #collapsedModel: ActionGroupModel = [];\r\n  #isResponsiveCollapse = false;\r\n  #shouldCheckResponsiveCollapseWatcher = true;\r\n\r\n  // Responsive collapse variables\r\n  #displayedMarkers: ActionGroupDisplayedMarkers[] | undefined;\r\n  #responsiveActionsWatcher: IntersectionObserver | undefined;\r\n  #updateActionsRAF: SyncWithRAF | undefined; // Don't allocate memory until needed when dragging\r\n\r\n  /**\r\n   * 0 means no collapsed items. 1 means the first items is collapsed. And so\r\n   * on.\r\n   */\r\n  @State() collapsedItems = 0;\r\n  @Watch(\"collapsedItems\")\r\n  collapsedItemsChanged() {\r\n    this.#setModels();\r\n  }\r\n\r\n  @Element() el!: HTMLChActionGroupRenderElement;\r\n\r\n  /**\r\n   * This attribute lets you specify if the element is disabled.\r\n   * If disabled, it will not fire any user interaction related event\r\n   * (for example, click event).\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * This property specifies a callback that is executed when the path for an\r\n   * startImgSrc or endImgSrc (of an item) needs to be resolved.\r\n   */\r\n  @Prop() readonly getImagePathCallback?: ActionMenuImagePathCallback;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxImageConstructor: (name: string) => any;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly gxSettings: any;\r\n\r\n  /**\r\n   * This attribute determines how items behave when the content of the ActionGroup overflows horizontal. This property is needed\r\n   * to make the control responsive to changes in the Width of the container of ActionGroup.\r\n   *\r\n   * | Value                 | Details                                                                                          |\r\n   * | --------------------- | ------------------------------------------------------------------------------------------------ |\r\n   * | `add-scroll`          | The items of the ActionGroup that overflow horizontally are shown by means of a scroll.          |\r\n   * | `multiline`           | The ActionGroup items that overflow horizontally are shown in a second line of the control.      |\r\n   * | `responsive-collapse` | The Action Group items, when they start to overflow the control, are placed in the More Actions. |\r\n   */\r\n  @Prop({ reflect: true })\r\n  readonly itemsOverflowBehavior: ItemsOverflowBehavior = \"responsive-collapse\";\r\n  @Watch(\"itemsOverflowBehavior\")\r\n  itemsOverflowBehaviorChanged() {\r\n    this.#shouldCheckResponsiveCollapseWatcher = true;\r\n    this.#isResponsiveCollapse =\r\n      this.itemsOverflowBehavior === \"responsive-collapse\";\r\n\r\n    this.#disconnectActionsObserver();\r\n    this.#removeOrInitializeMarkersVisibility();\r\n  }\r\n\r\n  /**\r\n   * This property lets you define the model of the ch-action-group control.\r\n   */\r\n  @Prop() readonly model: ActionGroupModel | undefined;\r\n  @Watch(\"model\")\r\n  modelChanged() {\r\n    this.#shouldCheckResponsiveCollapseWatcher = true;\r\n\r\n    this.#disconnectActionsObserver();\r\n    this.#removeOrInitializeMarkersVisibility();\r\n    this.#setModels();\r\n  }\r\n\r\n  /**\r\n   * This property lets you specify the label for the more actions button.\r\n   * Important for accessibility.\r\n   */\r\n  @Prop() readonly moreActionsAccessibleName: string = \"Show more actions\";\r\n\r\n  /**\r\n   * Specifies the block alignment of the more actions dropdown that is\r\n   * placed relative to the \"more actions\" button.\r\n   */\r\n  @Prop() readonly moreActionsBlockAlign: ChPopoverAlign = \"outside-end\";\r\n\r\n  /**\r\n   * This attribute lets you specify the caption for the more actions button.\r\n   */\r\n  @Prop() readonly moreActionsCaption: string | undefined;\r\n\r\n  /**\r\n   * Specifies the inline alignment of the more actions dropdown that is\r\n   * placed relative to the \"more actions\" button.\r\n   */\r\n  @Prop() readonly moreActionsInlineAlign: ChPopoverAlign = \"inside-start\";\r\n\r\n  // /**\r\n  //  * Determine if the dropdown section should be opened when the expandable\r\n  //  * button of the control is focused.\r\n  //  * TODO: Add implementation\r\n  //  */\r\n  // @Prop() readonly openOnFocus: boolean = false;\r\n\r\n  /**\r\n   * This property is a WA to implement the Tree View as a UC 2.0 in GeneXus.\r\n   */\r\n  @Prop() readonly useGxRender: boolean = false;\r\n\r\n  // TODO: Use the getImagePath for resolving the images\r\n  // #getImagePath = (img: string) =>\r\n  //   this.useGxRender\r\n  //     ? fromGxImageToURL(img, this.gxSettings, this.gxImageConstructor)\r\n  //     : img;\r\n\r\n  #removeOrInitializeMarkersVisibility = () => {\r\n    this.#displayedMarkers = this.#isResponsiveCollapse\r\n      ? this.model?.map((_, index) => ({\r\n          id: index.toString(),\r\n          displayed: true\r\n        })) ?? []\r\n      : undefined;\r\n  };\r\n\r\n  #setModels = () => {\r\n    this.#collapsedModel = [];\r\n\r\n    if (this.model && this.collapsedItems > 0) {\r\n      this.#collapsedModel = this.model.slice(\r\n        this.model.length - this.collapsedItems\r\n      );\r\n    }\r\n  };\r\n\r\n  // - - - - - - - - - - - - - - - - - - - -\r\n  //                Observers\r\n  // - - - - - - - - - - - - - - - - - - - -\r\n  #setResponsiveCollapse = () => {\r\n    if (this.#isResponsiveCollapse) {\r\n      this.#connectActionsObserver();\r\n    }\r\n  };\r\n\r\n  #connectActionsObserver = () => {\r\n    this.#updateActionsRAF ??= new SyncWithRAF();\r\n    this.#responsiveActionsWatcher ??= new IntersectionObserver(entries => {\r\n      // Update the visibility of each entry\r\n      entries.forEach(entry => {\r\n        const itemId = Number(entry.target.id);\r\n\r\n        if (this.model[itemId].type === \"slot\") {\r\n          this.#displayedMarkers[itemId].size = `${\r\n            (entry.target as HTMLSlotElement).offsetWidth\r\n          }px`;\r\n        }\r\n\r\n        this.#displayedMarkers[itemId].displayed = entry.isIntersecting;\r\n      });\r\n\r\n      // Queue a task to update the displayed actions in the next frame\r\n      this.#updateActionsRAF.perform(this.#updateDisplayedActions);\r\n    }, INTERSECTION_OPTIONS);\r\n\r\n    // Observe the actions\r\n    this.el.shadowRoot\r\n      .querySelectorAll(MARKER_CLASS_SELECTOR)\r\n      .forEach(action => this.#responsiveActionsWatcher.observe(action));\r\n  };\r\n\r\n  /**\r\n   * Update the visibility of the actions.\r\n   * Only works if itemsOverflowBehavior === \"responsive-collapse\"\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #updateDisplayedActions = () => {\r\n    const firstItemIndexThatIsNotVisible = this.#displayedMarkers.findIndex(\r\n      markerIsDisplayed => !markerIsDisplayed.displayed\r\n    );\r\n\r\n    // All items are visible\r\n    if (firstItemIndexThatIsNotVisible === -1) {\r\n      this.collapsedItems = 0;\r\n    }\r\n    // There are hidden items\r\n    else {\r\n      this.collapsedItems = this.model.length - firstItemIndexThatIsNotVisible;\r\n    }\r\n  };\r\n\r\n  #disconnectActionsObserver = () => {\r\n    this.#updateActionsRAF?.cancel();\r\n    this.#updateActionsRAF = undefined;\r\n\r\n    this.#responsiveActionsWatcher?.disconnect();\r\n    this.#responsiveActionsWatcher = undefined;\r\n  };\r\n\r\n  connectedCallback() {\r\n    // TODO: Use role=\"menu\"\r\n    this.el.setAttribute(\"role\", \"list\");\r\n\r\n    this.collapsedItems = 0;\r\n    this.#isResponsiveCollapse =\r\n      this.itemsOverflowBehavior === \"responsive-collapse\";\r\n\r\n    this.#removeOrInitializeMarkersVisibility();\r\n    this.#setModels();\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.#shouldCheckResponsiveCollapseWatcher) {\r\n      this.#shouldCheckResponsiveCollapseWatcher = false;\r\n      this.#setResponsiveCollapse();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#disconnectActionsObserver();\r\n  }\r\n\r\n  render() {\r\n    if (!this.model || this.model.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    return (\r\n      <Host>\r\n        {this.#isResponsiveCollapse && this.collapsedItems !== 0 && (\r\n          <ch-action-menu-render\r\n            key=\"__action-menu\"\r\n            role=\"listitem\"\r\n            exportparts={ACTION_MENU_ITEM_EXPORT_PARTS}\r\n            blockAlign={this.moreActionsBlockAlign}\r\n            disabled={this.disabled}\r\n            getImagePathCallback={this.getImagePathCallback}\r\n            inlineAlign={this.moreActionsInlineAlign}\r\n            model={this.#collapsedModel}\r\n          >\r\n            {this.moreActionsCaption}\r\n\r\n            {this.#collapsedModel.map(item =>\r\n              item.type === \"slot\" ? (\r\n                <slot slot={item.id} name={item.id} />\r\n              ) : undefined\r\n            )}\r\n          </ch-action-menu-render>\r\n        )}\r\n\r\n        {renderItems(\r\n          this.model,\r\n          this.#isResponsiveCollapse,\r\n          this.#displayedMarkers,\r\n          this.disabled,\r\n          this.getImagePathCallback\r\n        )}\r\n      </Host>\r\n    );\r\n\r\n    // const thereAreCollapsedItems =\r\n    //   this.itemsOverflowBehavior === \"responsive-collapse\" &&\r\n    //   this.moreActionsButtonWasExpanded &&\r\n    //   this.model != null &&\r\n    //   this.displayedItemsCount !== -1;\r\n\r\n    // return (\r\n    //   <ch-action-group\r\n    //     exportparts={this.actionGroupExportParts}\r\n    //     itemsOverflowBehavior={this.itemsOverflowBehavior}\r\n    //     moreActionsAccessibleName={this.moreActionsAccessibleName}\r\n    //     // moreActionsDropdownPosition={this.moreActionsDropdownPosition}\r\n    //     openOnFocus={this.openOnFocus}\r\n    //     onDisplayedItemsCountChange={this.#handleDisplayedItemsCountChange}\r\n    //     onMoreActionsButtonExpandedChange={\r\n    //       !this.moreActionsButtonWasExpanded\r\n    //         ? this.#handleMoreActionButtonExpandedChange\r\n    //         : null\r\n    //     }\r\n    //   >\r\n    //     {this.model.map(this.#renderItem)}\r\n    //     {/* {this.model != null &&\r\n    //       this.model.map((item, index) => (\r\n    //         <ch-action-group-item\r\n    //           slot=\"items\"\r\n    //           key={item.id || item.caption || index}\r\n    //         >\r\n    //           {this.#firstLevelRenderItem(item, index, 0)}\r\n    //         </ch-action-group-item>\r\n    //       ))} */}\r\n\r\n    //     {/* {thereAreCollapsedItems &&\r\n    //       this.model\r\n    //         .filter((_, index) => index >= this.displayedItemsCount)\r\n    //         .map(this.#firstLevelRenderCollapsedItem(0))} */}\r\n    //   </ch-action-group>\r\n    // );\r\n  }\r\n}\r\n"],"mappings":"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"}