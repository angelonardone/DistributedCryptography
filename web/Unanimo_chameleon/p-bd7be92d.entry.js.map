{"version":3,"names":["codeEditorCss","ChCodeEditorStyle0","autoId","ChCodeEditor","automaticLayout","mouseWheelScrollSensitivity","mouseWheelZoom","tabSize","monacoEditorInstance","resizeObserver","editorId","monacoRef","absoluteContentRef","languageChanged","newLanguage","monaco","editor","setModelLanguage","this","getModel","optionsChanged","options","updateOptions","readonlyChanged","newReadonly","readOnly","themeChanged","newTheme","theme","valueChange","newValue","setValue","yamlSchemaUriChange","newUri","language","configureMonacoYaml","enableSchemaRequest","format","schemas","getYamlSchemas","setModel","createModel","value","Uri","parse","connectedCallback","componentDidLoad","configureYaml","setupNormalEditor","ResizeObserver","entries","absoluteContentEntry","contentRect","layout","width","height","observe","disconnectedCallback","disconnect","fileMatch","uri","yamlSchemaUri","editorModel","create","readonly","model","render","h","Host","key","class","ref","el"],"sources":["src/components/code-editor/code-editor.scss?tag=ch-code-editor","src/components/code-editor/code-editor.tsx"],"sourcesContent":["// This is a WA to import required styles for the editor in production build\r\n@import \"../../common/monaco/monaco-styles-after-build.scss\";\r\n\r\nch-code-editor {\r\n  display: grid;\r\n  position: relative;\r\n}\r\n\r\n.ch-code-editor-absolute-content {\r\n  display: grid;\r\n  position: absolute;\r\n  inset: 0;\r\n}\r\n","import { Component, Host, Method, Prop, Watch, h } from \"@stencil/core\";\r\nimport monaco, {\r\n  configureMonacoYaml\r\n} from \"../../common/monaco/output/monaco.js\";\r\nimport { CodeEditorOptions } from \"./code-editor-types.js\";\r\n\r\nlet autoId = 0;\r\n\r\n@Component({\r\n  shadow: false,\r\n  styleUrl: \"code-editor.scss\",\r\n  tag: \"ch-code-editor\"\r\n})\r\nexport class ChCodeEditor {\r\n  #monacoEditorInstance!: monaco.editor.IStandaloneCodeEditor;\r\n  #resizeObserver: ResizeObserver | undefined;\r\n\r\n  #editorId: string = \"\";\r\n\r\n  // Refs\r\n  #monacoRef: HTMLDivElement;\r\n  #absoluteContentRef: HTMLDivElement;\r\n\r\n  /**\r\n   * Specifies the language of the auto created model in the editor.\r\n   */\r\n  @Prop() readonly language!: string;\r\n  @Watch(\"language\")\r\n  languageChanged(newLanguage: string) {\r\n    monaco.editor.setModelLanguage(\r\n      this.#monacoEditorInstance.getModel()!,\r\n      newLanguage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Specifies the editor options.\r\n   */\r\n  @Prop() readonly options: CodeEditorOptions = {\r\n    automaticLayout: true,\r\n    mouseWheelScrollSensitivity: 4,\r\n    mouseWheelZoom: true,\r\n    tabSize: 2\r\n  };\r\n  @Watch(\"options\")\r\n  optionsChanged(options: CodeEditorOptions) {\r\n    this.#monacoEditorInstance?.updateOptions({\r\n      options\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies if the editor should be readonly.\r\n   * If the `readOnly` property is specified in the `options` property,\r\n   * this property has no effect.\r\n   */\r\n  @Prop({ attribute: \"readonly\" }) readonly readonly: boolean = false;\r\n  @Watch(\"readonly\")\r\n  readonlyChanged(newReadonly: boolean) {\r\n    this.#monacoEditorInstance?.updateOptions({\r\n      readOnly: this.options.readOnly ?? newReadonly\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies the theme to be used for rendering.\r\n   */\r\n  @Prop() readonly theme: string = \"vs\";\r\n  @Watch(\"theme\")\r\n  themeChanged(newTheme: string) {\r\n    this.#monacoEditorInstance.updateOptions({ theme: newTheme });\r\n  }\r\n\r\n  /**\r\n   * Specifies the value of the editor.\r\n   */\r\n  @Prop() readonly value: string;\r\n  @Watch(\"value\")\r\n  valueChange(newValue: string) {\r\n    this.#monacoEditorInstance?.setValue(newValue);\r\n  }\r\n\r\n  /**\r\n   * Specifies the schema URI for the YAML language.\r\n   */\r\n  @Prop() readonly yamlSchemaUri: string = \"\";\r\n  @Watch(\"yamlSchemaUri\")\r\n  yamlSchemaUriChange(newUri: string) {\r\n    if (this.language !== \"yaml\") {\r\n      return;\r\n    }\r\n\r\n    // Necessary to not combine the current scheme with the new scheme\r\n    this.#editorId = `ch-editor-${autoId++}`;\r\n\r\n    if (newUri) {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: this.#getYamlSchemas()\r\n      });\r\n    } else {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: []\r\n      });\r\n    }\r\n\r\n    this.#monacoEditorInstance.setModel(\r\n      monaco.editor.createModel(\r\n        this.value,\r\n        this.language,\r\n        monaco.Uri.parse(`file:///${this.#editorId}.txt`)\r\n      )\r\n    );\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    this.#editorId = `ch-editor-${autoId++}`;\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.#configureYaml();\r\n    this.#setupNormalEditor();\r\n\r\n    this.#resizeObserver = new ResizeObserver(entries => {\r\n      const absoluteContentEntry = entries[0].contentRect;\r\n\r\n      this.#monacoEditorInstance.layout({\r\n        width: absoluteContentEntry.width,\r\n        height: absoluteContentEntry.height\r\n      });\r\n    });\r\n\r\n    this.#resizeObserver.observe(this.#absoluteContentRef);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#resizeObserver?.disconnect();\r\n    this.#resizeObserver = null;\r\n  }\r\n\r\n  /**\r\n   * Update the editor's options after the editor has been created.\r\n   * @param options Set of options to be updated\r\n   */\r\n  @Method()\r\n  async updateOptions(options: CodeEditorOptions) {\r\n    this.#monacoEditorInstance?.updateOptions(options);\r\n  }\r\n\r\n  #getYamlSchemas = () => [\r\n    {\r\n      // If YAML file is opened matching this glob\r\n      fileMatch: [`**/${this.#editorId}.*`],\r\n      // Then this schema will be downloaded from the internet and used.\r\n      uri: this.yamlSchemaUri\r\n    }\r\n  ];\r\n\r\n  #setupNormalEditor() {\r\n    const editorModel = monaco.editor.createModel(\r\n      this.value,\r\n      this.language,\r\n      monaco.Uri.parse(`file:///${this.#editorId}.txt`)\r\n    );\r\n\r\n    this.#monacoEditorInstance = monaco.editor.create(this.#monacoRef, {\r\n      ...this.options,\r\n      theme: this.options.theme ?? this.theme,\r\n      readOnly: this.options.readOnly ?? this.readonly,\r\n      model: editorModel\r\n    });\r\n  }\r\n\r\n  #configureYaml() {\r\n    if (this.language === \"yaml\" && !!this.yamlSchemaUri) {\r\n      configureMonacoYaml(monaco, {\r\n        enableSchemaRequest: true,\r\n        format: true,\r\n        schemas: this.#getYamlSchemas()\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class=\"ch-code-editor-absolute-content\"\r\n          ref={el => (this.#absoluteContentRef = el)}\r\n        >\r\n          <div ref={el => (this.#monacoRef = el)}></div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"6FAAA,MAAMA,EAAgB,+pkPACtB,MAAAC,EAAeD,ECKf,IAAIE,EAAS,E,MAOAC,EAAY,M,8DAyBuB,CAC5CC,gBAAiB,KACjBC,4BAA6B,EAC7BC,eAAgB,KAChBC,QAAS,G,cAcmD,M,WAW7B,K,wCAkBQ,E,CAvEzCC,GACAC,GAEAC,GAAoB,GAGpBC,GACAC,GAOA,eAAAC,CAAgBC,GACdC,EAAOC,OAAOC,iBACZC,MAAKV,EAAsBW,WAC3BL,E,CAcJ,cAAAM,CAAeC,GACbH,MAAKV,GAAuBc,cAAc,CACxCD,W,CAWJ,eAAAE,CAAgBC,GACdN,MAAKV,GAAuBc,cAAc,CACxCG,SAAUP,KAAKG,QAAQI,UAAYD,G,CASvC,YAAAE,CAAaC,GACXT,MAAKV,EAAsBc,cAAc,CAAEM,MAAOD,G,CAQpD,WAAAE,CAAYC,GACVZ,MAAKV,GAAuBuB,SAASD,E,CAQvC,mBAAAE,CAAoBC,GAClB,GAAIf,KAAKgB,WAAa,OAAQ,CAC5B,M,CAIFhB,MAAKR,EAAY,aAAaR,MAE9B,GAAI+B,EAAQ,CACVE,EAAoBpB,EAAQ,CAC1BqB,oBAAqB,KACrBC,OAAQ,KACRC,QAASpB,MAAKqB,K,KAEX,CACLJ,EAAoBpB,EAAQ,CAC1BqB,oBAAqB,KACrBC,OAAQ,KACRC,QAAS,I,CAIbpB,MAAKV,EAAsBgC,SACzBzB,EAAOC,OAAOyB,YACZvB,KAAKwB,MACLxB,KAAKgB,SACLnB,EAAO4B,IAAIC,MAAM,WAAW1B,MAAKR,U,CAKvC,iBAAAmC,GACE3B,MAAKR,EAAY,aAAaR,K,CAGhC,gBAAA4C,GACE5B,MAAK6B,IACL7B,MAAK8B,IAEL9B,MAAKT,EAAkB,IAAIwC,gBAAeC,IACxC,MAAMC,EAAuBD,EAAQ,GAAGE,YAExClC,MAAKV,EAAsB6C,OAAO,CAChCC,MAAOH,EAAqBG,MAC5BC,OAAQJ,EAAqBI,QAC7B,IAGJrC,MAAKT,EAAgB+C,QAAQtC,MAAKN,E,CAGpC,oBAAA6C,GACEvC,MAAKT,GAAiBiD,aACtBxC,MAAKT,EAAkB,I,CAQzB,mBAAMa,CAAcD,GAClBH,MAAKV,GAAuBc,cAAcD,E,CAG5CkB,GAAkB,IAAM,CACtB,CAEEoB,UAAW,CAAC,MAAMzC,MAAKR,OAEvBkD,IAAK1C,KAAK2C,gBAId,EAAAb,GACE,MAAMc,EAAc/C,EAAOC,OAAOyB,YAChCvB,KAAKwB,MACLxB,KAAKgB,SACLnB,EAAO4B,IAAIC,MAAM,WAAW1B,MAAKR,UAGnCQ,MAAKV,EAAwBO,EAAOC,OAAO+C,OAAO7C,MAAKP,EAAY,IAC9DO,KAAKG,QACRO,MAAOV,KAAKG,QAAQO,OAASV,KAAKU,MAClCH,SAAUP,KAAKG,QAAQI,UAAYP,KAAK8C,SACxCC,MAAOH,G,CAIX,EAAAf,GACE,GAAI7B,KAAKgB,WAAa,UAAYhB,KAAK2C,cAAe,CACpD1B,EAAoBpB,EAAQ,CAC1BqB,oBAAqB,KACrBC,OAAQ,KACRC,QAASpB,MAAKqB,K,EAKpB,MAAA2B,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CACEC,MAAM,kCACNC,IAAKC,GAAOtD,MAAKN,EAAsB4D,GAEvCL,EAAA,OAAAE,IAAA,2CAAKE,IAAKC,GAAOtD,MAAKP,EAAa6D,K"}