{"version":3,"names":["tabCss","ChTabRenderStyle0","TAB_BUTTON_CLASS","CLOSE_BUTTON_CLASS","TRANSITION_DURATION","BUTTON_POSITION_X","BUTTON_POSITION_Y","BUTTON_SIZE","MOUSE_OFFSET_X","MOUSE_OFFSET_Y","MOUSE_POSITION_X","MOUSE_POSITION_Y","TAB_LIST_EDGE_START_POSITION","TAB_LIST_EDGE_END_POSITION","FIRST_CAPTION_BUTTON","tabListRef","querySelector","LAST_CAPTION_BUTTON","setProperty","element","property","value","style","concat","setButtonInitialPosition","positionX","positionY","setButtonSize","size","setMousePosition","setTabListStartEndPosition","startPosition","endPosition","getTabListSizesAndSetPosition","hostRef","blockDirection","buttonRect","tabListRect","getBoundingClientRect","tabListSizes","xStart","x","xEnd","width","yStart","y","yEnd","height","setMouseOffset","offsetX","offsetY","addGrabbingStyle","document","body","removeGrabbingStyle","removeProperty","getNextEnabledButtonCaption","currentBUttonCaption","_b","nextElementSibling","getPreviousEnabledButtonCaption","previousElementSibling","focusNextOrPreviousCaption","focusNextSibling","focusedCaption","event","preventDefault","nextFocusedCaption","searchFunction","disabled","focus","click","GET_IMAGE_PATH_CALLBACK_REGISTRY","DEFAULT_GET_IMAGE_PATH_CALLBACK","imageSrc","base","ChTabRender","exports","_a","_cancelId","set","this","_selectedIndex","_lastDragEvent","_needForRAF","_initialMousePosition","_itemSizes","_images","Map","_mouseBoundingLimits","_renderedPages","_itemIdToIndex","_dragPreviewRef","_tabListRef","_tabPageRef","_keyEvents","KEY_CODES","ARROW_UP","ev","focusedButton","__classPrivateFieldGet","_this","ARROW_RIGHT","isRTL","ARROW_DOWN","ARROW_LEFT","HOME","_","END","_computeImage","undefined","getImagePathCallback","img","updateDirectionInImageCustomVar","_computeImages","clear","model","forEach","itemUIModel","itemImage","call","startImgSrc","id","_buttonIsCloseButton","buttonRef","className","_updateRenderedPages","items","item","wasRendered","selectedId","newSelectedTabItem","find","_handleDragStart","composedPath","tagName","toLowerCase","itemIndex","get","draggedElementIndex","mousePositionX","clientX","mousePositionY","clientY","isBlockDirection","tabListPosition","getItemSize","__classPrivateFieldSet","__spreadArray","children","map","target","el","buttonSizes","mouseDistanceToButtonTopEdge","mouseDistanceToButtonBottomEdge","mouseDistanceToButtonLeftEdge","mouseDistanceToButtonRightEdge","dragOutside","addEventListener","_handleItemDrag","capture","passive","_handleDragEnd","cancelAnimationFrame","removeEventListener","anItemWasReordered","hasCrossedBoundaries","draggedElementNewIndex","itemToInsert","removeElement","insertIntoIndex","_adjustLastSelectedIndexValueAfterReorder","_c","requestAnimationFrame","mouseLimits","draggedButtonIsInsideTheTabList","inBetween","itemDragStart","emit","length","mousePosition","hasMovedToTheEnd","distanceTraveled","Math","abs","newIndex","_preventMouseDownOnScroll","buttons","MouseEventButtons","WHEEL","_handleSelectedItemChange","stopPropagation","_emitCloseEvent","parentElement","itemId","eventInfo","selectedItemChange","lastSelectedIndex","newSelectedId","newSelectedIndex","defaultPrevented","_handleClose","button","MouseEventButton","hasCloseButton","closeButton","itemClose","_handleTabFocus","keyEventHandler","code","currentFocusedCaption","focusComposedPath","closest","_getEnabledItems","itemsEnabled","_imgRender","startImgType","h","class","part","TAB_PARTS_DICTIONARY","IMAGE","alt","src","loading","_renderTabListPosition","position","startDirection","key","tokenMap","LIST_START","LIST_END","BLOCK","INLINE","START","name","_renderTabList","thereAreShiftedElements","isStartDirection","enabledItems","atLeastOneItemsIsEnabled","role","accessibleName","LIST","onAuxClick","onClick","onDragStart","sortable","onKeyDown","onMouseDown","ref","index","_renderTabButton","_e","isDisabled","_f","selected","startImage","startImageClasses","classes","isDecorativeImage","isPseudoElementImg","PANEL_ID","_g","showCaptions","toString","_h","TAB","CLOSABLE","NOT_CLOSABLE","SELECTED","NOT_SELECTED","DISABLED","styles","closeButtonAccessibleName","_d","CLOSE_BUTTON","type","_renderTabPages","expanded","PANEL_CONTAINER","values","_renderTabPanel","contain","overflow","hasContain","hasOverflow","tabButtonHidden","panel","SCROLLABLE_CLASS","includes","PANEL","_renderDragPreview","draggedElement","DRAG_PREVIEW","DRAG_PREVIEW_OUTSIDE","DRAG_PREVIEW_INSIDE_INLINE","DRAG_PREVIEW_INSIDE_BLOCK","DRAGGING","DRAGGING_OUT_OF_TAB_LIST","DRAGGING_OVER_TAB_LIST","_initializeState","DEFAULT_TAB_LIST_POSITION","class_1","prototype","getImagePathCallbackChanged","modelChanged","newModel","selectedIdChanged","endDragPreview","getDraggableViews","mainView","pageView","tabListView","promoteDragPreviewToTopLayer","popover","showPopover","removePage","pageId_1","pageId","forceRerender","delete","forceUpdate","connectedCallback","adoptCommonThemes","shadowRoot","adoptedStyleSheets","getControlRegisterProperty","componentWillLoad","render","draggedIndex","thereAreShiftedElementsInPreview","Host","showTabListStart","showTabListEnd"],"sources":["src/components/tab/tab.scss?tag=ch-tab-render&encapsulation=shadow","src/components/tab/tab.tsx"],"sourcesContent":["@import \"../../common/base\";\r\n@import \"../../common/icons\";\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//         Caption button\r\n// - - - - - - - - - - - - - - - -\r\n@include button-reset();\r\n\r\n@include box-sizing();\r\n\r\n$z-index-gx-navbar-item: 107; // Same as $z-index-gx-navbar-item from w-c-l\r\n\r\n:host {\r\n  --ch-tab-transition-duration: 150ms;\r\n\r\n  /**\r\n   * @prop --ch-tab-button__image-size:\r\n   * Specifies the box size that contains the start images of the tab buttons.\r\n   * @default #{$default-decorative-image-size}\r\n   */\r\n  --ch-tab-button__image-size: #{$default-decorative-image-size};\r\n\r\n  /**\r\n   * @prop --ch-tab-button__background-image-size:\r\n   * Specifies the size of the start images of the tab buttons.\r\n   * @default 100%\r\n   */\r\n  --ch-tab-button__background-image-size: 100%;\r\n\r\n  /**\r\n   * @prop --ch-tab-close-button__image-size:\r\n   * Specifies the box size that contains an image for the close button.\r\n   * @default #{$default-decorative-image-size}\r\n   */\r\n  --ch-tab-close-button__image-size: #{$default-decorative-image-size};\r\n\r\n  /**\r\n    * @prop --ch-tab-close-button__background-image-size:\r\n    * Specifies the image size of the close button.\r\n    * @default 100%\r\n    */\r\n  --ch-tab-close-button__background-image-size: 100%;\r\n\r\n  display: grid;\r\n}\r\n\r\n:host(.ch-tab--block-start) {\r\n  grid-template:\r\n    \"list-start list list-end\" max-content\r\n    \"panel-container panel-container panel-container\" 1fr / max-content 1fr max-content;\r\n}\r\n\r\n:host(.ch-tab--block-end) {\r\n  grid-template:\r\n    \"panel-container panel-container panel-container\" 1fr\r\n    \"list-start list list-end\" max-content / max-content 1fr max-content;\r\n}\r\n\r\n:host(.ch-tab--inline-start) {\r\n  grid-template:\r\n    \"list-start panel-container\" max-content\r\n    \"list panel-container\" 1fr\r\n    \"list-end panel-container\" max-content / max-content 1fr;\r\n}\r\n\r\n:host(.ch-tab--inline-end) {\r\n  grid-template:\r\n    \"panel-container list-start\" max-content\r\n    \"panel-container list\" 1fr\r\n    \"panel-container list-end\" max-content / 1fr max-content;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - - - - - -\r\n//                Tab lists\r\n// - - - - - - - - - - - - - - - - - - - -\r\n.tab-list {\r\n  grid-area: list;\r\n  display: grid;\r\n\r\n  &-start {\r\n    grid-area: list-start;\r\n  }\r\n\r\n  &-end {\r\n    grid-area: list-end;\r\n  }\r\n\r\n  &-start,\r\n  &-end {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  &--inline {\r\n    grid-auto-flow: row;\r\n    grid-auto-rows: max-content;\r\n  }\r\n\r\n  &--block {\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: max-content;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - - - - - -\r\n//             Panel container\r\n// - - - - - - - - - - - - - - - - - - - -\r\n.panel-container {\r\n  grid-area: panel-container;\r\n  display: grid;\r\n  grid-template: \"selected\" 1fr / 1fr;\r\n}\r\n\r\n.panel {\r\n  display: grid;\r\n\r\n  &--selected {\r\n    grid-area: selected;\r\n  }\r\n}\r\n\r\n// content-visibility: hidden is faster for rendering the content back, as\r\n// it preserves the rendering state of the content (display: none does not)\r\n@supports (content-visibility: hidden) {\r\n  .panel-container--collapsed,\r\n  .panel--hidden {\r\n    content-visibility: hidden;\r\n  }\r\n\r\n  .panel-container--collapsed {\r\n    inline-size: 0;\r\n  }\r\n}\r\n\r\n@supports not (content-visibility: hidden) {\r\n  .panel-container--collapsed,\r\n  .panel--hidden {\r\n    display: none; // Destroys the render state. Ctrl + Z and Ctrl + C won't work properly\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - - - - - -\r\n//                   Tab\r\n// - - - - - - - - - - - - - - - - - - - -\r\n.tab {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  &:hover > .close-button::after,\r\n  &:focus-within > .close-button::after,\r\n  &[aria-selected=\"true\"] > .close-button::after {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.no-captions {\r\n  justify-content: center;\r\n}\r\n\r\n.sortable {\r\n  // Allow user drag\r\n  -webkit-user-drag: element;\r\n}\r\n\r\n// - - - - - - - - - - - - - - - - - - - -\r\n//                 Images\r\n// - - - - - - - - - - - - - - - - - - - -\r\n.tab {\r\n  --ch-tab-button-start-img: var(--ch-start-img--base);\r\n\r\n  &.start-img--hover:hover {\r\n    --ch-tab-button-start-img: var(--ch-start-img--hover);\r\n  }\r\n\r\n  &.start-img--active:active {\r\n    --ch-tab-button-start-img: var(--ch-start-img--active);\r\n  }\r\n\r\n  &.start-img--focus:focus {\r\n    --ch-tab-button-start-img: var(--ch-start-img--focus);\r\n  }\r\n\r\n  &.start-img--selected.selected {\r\n    --ch-tab-button-start-img: var(--ch-start-img--selected);\r\n  }\r\n\r\n  &:disabled.start-img--disabled {\r\n    --ch-tab-button-start-img: var(--ch-start-img--disabled);\r\n  }\r\n}\r\n\r\n.caption-image,\r\n.pseudo-img--start::before {\r\n  display: block;\r\n  block-size: var(--ch-tab-button__image-size);\r\n  inline-size: var(--ch-tab-button__image-size);\r\n  min-inline-size: var(--ch-tab-button__image-size);\r\n}\r\n\r\n.pseudo-img--start::before {\r\n  content: \"\";\r\n  content-visibility: auto;\r\n  contain-intrinsic-size: auto var(--ch-tab-button__image-size);\r\n}\r\n\r\n// Background\r\n.start-img-type--background::before {\r\n  background: no-repeat center / var(--ch-tab-button__background-image-size)\r\n    var(--ch-tab-button-start-img);\r\n}\r\n\r\n// Mask\r\n.start-img-type--mask::before {\r\n  -webkit-mask: no-repeat center / var(--ch-tab-button__background-image-size)\r\n    var(--ch-tab-button-start-img);\r\n  background-color: currentColor;\r\n}\r\n\r\n.close-button {\r\n  &::after {\r\n    content: \"\";\r\n    display: flex;\r\n    block-size: var(--ch-tab-close-button__image-size);\r\n    inline-size: var(--ch-tab-close-button__image-size);\r\n    -webkit-mask: no-repeat center /\r\n      var(--ch-tab-close-button__background-image-size) #{$close-icon};\r\n    background-color: currentColor;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n// - - - - - - - - - - - - - - - -\r\n//          Drag preview\r\n// - - - - - - - - - - - - - - - -\r\n// \"Hide\" the dragged element, without removing it from the accessibility tree\r\n.dragged-element {\r\n  opacity: 0;\r\n\r\n  &--outside {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.drag-preview {\r\n  // \"clamp\" implements snap to the edges\r\n  --ch-tab-snap-drag-preview: clamp(\r\n    var(--ch-tab-list-start),\r\n    var(--ch-tab-mouse-position),\r\n    var(--ch-tab-list-end)\r\n  );\r\n\r\n  position: fixed;\r\n  left: 0; // Necessary since the custom vars are physical values\r\n  top: 0; // Necessary since the custom vars are physical values\r\n  z-index: $z-index-gx-navbar-item + 1;\r\n  cursor: grabbing;\r\n\r\n  &:popover-open {\r\n    // Reset popover's browser defaults\r\n    padding: 0;\r\n    margin: 0;\r\n    border: unset;\r\n    color: unset;\r\n\r\n    // Native popovers have \"inset: 0\", so we need to reset that property with\r\n    // the physical values again to support RTL\r\n    inset: unset;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    // The preview MUST NOT capture pointer-events in order to properly show\r\n    // the droppable areas\r\n    pointer-events: none;\r\n  }\r\n\r\n  // Drag outside\r\n  &--outside-tab-list {\r\n    transform: translate(\r\n      calc(var(--ch-tab-mouse-position-x) - var(--ch-tab-mouse-offset-x)),\r\n      calc(var(--ch-tab-mouse-position-y) - var(--ch-tab-mouse-offset-y))\r\n    );\r\n  }\r\n\r\n  // Drag inside (block)\r\n  &--inside-tab-list__block {\r\n    --ch-tab-mouse-position: calc(\r\n      var(--ch-tab-mouse-position-x) - var(--ch-tab-mouse-offset-x)\r\n    );\r\n\r\n    transform: translate(\r\n      var(--ch-tab-snap-drag-preview),\r\n      var(--ch-tab-button-position-y)\r\n    );\r\n  }\r\n\r\n  // Drag inside (inline)\r\n  &--inside-tab-list__inline {\r\n    --ch-tab-mouse-position: calc(\r\n      var(--ch-tab-mouse-position-y) - var(--ch-tab-mouse-offset-y)\r\n    );\r\n\r\n    transform: translate(\r\n      var(--ch-tab-button-position-x),\r\n      var(--ch-tab-snap-drag-preview)\r\n    );\r\n  }\r\n}\r\n\r\n.shifted-element {\r\n  transition: transform var(--ch-tab-transition-duration);\r\n}\r\n\r\n:host(.ch-tab--block-start),\r\n:host(.ch-tab--block-end) {\r\n  .shifted-element--start {\r\n    transform: translate(calc(var(--ch-tab-button-size) * -1), 0);\r\n  }\r\n\r\n  .shifted-element--end {\r\n    transform: translate(var(--ch-tab-button-size), 0);\r\n  }\r\n}\r\n\r\n:host(.ch-tab--inline-start),\r\n:host(.ch-tab--inline-end) {\r\n  .shifted-element--start {\r\n    transform: translateY(calc(var(--ch-tab-button-size) * -1));\r\n  }\r\n\r\n  .shifted-element--end {\r\n    transform: translateY(var(--ch-tab-button-size));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Method,\r\n  Prop,\r\n  State,\r\n  Watch,\r\n  forceUpdate,\r\n  h\r\n} from \"@stencil/core\";\r\nimport {\r\n  DraggableView,\r\n  DraggableViewInfo\r\n} from \"../flexible-layout/internal/flexible-layout/types\";\r\nimport {\r\n  inBetween,\r\n  isPseudoElementImg,\r\n  isRTL,\r\n  tokenMap,\r\n  updateDirectionInImageCustomVar\r\n} from \"../../common/utils\";\r\nimport {\r\n  TabElementSize,\r\n  TabItemCloseInfo,\r\n  TabItemModel,\r\n  TabListPosition,\r\n  TabModel,\r\n  TabSelectedItemInfo\r\n} from \"./types\";\r\nimport {\r\n  DEFAULT_TAB_LIST_POSITION,\r\n  DRAG_PREVIEW,\r\n  DRAG_PREVIEW_INSIDE_BLOCK,\r\n  DRAG_PREVIEW_INSIDE_INLINE,\r\n  DRAG_PREVIEW_OUTSIDE,\r\n  isBlockDirection,\r\n  isStartDirection,\r\n  PANEL_ID\r\n} from \"./utils\";\r\nimport { insertIntoIndex, removeElement } from \"../../common/array\";\r\nimport {\r\n  focusComposedPath,\r\n  MouseEventButton,\r\n  MouseEventButtons\r\n} from \"../common/helpers\";\r\nimport type {\r\n  CssContainProperty,\r\n  CssOverflowProperty,\r\n  GxImageMultiState,\r\n  GxImageMultiStateStart\r\n} from \"../../common/types\";\r\nimport { getControlRegisterProperty } from \"../../common/registry-properties\";\r\nimport {\r\n  KEY_CODES,\r\n  SCROLLABLE_CLASS,\r\n  TAB_PARTS_DICTIONARY\r\n} from \"../../common/reserved-names\";\r\nimport { adoptCommonThemes } from \"../../common/theme\";\r\n\r\nconst TAB_BUTTON_CLASS = \"tab\";\r\nconst CLOSE_BUTTON_CLASS = \"close-button\";\r\n\r\n// Custom vars\r\nconst TRANSITION_DURATION = \"--ch-tab-transition-duration\";\r\n\r\nconst BUTTON_POSITION_X = \"--ch-tab-button-position-x\";\r\nconst BUTTON_POSITION_Y = \"--ch-tab-button-position-y\";\r\n\r\nconst BUTTON_SIZE = \"--ch-tab-button-size\";\r\n\r\nconst MOUSE_OFFSET_X = \"--ch-tab-mouse-offset-x\";\r\nconst MOUSE_OFFSET_Y = \"--ch-tab-mouse-offset-y\";\r\n\r\nconst MOUSE_POSITION_X = \"--ch-tab-mouse-position-x\";\r\nconst MOUSE_POSITION_Y = \"--ch-tab-mouse-position-y\";\r\n\r\nconst TAB_LIST_EDGE_START_POSITION = \"--ch-tab-list-start\";\r\nconst TAB_LIST_EDGE_END_POSITION = \"--ch-tab-list-end\";\r\n\r\ntype KeyEvents =\r\n  | typeof KEY_CODES.ARROW_UP\r\n  | typeof KEY_CODES.ARROW_RIGHT\r\n  | typeof KEY_CODES.ARROW_DOWN\r\n  | typeof KEY_CODES.ARROW_LEFT\r\n  | typeof KEY_CODES.HOME\r\n  | typeof KEY_CODES.END;\r\n\r\n// Selectors\r\nconst FIRST_CAPTION_BUTTON = (tabListRef: HTMLElement) =>\r\n  tabListRef.querySelector(\":scope>button\") as HTMLButtonElement;\r\n\r\nconst LAST_CAPTION_BUTTON = (tabListRef: HTMLElement) =>\r\n  tabListRef.querySelector(\":scope>button:last-child\") as HTMLButtonElement;\r\n\r\n// Utility functions\r\n\r\nconst setProperty = (element: HTMLElement, property: string, value: number) =>\r\n  element.style.setProperty(property, `${value}px`);\r\n\r\nconst setButtonInitialPosition = (\r\n  element: HTMLElement,\r\n  positionX: number,\r\n  positionY: number\r\n) => {\r\n  setProperty(element, BUTTON_POSITION_X, positionX);\r\n  setProperty(element, BUTTON_POSITION_Y, positionY);\r\n};\r\n\r\nconst setButtonSize = (element: HTMLElement, size: number) => {\r\n  setProperty(element, BUTTON_SIZE, size);\r\n};\r\n\r\nconst setMousePosition = (\r\n  element: HTMLElement,\r\n  positionX: number,\r\n  positionY: number\r\n) => {\r\n  setProperty(element, MOUSE_POSITION_X, positionX);\r\n  setProperty(element, MOUSE_POSITION_Y, positionY);\r\n};\r\n\r\n// Useful to implement snap to the edges\r\nconst setTabListStartEndPosition = (\r\n  element: HTMLElement,\r\n  startPosition: number,\r\n  endPosition: number\r\n) => {\r\n  setProperty(element, TAB_LIST_EDGE_START_POSITION, startPosition);\r\n  setProperty(element, TAB_LIST_EDGE_END_POSITION, endPosition);\r\n};\r\n\r\nconst getTabListSizesAndSetPosition = (\r\n  hostRef: HTMLChTabRenderElement,\r\n  tabListRef: HTMLElement,\r\n  blockDirection: boolean,\r\n  buttonRect: DOMRect\r\n): TabElementSize => {\r\n  const tabListRect = tabListRef.getBoundingClientRect();\r\n\r\n  // Tab List information\r\n  const tabListSizes: TabElementSize = {\r\n    xStart: tabListRect.x,\r\n    xEnd: tabListRect.x + tabListRect.width,\r\n    yStart: tabListRect.y,\r\n    yEnd: tabListRect.y + tabListRect.height\r\n  };\r\n\r\n  if (blockDirection) {\r\n    setTabListStartEndPosition(\r\n      hostRef,\r\n      tabListSizes.xStart,\r\n      tabListSizes.xEnd - buttonRect.width\r\n    );\r\n  } else {\r\n    setTabListStartEndPosition(\r\n      hostRef,\r\n      tabListSizes.yStart,\r\n      tabListSizes.yEnd - buttonRect.height\r\n    );\r\n  }\r\n\r\n  return tabListSizes;\r\n};\r\n\r\nconst setMouseOffset = (\r\n  element: HTMLElement,\r\n  offsetX: number,\r\n  offsetY: number\r\n) => {\r\n  setProperty(element, MOUSE_OFFSET_X, offsetX);\r\n  setProperty(element, MOUSE_OFFSET_Y, offsetY);\r\n};\r\n\r\nconst addGrabbingStyle = () =>\r\n  document.body.style.setProperty(\"cursor\", \"grabbing\");\r\nconst removeGrabbingStyle = () => document.body.style.removeProperty(\"cursor\");\r\n\r\nconst getNextEnabledButtonCaption = (\r\n  currentBUttonCaption: HTMLButtonElement,\r\n  tabListRef: HTMLElement\r\n) =>\r\n  (currentBUttonCaption.nextElementSibling ??\r\n    FIRST_CAPTION_BUTTON(tabListRef)) as HTMLButtonElement;\r\n\r\nconst getPreviousEnabledButtonCaption = (\r\n  currentBUttonCaption: HTMLButtonElement,\r\n  tabListRef: HTMLElement\r\n) =>\r\n  (currentBUttonCaption.previousElementSibling ??\r\n    LAST_CAPTION_BUTTON(tabListRef)) as HTMLButtonElement;\r\n\r\nconst focusNextOrPreviousCaption = (\r\n  focusNextSibling: boolean,\r\n  tabListRef: HTMLElement,\r\n  focusedCaption: HTMLButtonElement,\r\n  event: KeyboardEvent\r\n) => {\r\n  // Prevent scroll\r\n  event.preventDefault();\r\n\r\n  let nextFocusedCaption: HTMLButtonElement;\r\n\r\n  const searchFunction = focusNextSibling\r\n    ? getNextEnabledButtonCaption\r\n    : getPreviousEnabledButtonCaption;\r\n\r\n  // Determine the next selected caption button\r\n  nextFocusedCaption = searchFunction(focusedCaption, tabListRef);\r\n\r\n  while (nextFocusedCaption.disabled) {\r\n    nextFocusedCaption = searchFunction(nextFocusedCaption, tabListRef);\r\n  }\r\n\r\n  // Focus and select the caption\r\n  nextFocusedCaption.focus();\r\n  nextFocusedCaption.click();\r\n};\r\n\r\nlet GET_IMAGE_PATH_CALLBACK_REGISTRY: (\r\n  imageSrc: string\r\n) => GxImageMultiState | undefined;\r\n\r\nconst DEFAULT_GET_IMAGE_PATH_CALLBACK: (\r\n  imageSrc: string\r\n) => GxImageMultiState | undefined = imageSrc => ({ base: imageSrc });\r\n\r\n@Component({\r\n  shadow: true,\r\n  styleUrl: \"tab.scss\",\r\n  tag: \"ch-tab-render\"\r\n})\r\nexport class ChTabRender implements DraggableView {\r\n  #cancelId: number;\r\n\r\n  #selectedIndex: number = -1;\r\n\r\n  #lastDragEvent: MouseEvent;\r\n  #needForRAF = true; // To prevent redundant RAF (request animation frame) calls\r\n\r\n  #initialMousePosition = -1;\r\n\r\n  // Allocated at runtime to reduce memory usage\r\n  #itemSizes: number[];\r\n\r\n  // TODO: Allocate at runtime to reduce memory usage\r\n  #images: Map<string, GxImageMultiStateStart | undefined> = new Map();\r\n\r\n  /**\r\n   * This variable represents the boundaries of the box where the mouse can be\r\n   * placed when dragging a caption, to consider that the caption is within the\r\n   * tab list.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #mouseBoundingLimits: TabElementSize;\r\n\r\n  #renderedPages: Map<string, TabItemModel> = new Map();\r\n  #itemIdToIndex: Map<string, number> = new Map();\r\n\r\n  // Refs\r\n  #dragPreviewRef: HTMLButtonElement;\r\n  #tabListRef: HTMLDivElement;\r\n  #tabPageRef: HTMLDivElement;\r\n\r\n  // Keyboard interactions\r\n  #keyEvents: {\r\n    [key in KeyEvents]: (\r\n      blockDirection: boolean,\r\n      event: KeyboardEvent,\r\n      focusedCaption: HTMLButtonElement\r\n    ) => void;\r\n  } = {\r\n    [KEY_CODES.ARROW_UP]: (blockDirection, ev, focusedButton) => {\r\n      if (blockDirection) {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(false, this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [KEY_CODES.ARROW_RIGHT]: (blockDirection, ev, focusedButton) => {\r\n      if (!blockDirection) {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(!isRTL(), this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [KEY_CODES.ARROW_DOWN]: (blockDirection, ev, focusedButton) => {\r\n      if (blockDirection) {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(true, this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [KEY_CODES.ARROW_LEFT]: (blockDirection, ev, focusedButton) => {\r\n      if (!blockDirection) {\r\n        return;\r\n      }\r\n      focusNextOrPreviousCaption(isRTL(), this.#tabListRef, focusedButton, ev);\r\n    },\r\n\r\n    [KEY_CODES.HOME]: (_, ev) =>\r\n      focusNextOrPreviousCaption(\r\n        true,\r\n        this.#tabListRef,\r\n        LAST_CAPTION_BUTTON(this.#tabListRef),\r\n        ev\r\n      ),\r\n\r\n    [KEY_CODES.END]: (_, ev) =>\r\n      focusNextOrPreviousCaption(\r\n        false,\r\n        this.#tabListRef,\r\n        FIRST_CAPTION_BUTTON(this.#tabListRef),\r\n        ev\r\n      )\r\n  };\r\n\r\n  @Element() el: HTMLChTabRenderElement;\r\n\r\n  @State() draggedElementIndex = -1;\r\n  @State() draggedElementNewIndex = -1;\r\n\r\n  /**\r\n   * `true` when the mouse position is out of bounds at least once.\r\n   */\r\n  @State() hasCrossedBoundaries = false;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element.\r\n   */\r\n  @Prop() readonly accessibleName: string;\r\n\r\n  /**\r\n   * `true` to display a close button for the items.\r\n   */\r\n  @Prop() readonly closeButton: boolean = false;\r\n\r\n  /**\r\n   * Specifies a short string, typically 1 to 3 words, that authors associate\r\n   * with an element to provide users of assistive technologies with a label\r\n   * for the element. This label is used for the close button of the captions.\r\n   */\r\n  @Prop() readonly closeButtonAccessibleName: string = \"Close\";\r\n\r\n  /**\r\n   * Same as the contain CSS property. This property indicates that an item\r\n   * and its contents are, as much as possible, independent from the rest of\r\n   * the document tree. Containment enables isolating a subsection of the DOM,\r\n   * providing performance benefits by limiting calculations of layout, style,\r\n   * paint, size, or any combination to a DOM subtree rather than the entire\r\n   * page.\r\n   * Containment can also be used to scope CSS counters and quotes.\r\n   */\r\n  @Prop() readonly contain?: CssContainProperty = \"none\";\r\n\r\n  /**\r\n   * This attribute lets you specify if all tab buttons are disabled.\r\n   * If disabled, tab buttons will not fire any user interaction related event\r\n   * (for example, click event).\r\n   */\r\n  @Prop() readonly disabled: boolean = false;\r\n\r\n  /**\r\n   * When the control is sortable, the items can be dragged outside of the\r\n   * tab-list.\r\n   *\r\n   * This property lets you specify if this behavior is enabled.\r\n   */\r\n  @Prop() readonly dragOutside: boolean = false;\r\n\r\n  /**\r\n   * `true` if the group has is view section expanded. Otherwise, only the\r\n   * toolbar will be displayed.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/ban-default-true\r\n  @Prop() readonly expanded: boolean = true;\r\n\r\n  /**\r\n   * This property specifies a callback that is executed when the path for an\r\n   * startImgSrc needs to be resolved.\r\n   */\r\n  @Prop() readonly getImagePathCallback?: (\r\n    imageSrc: string\r\n  ) => GxImageMultiState | undefined;\r\n  @Watch(\"getImagePathCallback\")\r\n  getImagePathCallbackChanged() {\r\n    this.#computeImages();\r\n  }\r\n\r\n  /**\r\n   * Specifies the items of the tab control.\r\n   */\r\n  @Prop() readonly model: TabModel;\r\n  @Watch(\"model\")\r\n  modelChanged(newModel: TabModel) {\r\n    this.#computeImages();\r\n    this.#updateRenderedPages(newModel);\r\n  }\r\n\r\n  /**\r\n   * Same as the overflow CSS property. This property sets the desired behavior\r\n   * when content does not fit in the item's padding box (overflows) in the\r\n   * horizontal and/or vertical direction.\r\n   */\r\n  @Prop() readonly overflow:\r\n    | CssOverflowProperty\r\n    | `${CssOverflowProperty} ${CssOverflowProperty}` = \"visible\";\r\n\r\n  /**\r\n   * Specifies the selected item of the widgets array.\r\n   */\r\n  @Prop({ mutable: true }) selectedId: string;\r\n  @Watch(\"selectedId\")\r\n  selectedIdChanged(newSelectedId: string) {\r\n    const newSelectedTabItem = this.model.find(\r\n      item => item.id === newSelectedId\r\n    );\r\n\r\n    if (newSelectedTabItem) {\r\n      this.#renderedPages.set(newSelectedId, newSelectedTabItem);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * `true` to show the captions of the items.\r\n   */\r\n  @Prop() readonly showCaptions: boolean = true;\r\n\r\n  /**\r\n   * `true` to render a slot named \"tab-list-end\" to project content at the\r\n   * end position of the tab-list (\"after\" the tab buttons).\r\n   */\r\n  @Prop() readonly showTabListEnd: boolean = false;\r\n\r\n  /**\r\n   * `true` to render a slot named \"tab-list-start\" to project content at the\r\n   * start position of the tab-list (\"before\" the tab buttons).\r\n   */\r\n  @Prop() readonly showTabListStart: boolean = false;\r\n\r\n  /**\r\n   * `true` to enable sorting the tab buttons by dragging them in the tab-list.\r\n   *\r\n   * If `false`, the tab buttons can not be dragged out either.\r\n   */\r\n  @Prop() readonly sortable: boolean = false;\r\n\r\n  /**\r\n   * `true` to not render the tab buttons of the control.\r\n   */\r\n  @Prop() readonly tabButtonHidden: boolean = false;\r\n\r\n  /**\r\n   * Specifies the position of the tab list of the `ch-tab-render`.\r\n   */\r\n  @Prop() readonly tabListPosition: TabListPosition = DEFAULT_TAB_LIST_POSITION;\r\n\r\n  /**\r\n   * Fired when an item of the main group is double clicked.\r\n   */\r\n  @Event() expandMainGroup: EventEmitter<string>;\r\n\r\n  /**\r\n   * Fired the close button of an item is clicked.\r\n   */\r\n  @Event() itemClose: EventEmitter<TabItemCloseInfo>;\r\n\r\n  /**\r\n   * Fired when the selected item change.\r\n   * This event can be default prevented to prevent the item selection.\r\n   */\r\n  @Event() selectedItemChange: EventEmitter<TabSelectedItemInfo>;\r\n\r\n  /**\r\n   * Fired the first time a caption button is dragged outside of its tab list.\r\n   */\r\n  @Event() itemDragStart: EventEmitter<number>;\r\n\r\n  /**\r\n   * Ends the preview of the dragged item. Useful for ending the preview via\r\n   * keyboard interaction.\r\n   */\r\n  @Method()\r\n  async endDragPreview(): Promise<void> {\r\n    this.#handleDragEnd();\r\n  }\r\n\r\n  /**\r\n   * Returns the info associated to the draggable view.\r\n   */\r\n  @Method()\r\n  async getDraggableViews(): Promise<DraggableViewInfo> {\r\n    return {\r\n      mainView: this.el,\r\n      pageView: this.#tabPageRef,\r\n      tabListView: this.#tabListRef\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Promotes the drag preview to the top layer. Useful to avoid z-index issues.\r\n   */\r\n  @Method()\r\n  async promoteDragPreviewToTopLayer(): Promise<void> {\r\n    if (this.draggedElementIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    // If this property is added in a declarative way via the Stencil's render,\r\n    // we would have to use requestAnimationFrame to delay the shopPopover()\r\n    // method, since the popover defaults to \"auto\", which does not allow to\r\n    // keep multiple \"auto\" popover open at the same time\r\n    this.#dragPreviewRef.popover = \"manual\";\r\n\r\n    this.#dragPreviewRef.showPopover();\r\n  }\r\n\r\n  /**\r\n   * Given an id, remove the page from the render\r\n   */\r\n  @Method()\r\n  async removePage(pageId: string, forceRerender = true) {\r\n    this.#renderedPages.delete(pageId);\r\n\r\n    if (forceRerender) {\r\n      forceUpdate(this);\r\n    }\r\n  }\r\n\r\n  // TODO: This code is exactly the same as the ch-accordion-render. We should\r\n  // find the way to avoid this duplication\r\n  #computeImage = (\r\n    imageSrc: string | undefined\r\n  ): GxImageMultiStateStart | undefined => {\r\n    if (!imageSrc) {\r\n      return undefined;\r\n    }\r\n    const getImagePathCallback =\r\n      this.getImagePathCallback ?? GET_IMAGE_PATH_CALLBACK_REGISTRY;\r\n\r\n    if (!getImagePathCallback) {\r\n      return undefined;\r\n    }\r\n    const img = getImagePathCallback(imageSrc);\r\n\r\n    return img\r\n      ? (updateDirectionInImageCustomVar(\r\n          img,\r\n          \"start\"\r\n        ) as GxImageMultiStateStart)\r\n      : undefined;\r\n  };\r\n\r\n  #computeImages = () => {\r\n    this.#images.clear();\r\n\r\n    this.model?.forEach(itemUIModel => {\r\n      const itemImage = this.#computeImage(itemUIModel.startImgSrc);\r\n\r\n      if (itemImage) {\r\n        this.#images.set(itemUIModel.id, itemImage);\r\n      }\r\n    });\r\n  };\r\n\r\n  #buttonIsCloseButton = (buttonRef: HTMLButtonElement) =>\r\n    buttonRef.className === CLOSE_BUTTON_CLASS;\r\n\r\n  /**\r\n   * Make a set based on the rendered items array to maintain order between the\r\n   * pages, even when re-ordering tabs. This is useful for optimizing rendering\r\n   * performance by not re-ordering pages when the caption's order changes.\r\n   */\r\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\r\n  #updateRenderedPages = (items: TabModel) => {\r\n    this.#renderedPages.clear();\r\n    this.#itemIdToIndex.clear();\r\n\r\n    (items ?? []).forEach(item => {\r\n      if (item.wasRendered) {\r\n        this.#renderedPages.set(item.id, item);\r\n      }\r\n    });\r\n\r\n    // The selected id must be added to the rendered pages, even if it was not\r\n    // marked as \"wasRendered\" in the UI Model\r\n    if (this.selectedId && items !== undefined) {\r\n      const newSelectedTabItem = this.model.find(\r\n        item => item.id === this.selectedId\r\n      );\r\n\r\n      if (newSelectedTabItem) {\r\n        this.#renderedPages.set(this.selectedId, newSelectedTabItem);\r\n      }\r\n    }\r\n  };\r\n\r\n  // #handleItemDblClick = (event: MouseEvent) => {\r\n  //   event.preventDefault();\r\n  //   event.stopPropagation();\r\n\r\n  //   this.expandMainGroup.emit();\r\n  // };\r\n\r\n  #handleDragStart = (event: DragEvent) => {\r\n    const buttonRef = event.composedPath()[0] as HTMLButtonElement;\r\n\r\n    if (buttonRef.tagName.toLowerCase() !== \"button\") {\r\n      return;\r\n    }\r\n\r\n    // The only button that can perform dragstart is the tab button\r\n    const itemIndex = this.#itemIdToIndex.get(buttonRef.id);\r\n\r\n    // Remove dragover event to allow mousemove event to fire\r\n    event.preventDefault();\r\n\r\n    // Store the index of the dragged element\r\n    this.draggedElementIndex = itemIndex;\r\n\r\n    // - - - - - - - - - - - DOM read operations - - - - - - - - - - -\r\n    const mousePositionX = event.clientX;\r\n    const mousePositionY = event.clientY;\r\n    const blockDirection = isBlockDirection(this.tabListPosition);\r\n\r\n    const getItemSize = blockDirection\r\n      ? (item: HTMLElement) => item.getBoundingClientRect().width\r\n      : (item: HTMLElement) => item.getBoundingClientRect().height;\r\n    this.#itemSizes = [...this.#tabListRef.children].map(getItemSize);\r\n\r\n    const buttonRect = (\r\n      event.target as HTMLButtonElement\r\n    ).getBoundingClientRect();\r\n\r\n    // Tab List information\r\n    const tabListSizes = getTabListSizesAndSetPosition(\r\n      this.el,\r\n      this.#tabListRef,\r\n      blockDirection,\r\n      buttonRect\r\n    );\r\n\r\n    // Button information\r\n    const buttonSizes: TabElementSize = {\r\n      xStart: buttonRect.x,\r\n      xEnd: buttonRect.x + buttonRect.width,\r\n      yStart: buttonRect.y,\r\n      yEnd: buttonRect.y + buttonRect.height\r\n    };\r\n\r\n    const mouseDistanceToButtonTopEdge = mousePositionY - buttonSizes.yStart;\r\n    const mouseDistanceToButtonBottomEdge = buttonSizes.yEnd - mousePositionY;\r\n    const mouseDistanceToButtonLeftEdge = mousePositionX - buttonSizes.xStart;\r\n    const mouseDistanceToButtonRightEdge = buttonSizes.xEnd - mousePositionX;\r\n\r\n    // Update mouse limits if drag outside is enabled\r\n    if (this.dragOutside) {\r\n      this.#mouseBoundingLimits = {\r\n        xStart: tabListSizes.xStart - mouseDistanceToButtonRightEdge,\r\n        xEnd: tabListSizes.xEnd + mouseDistanceToButtonLeftEdge,\r\n        yStart: tabListSizes.yStart - mouseDistanceToButtonBottomEdge,\r\n        yEnd: tabListSizes.yEnd + mouseDistanceToButtonTopEdge\r\n      };\r\n    }\r\n\r\n    // Store initial mouse position\r\n    this.#initialMousePosition = blockDirection\r\n      ? mousePositionX\r\n      : mousePositionY;\r\n\r\n    // - - - - - - - - - - - DOM write operations - - - - - - - - - - -\r\n    // Initialize mouse position to avoid initial flickering\r\n    setMousePosition(this.el, mousePositionX, mousePositionY);\r\n\r\n    // Initialize the button position\r\n    setButtonInitialPosition(this.el, buttonSizes.xStart, buttonSizes.yStart);\r\n\r\n    setButtonSize(\r\n      this.el,\r\n      blockDirection ? buttonRect.width : buttonRect.height\r\n    );\r\n\r\n    // Update mouse offset to correctly place the dragged element preview\r\n    setMouseOffset(\r\n      this.el,\r\n      mouseDistanceToButtonLeftEdge,\r\n      mouseDistanceToButtonTopEdge\r\n    );\r\n\r\n    addGrabbingStyle();\r\n\r\n    // Add listeners\r\n    document.addEventListener(\"mousemove\", this.#handleItemDrag, {\r\n      capture: true,\r\n      passive: true\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true\r\n    });\r\n  };\r\n\r\n  #handleDragEnd = () => {\r\n    // Since mousemove callbacks are executed on animation frames, we must also\r\n    // remove the events on animations frame. Otherwise we would remove the\r\n    // events and in the next frame the mousemove handler will be executes\r\n    cancelAnimationFrame(this.#cancelId);\r\n    this.#needForRAF = true;\r\n\r\n    document.removeEventListener(\"mousemove\", this.#handleItemDrag, {\r\n      capture: true\r\n    });\r\n\r\n    document.removeEventListener(\"mouseup\", this.#handleDragEnd, {\r\n      capture: true\r\n    });\r\n\r\n    removeGrabbingStyle();\r\n\r\n    const anItemWasReordered =\r\n      !this.hasCrossedBoundaries &&\r\n      this.draggedElementNewIndex !== this.draggedElementIndex;\r\n\r\n    // Move the item to the new position\r\n    if (anItemWasReordered) {\r\n      const itemToInsert = removeElement(this.model, this.draggedElementIndex);\r\n      insertIntoIndex(this.model, itemToInsert, this.draggedElementNewIndex);\r\n\r\n      // Update last selected index\r\n      this.#adjustLastSelectedIndexValueAfterReorder();\r\n    }\r\n\r\n    // Restore visibility of the dragged element\r\n    this.draggedElementIndex = -1;\r\n    this.draggedElementNewIndex = -1;\r\n\r\n    // Free the memory\r\n    this.#itemSizes = undefined;\r\n\r\n    // Reset state\r\n    this.hasCrossedBoundaries = false;\r\n    this.el.style.removeProperty(TRANSITION_DURATION);\r\n  };\r\n\r\n  #adjustLastSelectedIndexValueAfterReorder = () => {\r\n    // If the dragged element is the selected element, use the new index\r\n    if (this.#selectedIndex === this.draggedElementIndex) {\r\n      this.#selectedIndex = this.draggedElementNewIndex;\r\n    }\r\n    // Dragged element:\r\n    //   - Started: Before the selected index\r\n    //   - Ended: After the selected index or in the same position\r\n    else if (\r\n      this.draggedElementIndex < this.#selectedIndex &&\r\n      this.#selectedIndex <= this.draggedElementNewIndex\r\n    ) {\r\n      this.#selectedIndex--;\r\n    }\r\n    // Dragged element:\r\n    //   - Started: After the selected index\r\n    //   - Ended: Before the selected index or in the same position\r\n    else if (\r\n      this.#selectedIndex < this.draggedElementIndex &&\r\n      this.draggedElementNewIndex <= this.#selectedIndex\r\n    ) {\r\n      this.#selectedIndex++;\r\n    }\r\n  };\r\n\r\n  #handleItemDrag = (event: MouseEvent) => {\r\n    this.#lastDragEvent = event;\r\n\r\n    if (!this.#needForRAF) {\r\n      return;\r\n    }\r\n    this.#needForRAF = false; // No need to call RAF up until next frame\r\n\r\n    this.#cancelId = requestAnimationFrame(() => {\r\n      this.#needForRAF = true; // RAF now consumes the movement instruction so a new one can come\r\n\r\n      const mousePositionX = this.#lastDragEvent.clientX;\r\n      const mousePositionY = this.#lastDragEvent.clientY;\r\n\r\n      setMousePosition(this.el, mousePositionX, mousePositionY);\r\n\r\n      // There is no need to update the preview of the reorder\r\n      if (this.hasCrossedBoundaries) {\r\n        return;\r\n      }\r\n\r\n      const mouseLimits = this.#mouseBoundingLimits;\r\n\r\n      // Check mouse limits if drag outside is enabled\r\n      if (this.dragOutside) {\r\n        const draggedButtonIsInsideTheTabList =\r\n          inBetween(mouseLimits.xStart, mousePositionX, mouseLimits.xEnd) &&\r\n          inBetween(mouseLimits.yStart, mousePositionY, mouseLimits.yEnd);\r\n\r\n        // Emit the itemDragStart event the first time the button is out of the\r\n        // mouse bounds (`mouseBoundingLimits`)\r\n        if (!draggedButtonIsInsideTheTabList) {\r\n          this.hasCrossedBoundaries = true;\r\n\r\n          // Remove transition before the render to avoid flickering in the animation\r\n          this.el.style.setProperty(TRANSITION_DURATION, \"0s\");\r\n\r\n          this.itemDragStart.emit(this.draggedElementIndex);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // There is no need to re-order the items in the preview\r\n      if (this.model.length === 1) {\r\n        return;\r\n      }\r\n\r\n      // In this point, the preview is inside the tab list, we should check\r\n      // in which place is the preview to give feedback for the item's reorder\r\n      const mousePosition = isBlockDirection(this.tabListPosition)\r\n        ? mousePositionX\r\n        : mousePositionY;\r\n\r\n      const hasMovedToTheEnd = this.#initialMousePosition < mousePosition;\r\n\r\n      // Distance traveled from the initial mouse position\r\n      let distanceTraveled = Math.abs(\r\n        this.#initialMousePosition - mousePosition\r\n      );\r\n\r\n      let newIndex = this.draggedElementIndex;\r\n\r\n      if (hasMovedToTheEnd) {\r\n        // While it is not the last item and the distance traveled is greater\r\n        // than half the size of the next item\r\n        while (\r\n          newIndex < this.model.length - 1 &&\r\n          distanceTraveled - this.#itemSizes[newIndex + 1] / 2 > 0\r\n        ) {\r\n          distanceTraveled -= this.#itemSizes[newIndex + 1];\r\n          newIndex++;\r\n        }\r\n      } else {\r\n        // While it is not the first item and the distance traveled is greater\r\n        // than half the size of the previous item\r\n        while (\r\n          newIndex > 0 &&\r\n          distanceTraveled - this.#itemSizes[newIndex - 1] / 2 > 0\r\n        ) {\r\n          distanceTraveled -= this.#itemSizes[newIndex - 1];\r\n          newIndex--;\r\n        }\r\n      }\r\n\r\n      // Check if should update the dragged element index in the preview\r\n      if (this.draggedElementNewIndex !== newIndex) {\r\n        this.draggedElementNewIndex = newIndex;\r\n      }\r\n    });\r\n  };\r\n\r\n  #preventMouseDownOnScroll = (event: MouseEvent) => {\r\n    // We have to prevent the mousedown event to make work the close with the\r\n    // mouse wheel, because when the page has scroll, the auxClick is not fired\r\n    if (event.buttons !== MouseEventButtons.WHEEL) {\r\n      return;\r\n    }\r\n    const buttonRef = event.composedPath()[0] as HTMLButtonElement;\r\n\r\n    if (buttonRef.tagName.toLowerCase() !== \"button\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  #handleSelectedItemChange = (event: PointerEvent) => {\r\n    event.stopPropagation();\r\n    const buttonRef = event.composedPath()[0] as HTMLButtonElement;\r\n\r\n    // Check the click event is performed on a button element\r\n    if (buttonRef.tagName.toLowerCase() !== \"button\") {\r\n      return;\r\n    }\r\n\r\n    // Click was performed on the close button --> itemClose event\r\n    if (this.#buttonIsCloseButton(buttonRef)) {\r\n      // The parent is the tab button with the itemId\r\n      this.#emitCloseEvent(buttonRef.parentElement.id, event);\r\n    }\r\n    // Otherwise --> selectedItemChange event\r\n    else {\r\n      const itemId = buttonRef.id;\r\n\r\n      // Don't fire the selectedItemChange event if the item is already selected\r\n      if (this.selectedId === itemId) {\r\n        return;\r\n      }\r\n      const itemIndex = this.#itemIdToIndex.get(itemId)!;\r\n\r\n      const eventInfo = this.selectedItemChange.emit({\r\n        lastSelectedIndex: this.#selectedIndex,\r\n        newSelectedId: itemId,\r\n        newSelectedIndex: itemIndex\r\n      });\r\n\r\n      if (!eventInfo.defaultPrevented) {\r\n        this.#selectedIndex = itemIndex;\r\n        this.selectedId = itemId;\r\n      }\r\n    }\r\n  };\r\n\r\n  #handleClose = (event: PointerEvent) => {\r\n    // Check if the action was performed on the close button or the action\r\n    // was a click on the wheel\r\n    if (event.button !== MouseEventButton.WHEEL) {\r\n      return;\r\n    }\r\n    const buttonRef = event.composedPath()[0] as HTMLButtonElement;\r\n\r\n    if (buttonRef.tagName.toLowerCase() === \"button\") {\r\n      const itemId = this.#buttonIsCloseButton(buttonRef)\r\n        ? buttonRef.parentElement.id\r\n        : buttonRef.id;\r\n      this.#emitCloseEvent(itemId, event);\r\n    }\r\n  };\r\n\r\n  #emitCloseEvent = (itemId: string, event: PointerEvent) => {\r\n    // Assume that the itemId always maps to an item\r\n    const itemUIModel = this.model.find(({ id }) => id === itemId)!;\r\n    const hasCloseButton = itemUIModel.closeButton ?? this.closeButton;\r\n\r\n    if (!hasCloseButton) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const itemIndex = this.#itemIdToIndex.get(itemId)!;\r\n\r\n    this.itemClose.emit({\r\n      itemIndex: itemIndex,\r\n      itemId: itemId\r\n    });\r\n  };\r\n\r\n  #handleTabFocus = (event: KeyboardEvent) => {\r\n    const keyEventHandler = this.#keyEvents[event.code];\r\n    if (!keyEventHandler) {\r\n      return;\r\n    }\r\n\r\n    const currentFocusedCaption = focusComposedPath()[0].closest(\r\n      \".\" + TAB_BUTTON_CLASS\r\n    ) as HTMLButtonElement;\r\n\r\n    keyEventHandler(\r\n      isBlockDirection(this.tabListPosition),\r\n      event,\r\n      currentFocusedCaption\r\n    );\r\n  };\r\n\r\n  #getEnabledItems = (): number => {\r\n    let itemsEnabled = 0;\r\n    let itemIndex = 0;\r\n\r\n    while (itemsEnabled < 2 && itemIndex < this.model.length) {\r\n      const itemUIModel = this.model[itemIndex];\r\n\r\n      if (\r\n        itemUIModel.disabled === false ||\r\n        (!this.disabled && itemUIModel.disabled !== true)\r\n      ) {\r\n        itemsEnabled++;\r\n      }\r\n\r\n      itemIndex++;\r\n    }\r\n\r\n    return itemsEnabled;\r\n  };\r\n\r\n  #imgRender = (item: TabItemModel) =>\r\n    item.startImgType === \"img\" &&\r\n    item.startImgSrc && (\r\n      <img\r\n        aria-hidden=\"true\"\r\n        class=\"caption-image img\"\r\n        part={TAB_PARTS_DICTIONARY.IMAGE}\r\n        alt=\"\"\r\n        src={item.startImgSrc}\r\n        loading=\"lazy\"\r\n      />\r\n    );\r\n\r\n  #renderTabListPosition = (\r\n    position: \"start\" | \"end\",\r\n    blockDirection: boolean,\r\n    startDirection: boolean\r\n  ) => {\r\n    const tabListPosition = `tab-list-${position}` as const;\r\n\r\n    return (\r\n      <div\r\n        key={tabListPosition}\r\n        class={tabListPosition}\r\n        part={tokenMap({\r\n          [TAB_PARTS_DICTIONARY.LIST_START]: position === \"start\",\r\n          [TAB_PARTS_DICTIONARY.LIST_END]: position === \"end\",\r\n          [this.tabListPosition]: true,\r\n          [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n          [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n          [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n          [TAB_PARTS_DICTIONARY.END]: !startDirection\r\n        })}\r\n      >\r\n        <slot name={tabListPosition} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  #renderTabList = (thereAreShiftedElements: boolean) => {\r\n    const blockDirection = isBlockDirection(this.tabListPosition);\r\n    const startDirection = isStartDirection(this.tabListPosition);\r\n    const enabledItems = this.#getEnabledItems();\r\n    const atLeastOneItemsIsEnabled = enabledItems >= 1;\r\n\r\n    return (\r\n      <div\r\n        role=\"tablist\"\r\n        aria-label={this.accessibleName}\r\n        class={{\r\n          \"tab-list\": true,\r\n          \"tab-list--block\": blockDirection,\r\n          \"tab-list--inline\": !blockDirection\r\n        }}\r\n        // TODO: Add \"DRAGGING\" parts\r\n        part={tokenMap({\r\n          [TAB_PARTS_DICTIONARY.LIST]: true,\r\n          [this.tabListPosition]: true,\r\n          [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n          [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n          [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n          [TAB_PARTS_DICTIONARY.END]: !startDirection\r\n        })}\r\n        // TODO: Don't add this handler if there is no items with closeButton\r\n        onAuxClick={atLeastOneItemsIsEnabled ? this.#handleClose : undefined}\r\n        onClick={\r\n          atLeastOneItemsIsEnabled ? this.#handleSelectedItemChange : undefined\r\n        }\r\n        // TODO: Add support to drag the item when it is disabled.\r\n        // TODO: Add support to position the item in different areas\r\n        onDragStart={\r\n          this.sortable && atLeastOneItemsIsEnabled\r\n            ? this.#handleDragStart\r\n            : undefined\r\n        }\r\n        onKeyDown={\r\n          this.model.length >= 2 && enabledItems >= 2\r\n            ? this.#handleTabFocus\r\n            : undefined\r\n        }\r\n        // TODO: Don't add this handler if there is no items with closeButton\r\n        onMouseDown={\r\n          atLeastOneItemsIsEnabled ? this.#preventMouseDownOnScroll : undefined\r\n        }\r\n        ref={el => (this.#tabListRef = el)}\r\n      >\r\n        {this.model.map((item, index) =>\r\n          this.#renderTabButton(\r\n            item,\r\n            index,\r\n            thereAreShiftedElements,\r\n            blockDirection,\r\n            startDirection\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  #renderTabButton = (\r\n    item: TabItemModel,\r\n    index: number,\r\n    thereAreShiftedElements: boolean,\r\n    blockDirection: boolean,\r\n    startDirection: boolean\r\n  ) => {\r\n    const closeButton = item.closeButton ?? this.closeButton;\r\n    const isDisabled = item.disabled ?? this.disabled;\r\n    const selected = item.id === this.selectedId;\r\n    this.#itemIdToIndex.set(item.id, index);\r\n\r\n    const startImage = this.#images.get(item.id);\r\n    const startImageClasses = startImage?.classes;\r\n    const isDecorativeImage =\r\n      isPseudoElementImg(item.startImgSrc, item.startImgType) && !!startImage;\r\n\r\n    return (\r\n      <button\r\n        key={item.id}\r\n        id={item.id}\r\n        role=\"tab\"\r\n        aria-controls={PANEL_ID(item.id)}\r\n        aria-label={\r\n          item.accessibleName ?? (!this.showCaptions ? item.name : null)\r\n        }\r\n        aria-selected={selected.toString()}\r\n        class={{\r\n          [TAB_BUTTON_CLASS]: true,\r\n          \"no-captions\": !this.showCaptions,\r\n\r\n          sortable: this.sortable,\r\n          selected: selected,\r\n\r\n          [`start-img-type--${\r\n            item.startImgType ?? \"background\"\r\n          } pseudo-img--start`]: isDecorativeImage,\r\n          [startImageClasses]: isDecorativeImage && !!startImageClasses,\r\n\r\n          \"dragged-element\": this.draggedElementIndex === index,\r\n          \"dragged-element--outside\":\r\n            this.draggedElementIndex === index &&\r\n            this.hasCrossedBoundaries &&\r\n            this.model.length > 1,\r\n          \"shifted-element\": this.draggedElementIndex !== -1,\r\n\r\n          \"shifted-element--start\":\r\n            thereAreShiftedElements &&\r\n            this.draggedElementIndex < index &&\r\n            index <= this.draggedElementNewIndex,\r\n\r\n          \"shifted-element--end\":\r\n            thereAreShiftedElements &&\r\n            this.draggedElementNewIndex <= index &&\r\n            index < this.draggedElementIndex\r\n        }}\r\n        part={tokenMap({\r\n          [item.id]: true,\r\n          [TAB_PARTS_DICTIONARY.TAB]: true,\r\n          [this.tabListPosition]: true,\r\n          [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n          [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n          [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n          [TAB_PARTS_DICTIONARY.END]: !startDirection,\r\n          [TAB_PARTS_DICTIONARY.CLOSABLE]: closeButton,\r\n          [TAB_PARTS_DICTIONARY.NOT_CLOSABLE]: !closeButton,\r\n          [TAB_PARTS_DICTIONARY.SELECTED]: selected,\r\n          [TAB_PARTS_DICTIONARY.NOT_SELECTED]: !selected,\r\n          [TAB_PARTS_DICTIONARY.DISABLED]: isDisabled\r\n        })}\r\n        disabled={isDisabled}\r\n        style={isDecorativeImage ? startImage.styles : undefined}\r\n        // onDblClick={\r\n        //   this.direction === \"main\" ? this.#handleItemDblClick : null\r\n        // }\r\n      >\r\n        {this.#imgRender(item)}\r\n\r\n        {this.showCaptions && item.name}\r\n\r\n        {closeButton && (\r\n          <button\r\n            aria-label={this.closeButtonAccessibleName}\r\n            class={CLOSE_BUTTON_CLASS}\r\n            part={tokenMap({\r\n              [TAB_PARTS_DICTIONARY.CLOSE_BUTTON]: true,\r\n              [this.tabListPosition]: true,\r\n              [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n              [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n              [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n              [TAB_PARTS_DICTIONARY.END]: !startDirection,\r\n              [TAB_PARTS_DICTIONARY.SELECTED]: selected,\r\n              [TAB_PARTS_DICTIONARY.NOT_SELECTED]: !selected,\r\n              [TAB_PARTS_DICTIONARY.DISABLED]: isDisabled\r\n            })}\r\n            disabled={isDisabled}\r\n            type=\"button\"\r\n          ></button>\r\n        )}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  #renderTabPages = (blockDirection: boolean, startDirection: boolean) => (\r\n    <div\r\n      class={{\r\n        \"panel-container\": true,\r\n        \"panel-container--collapsed\": !this.expanded\r\n      }}\r\n      part={tokenMap({\r\n        [TAB_PARTS_DICTIONARY.PANEL_CONTAINER]: true,\r\n        [this.tabListPosition]: true,\r\n        [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n        [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n        [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n        [TAB_PARTS_DICTIONARY.END]: !startDirection\r\n      })}\r\n      ref={el => (this.#tabPageRef = el)}\r\n    >\r\n      {[...this.#renderedPages.values()].map(this.#renderTabPanel)}\r\n    </div>\r\n  );\r\n\r\n  #renderTabPanel = (item: TabItemModel) => {\r\n    // TODO: Avoid this check as much as possible\r\n    const blockDirection = isBlockDirection(this.tabListPosition);\r\n    const startDirection = isStartDirection(this.tabListPosition);\r\n\r\n    const contain = item.contain ?? this.contain;\r\n    const isDisabled = item.disabled ?? this.disabled;\r\n    const overflow = item.overflow ?? this.overflow;\r\n    const selected = item.id === this.selectedId;\r\n\r\n    const hasContain = contain !== \"none\";\r\n    const hasOverflow =\r\n      overflow !== \"visible\" && overflow !== \"visible visible\";\r\n\r\n    return (\r\n      <div\r\n        key={PANEL_ID(item.id)}\r\n        id={PANEL_ID(item.id)}\r\n        role={!this.tabButtonHidden ? \"tabpanel\" : undefined}\r\n        aria-labelledby={!this.tabButtonHidden ? item.id : undefined}\r\n        class={{\r\n          panel: true,\r\n          \"panel--selected\": item.id === this.selectedId,\r\n          \"panel--hidden\": !(item.id === this.selectedId),\r\n          [SCROLLABLE_CLASS]:\r\n            hasOverflow &&\r\n            (overflow.includes(\"auto\" satisfies CssOverflowProperty) ||\r\n              overflow.includes(\"scroll\" satisfies CssOverflowProperty))\r\n        }}\r\n        style={\r\n          hasContain || hasOverflow\r\n            ? {\r\n                contain: hasContain ? contain : undefined,\r\n                overflow: hasOverflow ? overflow : undefined\r\n              }\r\n            : undefined\r\n        }\r\n        part={tokenMap({\r\n          [item.id]: true,\r\n          [TAB_PARTS_DICTIONARY.PANEL]: true,\r\n          [this.tabListPosition]: true,\r\n          [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n          [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n          [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n          [TAB_PARTS_DICTIONARY.END]: !startDirection,\r\n          [TAB_PARTS_DICTIONARY.SELECTED]: selected,\r\n          [TAB_PARTS_DICTIONARY.NOT_SELECTED]: !selected,\r\n          [TAB_PARTS_DICTIONARY.DISABLED]: isDisabled\r\n        })}\r\n      >\r\n        <slot name={item.id} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  #renderDragPreview = (draggedElement: TabItemModel) => {\r\n    const blockDirection = isBlockDirection(this.tabListPosition);\r\n    const startDirection = isStartDirection(this.tabListPosition);\r\n    const selected = draggedElement.id === this.selectedId;\r\n\r\n    const startImage = this.#images.get(draggedElement.id);\r\n    const startImageClasses = startImage?.classes;\r\n    const isDecorativeImage =\r\n      isPseudoElementImg(\r\n        draggedElement.startImgSrc,\r\n        draggedElement.startImgType\r\n      ) && !!startImage;\r\n\r\n    const closeButton = draggedElement.closeButton ?? this.closeButton;\r\n\r\n    return (\r\n      <button\r\n        // TODO: Check if this is necessary\r\n        // aria-hidden=\"true\"\r\n        class={{\r\n          [TAB_BUTTON_CLASS]: true,\r\n          [DRAG_PREVIEW]: true,\r\n          \"no-captions\": !this.showCaptions,\r\n\r\n          selected: selected,\r\n\r\n          [`start-img-type--${\r\n            draggedElement.startImgType ?? \"background\"\r\n          } pseudo-img--start`]: isDecorativeImage,\r\n          [startImageClasses]: isDecorativeImage && !!startImageClasses,\r\n\r\n          [DRAG_PREVIEW_OUTSIDE]: this.hasCrossedBoundaries,\r\n          [DRAG_PREVIEW_INSIDE_INLINE]:\r\n            !this.hasCrossedBoundaries && !blockDirection,\r\n          [DRAG_PREVIEW_INSIDE_BLOCK]:\r\n            !this.hasCrossedBoundaries && blockDirection\r\n        }}\r\n        part={tokenMap({\r\n          [draggedElement.id]: true,\r\n          [TAB_PARTS_DICTIONARY.TAB]: true,\r\n          [TAB_PARTS_DICTIONARY.DRAGGING]: true,\r\n          [this.tabListPosition]: true,\r\n          [TAB_PARTS_DICTIONARY.BLOCK]: blockDirection,\r\n          [TAB_PARTS_DICTIONARY.INLINE]: !blockDirection,\r\n          [TAB_PARTS_DICTIONARY.START]: startDirection,\r\n          [TAB_PARTS_DICTIONARY.END]: !startDirection,\r\n          [TAB_PARTS_DICTIONARY.DRAGGING_OUT_OF_TAB_LIST]:\r\n            this.hasCrossedBoundaries,\r\n          [TAB_PARTS_DICTIONARY.DRAGGING_OVER_TAB_LIST]:\r\n            !this.hasCrossedBoundaries,\r\n          [TAB_PARTS_DICTIONARY.CLOSABLE]: closeButton,\r\n          [TAB_PARTS_DICTIONARY.NOT_CLOSABLE]: !closeButton,\r\n          [TAB_PARTS_DICTIONARY.SELECTED]: selected,\r\n          [TAB_PARTS_DICTIONARY.NOT_SELECTED]: !selected\r\n        })}\r\n        style={isDecorativeImage ? startImage.styles : undefined}\r\n        ref={el => (this.#dragPreviewRef = el)}\r\n      >\r\n        {this.#imgRender(draggedElement)}\r\n\r\n        {this.showCaptions && draggedElement.name}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  #initializeState = () => {\r\n    this.#updateRenderedPages(this.model);\r\n  };\r\n\r\n  connectedCallback() {\r\n    adoptCommonThemes(this.el.shadowRoot.adoptedStyleSheets);\r\n\r\n    // Initialize default getImagePathCallback\r\n    GET_IMAGE_PATH_CALLBACK_REGISTRY ??=\r\n      getControlRegisterProperty(\"getImagePathCallback\", \"ch-tab-render\") ??\r\n      DEFAULT_GET_IMAGE_PATH_CALLBACK;\r\n\r\n    this.#computeImages();\r\n  }\r\n\r\n  // TODO: Use connectedCallback\r\n  componentWillLoad() {\r\n    this.#initializeState();\r\n  }\r\n\r\n  render() {\r\n    if (this.model == null || this.model.length === 0) {\r\n      return \"\";\r\n    }\r\n\r\n    const blockDirection = isBlockDirection(this.tabListPosition);\r\n    const startDirection = isStartDirection(this.tabListPosition);\r\n    const draggedIndex = this.draggedElementIndex;\r\n    const draggedElement = this.model[draggedIndex];\r\n    const thereAreShiftedElementsInPreview =\r\n      !this.hasCrossedBoundaries &&\r\n      this.draggedElementNewIndex !== -1 &&\r\n      this.draggedElementIndex !== this.draggedElementNewIndex;\r\n\r\n    return (\r\n      <Host\r\n        class={\r\n          !this.tabButtonHidden ? `ch-tab--${this.tabListPosition}` : undefined\r\n        }\r\n      >\r\n        {!this.tabButtonHidden && [\r\n          this.showTabListStart &&\r\n            this.#renderTabListPosition(\r\n              \"start\",\r\n              blockDirection,\r\n              startDirection\r\n            ),\r\n          this.#renderTabList(thereAreShiftedElementsInPreview),\r\n          this.showTabListEnd &&\r\n            this.#renderTabListPosition(\"end\", blockDirection, startDirection)\r\n        ]}\r\n\r\n        {this.#renderTabPages(blockDirection, startDirection)}\r\n\r\n        {draggedIndex !== -1 && this.#renderDragPreview(draggedElement)}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}